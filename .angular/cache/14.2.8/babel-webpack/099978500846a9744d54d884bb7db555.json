{"ast":null,"code":"import { TextSelection } from 'prosemirror-state';\nimport { markApplies } from 'ngx-editor/helpers';\n\nconst removeLink = () => {\n  return (state, dispatch) => {\n    const {\n      doc,\n      selection,\n      tr\n    } = state;\n    const {\n      $head: {\n        pos\n      },\n      from,\n      to\n    } = selection; // if the cursor is on the link without any selection\n\n    if (from === to) {\n      const $pos = doc.resolve(pos);\n      const linkStart = pos - $pos.textOffset;\n      const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n      tr.removeMark(linkStart, linkEnd);\n    } else {\n      tr.removeMark(from, to);\n    }\n\n    if (!tr.docChanged) {\n      return false;\n    }\n\n    dispatch?.(tr);\n    return true;\n  };\n}; // Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\n\n\nconst applyMark = (type, attrs = {}) => {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection\n    } = state;\n    const {\n      empty,\n      ranges,\n      $from,\n      $to\n    } = selection;\n\n    if (empty && selection instanceof TextSelection) {\n      const {\n        $cursor\n      } = selection;\n\n      if (!$cursor || !markApplies(state.doc, ranges, type)) {\n        return false;\n      }\n\n      tr.addStoredMark(type.create(attrs));\n\n      if (!tr.storedMarksSet) {\n        return false;\n      }\n\n      dispatch?.(tr);\n    } else {\n      tr.addMark($from.pos, $to.pos, type.create(attrs));\n\n      if (!tr.docChanged) {\n        return false;\n      }\n\n      dispatch?.(tr.scrollIntoView());\n    }\n\n    return true;\n  };\n};\n\nconst removeMark = type => {\n  return (state, dispatch) => {\n    const {\n      tr,\n      selection,\n      storedMarks,\n      doc\n    } = state;\n    const {\n      empty,\n      ranges\n    } = selection;\n\n    if (empty && selection instanceof TextSelection) {\n      const {\n        $cursor\n      } = selection;\n\n      if (!$cursor || !markApplies(state.doc, ranges, type)) {\n        return false;\n      }\n\n      if (type.isInSet(storedMarks || $cursor.marks())) {\n        tr.removeStoredMark(type);\n        dispatch?.(tr);\n        return true;\n      }\n    } else {\n      for (const range of ranges) {\n        const {\n          $from,\n          $to\n        } = range;\n        const hasMark = doc.rangeHasMark($from.pos, $to.pos, type);\n\n        if (hasMark) {\n          tr.removeMark($from.pos, $to.pos, type);\n        }\n      }\n\n      if (!tr.docChanged) {\n        return false;\n      }\n\n      dispatch?.(tr.scrollIntoView());\n    }\n\n    return false;\n  };\n};\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { applyMark, removeLink, removeMark };","map":{"version":3,"names":["TextSelection","markApplies","removeLink","state","dispatch","doc","selection","tr","$head","pos","from","to","$pos","resolve","linkStart","textOffset","linkEnd","parent","child","index","nodeSize","removeMark","docChanged","applyMark","type","attrs","empty","ranges","$from","$to","$cursor","addStoredMark","create","storedMarksSet","addMark","scrollIntoView","storedMarks","isInSet","marks","removeStoredMark","range","hasMark","rangeHasMark"],"sources":["C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/ngx-editor/fesm2020/ngx-editor-commands.mjs"],"sourcesContent":["import { TextSelection } from 'prosemirror-state';\nimport { markApplies } from 'ngx-editor/helpers';\n\nconst removeLink = () => {\n    return (state, dispatch) => {\n        const { doc, selection, tr } = state;\n        const { $head: { pos }, from, to } = selection;\n        // if the cursor is on the link without any selection\n        if (from === to) {\n            const $pos = doc.resolve(pos);\n            const linkStart = pos - $pos.textOffset;\n            const linkEnd = linkStart + $pos.parent.child($pos.index()).nodeSize;\n            tr.removeMark(linkStart, linkEnd);\n        }\n        else {\n            tr.removeMark(from, to);\n        }\n        if (!tr.docChanged) {\n            return false;\n        }\n        dispatch?.(tr);\n        return true;\n    };\n};\n\n// Ref: https://github.com/ProseMirror/prosemirror-commands/blob/master/src/commands.js\nconst applyMark = (type, attrs = {}) => {\n    return (state, dispatch) => {\n        const { tr, selection } = state;\n        const { empty, ranges, $from, $to } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            tr.addStoredMark(type.create(attrs));\n            if (!tr.storedMarksSet) {\n                return false;\n            }\n            dispatch?.(tr);\n        }\n        else {\n            tr.addMark($from.pos, $to.pos, type.create(attrs));\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return true;\n    };\n};\n\nconst removeMark = (type) => {\n    return (state, dispatch) => {\n        const { tr, selection, storedMarks, doc } = state;\n        const { empty, ranges } = selection;\n        if (empty && selection instanceof TextSelection) {\n            const { $cursor } = selection;\n            if (!$cursor || !markApplies(state.doc, ranges, type)) {\n                return false;\n            }\n            if (type.isInSet(storedMarks || $cursor.marks())) {\n                tr.removeStoredMark(type);\n                dispatch?.(tr);\n                return true;\n            }\n        }\n        else {\n            for (const range of ranges) {\n                const { $from, $to } = range;\n                const hasMark = doc.rangeHasMark($from.pos, $to.pos, type);\n                if (hasMark) {\n                    tr.removeMark($from.pos, $to.pos, type);\n                }\n            }\n            if (!tr.docChanged) {\n                return false;\n            }\n            dispatch?.(tr.scrollIntoView());\n        }\n        return false;\n    };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { applyMark, removeLink, removeMark };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}