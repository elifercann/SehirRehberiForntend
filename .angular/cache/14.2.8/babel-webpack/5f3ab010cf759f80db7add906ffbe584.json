{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nconst computePosition = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator(function* (reference, floating, config) {\n    const {\n      placement = 'bottom',\n      strategy = 'absolute',\n      middleware = [],\n      platform\n    } = config;\n    const validMiddleware = middleware.filter(Boolean);\n    const rtl = yield platform.isRTL == null ? void 0 : platform.isRTL(floating);\n    {\n      if (platform == null) {\n        console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n      }\n\n      if (validMiddleware.filter(_ref => {\n        let {\n          name\n        } = _ref;\n        return name === 'autoPlacement' || name === 'flip';\n      }).length > 1) {\n        throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n      }\n\n      if (!reference || !floating) {\n        console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n      }\n    }\n    let rects = yield platform.getElementRects({\n      reference,\n      floating,\n      strategy\n    });\n    let {\n      x,\n      y\n    } = computeCoordsFromPlacement(rects, placement, rtl);\n    let statefulPlacement = placement;\n    let middlewareData = {};\n    let resetCount = 0;\n\n    for (let i = 0; i < validMiddleware.length; i++) {\n      const {\n        name,\n        fn\n      } = validMiddleware[i];\n      const {\n        x: nextX,\n        y: nextY,\n        data,\n        reset\n      } = yield fn({\n        x,\n        y,\n        initialPlacement: placement,\n        placement: statefulPlacement,\n        strategy,\n        middlewareData,\n        rects,\n        platform,\n        elements: {\n          reference,\n          floating\n        }\n      });\n      x = nextX != null ? nextX : x;\n      y = nextY != null ? nextY : y;\n      middlewareData = { ...middlewareData,\n        [name]: { ...middlewareData[name],\n          ...data\n        }\n      };\n      {\n        if (resetCount > 50) {\n          console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n        }\n      }\n\n      if (reset && resetCount <= 50) {\n        resetCount++;\n\n        if (typeof reset === 'object') {\n          if (reset.placement) {\n            statefulPlacement = reset.placement;\n          }\n\n          if (reset.rects) {\n            rects = reset.rects === true ? yield platform.getElementRects({\n              reference,\n              floating,\n              strategy\n            }) : reset.rects;\n          }\n\n          ({\n            x,\n            y\n          } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n        }\n\n        i = -1;\n        continue;\n      }\n    }\n\n    return {\n      x,\n      y,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData\n    };\n  });\n\n  return function computePosition(_x, _x2, _x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nfunction detectOverflow(_x4, _x5) {\n  return _detectOverflow.apply(this, arguments);\n}\n\nfunction _detectOverflow() {\n  _detectOverflow = _asyncToGenerator(function* (middlewareArguments, options) {\n    var _await$platform$isEle;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    const {\n      x,\n      y,\n      platform,\n      rects,\n      elements,\n      strategy\n    } = middlewareArguments;\n    const {\n      boundary = 'clippingAncestors',\n      rootBoundary = 'viewport',\n      elementContext = 'floating',\n      altBoundary = false,\n      padding = 0\n    } = options;\n    const paddingObject = getSideObjectFromPadding(padding);\n    const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n    const element = elements[altBoundary ? altContext : elementContext];\n    const clippingClientRect = rectToClientRect(yield platform.getClippingRect({\n      element: ((_await$platform$isEle = yield platform.isElement == null ? void 0 : platform.isElement(element)) != null ? _await$platform$isEle : true) ? element : element.contextElement || (yield platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating)),\n      boundary,\n      rootBoundary,\n      strategy\n    }));\n    const rect = elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference;\n    const offsetParent = yield platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating);\n    const offsetScale = (yield platform.isElement == null ? void 0 : platform.isElement(offsetParent)) ? (yield platform.getScale == null ? void 0 : platform.getScale(offsetParent)) || {\n      x: 1,\n      y: 1\n    } : {\n      x: 1,\n      y: 1\n    };\n    const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? yield platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n      rect,\n      offsetParent,\n      strategy\n    }) : rect);\n    return {\n      top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n      bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n      left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n      right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n    };\n  });\n  return _detectOverflow.apply(this, arguments);\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  fn(middlewareArguments) {\n    return _asyncToGenerator(function* () {\n      // Since `element` is required, we don't Partial<> the type\n      const {\n        element,\n        padding = 0\n      } = options != null ? options : {};\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        platform\n      } = middlewareArguments;\n\n      if (element == null) {\n        {\n          console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n        }\n        return {};\n      }\n\n      const paddingObject = getSideObjectFromPadding(padding);\n      const coords = {\n        x,\n        y\n      };\n      const axis = getMainAxisFromPlacement(placement);\n      const alignment = getAlignment(placement);\n      const length = getLengthFromAxis(axis);\n      const arrowDimensions = yield platform.getDimensions(element);\n      const minProp = axis === 'y' ? 'top' : 'left';\n      const maxProp = axis === 'y' ? 'bottom' : 'right';\n      const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n      const startDiff = coords[axis] - rects.reference[axis];\n      const arrowOffsetParent = yield platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element);\n      let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n      if (clientSize === 0) {\n        clientSize = rects.floating[length];\n      }\n\n      const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n      // point is outside the floating element's bounds\n\n      const min = paddingObject[minProp];\n      const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n      const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n      const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n      const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n      const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n      const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n      return {\n        [axis]: coords[axis] - alignmentOffset,\n        data: {\n          [axis]: offset,\n          centerOffset: center - offset\n        }\n      };\n    })();\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n        const {\n          x,\n          y,\n          rects,\n          middlewareData,\n          placement,\n          platform,\n          elements\n        } = middlewareArguments;\n        const {\n          alignment = null,\n          allowedPlacements = allPlacements,\n          autoAlignment = true,\n          ...detectOverflowOptions\n        } = options;\n        const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n        const overflow = yield detectOverflow(middlewareArguments, detectOverflowOptions);\n        const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n        const currentPlacement = placements[currentIndex];\n\n        if (currentPlacement == null) {\n          return {};\n        }\n\n        const {\n          main,\n          cross\n        } = getAlignmentSides(currentPlacement, rects, yield platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)); // Make `computeCoords` start from the right place\n\n        if (placement !== currentPlacement) {\n          return {\n            x,\n            y,\n            reset: {\n              placement: placements[0]\n            }\n          };\n        }\n\n        const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n        const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n          placement: currentPlacement,\n          overflows: currentOverflows\n        }];\n        const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n        if (nextPlacement) {\n          return {\n            data: {\n              index: currentIndex + 1,\n              overflows: allOverflows\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n        const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n          let {\n            overflows\n          } = _ref;\n          return overflows.every(overflow => overflow <= 0);\n        })) == null ? void 0 : _placementsSortedByLe.placement;\n        const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n        if (resetPlacement !== placement) {\n          return {\n            data: {\n              index: currentIndex + 1,\n              overflows: allOverflows\n            },\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n\n        return {};\n      })();\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        var _middlewareData$flip;\n\n        const {\n          placement,\n          middlewareData,\n          rects,\n          initialPlacement,\n          platform,\n          elements\n        } = middlewareArguments;\n        const {\n          mainAxis: checkMainAxis = true,\n          crossAxis: checkCrossAxis = true,\n          fallbackPlacements: specifiedFallbackPlacements,\n          fallbackStrategy = 'bestFit',\n          flipAlignment = true,\n          ...detectOverflowOptions\n        } = options;\n        const side = getSide(placement);\n        const isBasePlacement = side === initialPlacement;\n        const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n        const placements = [initialPlacement, ...fallbackPlacements];\n        const overflow = yield detectOverflow(middlewareArguments, detectOverflowOptions);\n        const overflows = [];\n        let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n        if (checkMainAxis) {\n          overflows.push(overflow[side]);\n        }\n\n        if (checkCrossAxis) {\n          const {\n            main,\n            cross\n          } = getAlignmentSides(placement, rects, yield platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n          overflows.push(overflow[main], overflow[cross]);\n        }\n\n        overflowsData = [...overflowsData, {\n          placement,\n          overflows\n        }]; // One or more sides is overflowing\n\n        if (!overflows.every(side => side <= 0)) {\n          var _middlewareData$flip$, _middlewareData$flip2;\n\n          const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n          const nextPlacement = placements[nextIndex];\n\n          if (nextPlacement) {\n            // Try next placement and re-run the lifecycle\n            return {\n              data: {\n                index: nextIndex,\n                overflows: overflowsData\n              },\n              reset: {\n                placement: nextPlacement\n              }\n            };\n          }\n\n          let resetPlacement = 'bottom';\n\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n                if (placement) {\n                  resetPlacement = placement;\n                }\n\n                break;\n              }\n\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n\n          if (placement !== resetPlacement) {\n            return {\n              reset: {\n                placement: resetPlacement\n              }\n            };\n          }\n        }\n\n        return {};\n      })();\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        const {\n          rects\n        } = middlewareArguments;\n\n        switch (strategy) {\n          case 'referenceHidden':\n            {\n              const overflow = yield detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n                elementContext: 'reference'\n              });\n              const offsets = getSideOffsets(overflow, rects.reference);\n              return {\n                data: {\n                  referenceHiddenOffsets: offsets,\n                  referenceHidden: isAnySideFullyClipped(offsets)\n                }\n              };\n            }\n\n          case 'escaped':\n            {\n              const overflow = yield detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n                altBoundary: true\n              });\n              const offsets = getSideOffsets(overflow, rects.floating);\n              return {\n                data: {\n                  escapedOffsets: offsets,\n                  escaped: isAnySideFullyClipped(offsets)\n                }\n              };\n            }\n\n          default:\n            {\n              return {};\n            }\n        }\n      })();\n    }\n\n  };\n};\n\nfunction convertValueToCoords(_x6, _x7) {\n  return _convertValueToCoords.apply(this, arguments);\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nfunction _convertValueToCoords() {\n  _convertValueToCoords = _asyncToGenerator(function* (middlewareArguments, value) {\n    const {\n      placement,\n      platform,\n      elements\n    } = middlewareArguments;\n    const rtl = yield platform.isRTL == null ? void 0 : platform.isRTL(elements.floating);\n    const side = getSide(placement);\n    const alignment = getAlignment(placement);\n    const isVertical = getMainAxisFromPlacement(placement) === 'x';\n    const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n    const crossAxisMulti = rtl && isVertical ? -1 : 1;\n    const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n    let {\n      mainAxis,\n      crossAxis,\n      alignmentAxis\n    } = typeof rawValue === 'number' ? {\n      mainAxis: rawValue,\n      crossAxis: 0,\n      alignmentAxis: null\n    } : {\n      mainAxis: 0,\n      crossAxis: 0,\n      alignmentAxis: null,\n      ...rawValue\n    };\n\n    if (alignment && typeof alignmentAxis === 'number') {\n      crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n    }\n\n    return isVertical ? {\n      x: crossAxis * crossAxisMulti,\n      y: mainAxis * mainAxisMulti\n    } : {\n      x: mainAxis * mainAxisMulti,\n      y: crossAxis * crossAxisMulti\n    };\n  });\n  return _convertValueToCoords.apply(this, arguments);\n}\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        const {\n          x,\n          y\n        } = middlewareArguments;\n        const diffCoords = yield convertValueToCoords(middlewareArguments, value);\n        return {\n          x: x + diffCoords.x,\n          y: y + diffCoords.y,\n          data: diffCoords\n        };\n      })();\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        const {\n          x,\n          y,\n          placement\n        } = middlewareArguments;\n        const {\n          mainAxis: checkMainAxis = true,\n          crossAxis: checkCrossAxis = false,\n          limiter = {\n            fn: _ref => {\n              let {\n                x,\n                y\n              } = _ref;\n              return {\n                x,\n                y\n              };\n            }\n          },\n          ...detectOverflowOptions\n        } = options;\n        const coords = {\n          x,\n          y\n        };\n        const overflow = yield detectOverflow(middlewareArguments, detectOverflowOptions);\n        const mainAxis = getMainAxisFromPlacement(getSide(placement));\n        const crossAxis = getCrossAxis(mainAxis);\n        let mainAxisCoord = coords[mainAxis];\n        let crossAxisCoord = coords[crossAxis];\n\n        if (checkMainAxis) {\n          const minSide = mainAxis === 'y' ? 'top' : 'left';\n          const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n          const min = mainAxisCoord + overflow[minSide];\n          const max = mainAxisCoord - overflow[maxSide];\n          mainAxisCoord = within(min, mainAxisCoord, max);\n        }\n\n        if (checkCrossAxis) {\n          const minSide = crossAxis === 'y' ? 'top' : 'left';\n          const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n          const min = crossAxisCoord + overflow[minSide];\n          const max = crossAxisCoord - overflow[maxSide];\n          crossAxisCoord = within(min, crossAxisCoord, max);\n        }\n\n        const limitedCoords = limiter.fn({ ...middlewareArguments,\n          [mainAxis]: mainAxisCoord,\n          [crossAxis]: crossAxisCoord\n        });\n        return { ...limitedCoords,\n          data: {\n            x: limitedCoords.x - x,\n            y: limitedCoords.y - y\n          }\n        };\n      })();\n    }\n\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        const {\n          placement,\n          rects,\n          platform,\n          elements\n        } = middlewareArguments;\n        const {\n          apply = () => {},\n          ...detectOverflowOptions\n        } = options;\n        const overflow = yield detectOverflow(middlewareArguments, detectOverflowOptions);\n        const side = getSide(placement);\n        const alignment = getAlignment(placement);\n        let heightSide;\n        let widthSide;\n\n        if (side === 'top' || side === 'bottom') {\n          heightSide = side;\n          widthSide = alignment === ((yield platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)) ? 'start' : 'end') ? 'left' : 'right';\n        } else {\n          widthSide = side;\n          heightSide = alignment === 'end' ? 'top' : 'bottom';\n        }\n\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        const dimensions = {\n          availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n          availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n        };\n        yield apply({ ...middlewareArguments,\n          ...dimensions\n        });\n        const nextDimensions = yield platform.getDimensions(elements.floating);\n\n        if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n          return {\n            reset: {\n              rects: true\n            }\n          };\n        }\n\n        return {};\n      })();\n    }\n\n  };\n};\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    fn(middlewareArguments) {\n      return _asyncToGenerator(function* () {\n        var _await$platform$getCl;\n\n        const {\n          placement,\n          elements,\n          rects,\n          platform,\n          strategy\n        } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n        // ClientRect's bounds, despite the event listener being triggered. A\n        // padding of 2 seems to handle this issue.\n\n        const {\n          padding = 2,\n          x,\n          y\n        } = options;\n        const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? yield platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n          rect: rects.reference,\n          offsetParent: yield platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating),\n          strategy\n        }) : rects.reference);\n        const clientRects = (_await$platform$getCl = yield platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference)) != null ? _await$platform$getCl : [];\n        const paddingObject = getSideObjectFromPadding(padding);\n\n        function getBoundingClientRect() {\n          // There are two rects and they are disjoined\n          if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n            var _clientRects$find; // Find the first rect in which the point is fully inside\n\n\n            return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n          } // There are 2 or more connected rects\n\n\n          if (clientRects.length >= 2) {\n            if (getMainAxisFromPlacement(placement) === 'x') {\n              const firstRect = clientRects[0];\n              const lastRect = clientRects[clientRects.length - 1];\n              const isTop = getSide(placement) === 'top';\n              const top = firstRect.top;\n              const bottom = lastRect.bottom;\n              const left = isTop ? firstRect.left : lastRect.left;\n              const right = isTop ? firstRect.right : lastRect.right;\n              const width = right - left;\n              const height = bottom - top;\n              return {\n                top,\n                bottom,\n                left,\n                right,\n                width,\n                height,\n                x: left,\n                y: top\n              };\n            }\n\n            const isLeftSide = getSide(placement) === 'left';\n            const maxRight = max(...clientRects.map(rect => rect.right));\n            const minLeft = min(...clientRects.map(rect => rect.left));\n            const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n            const top = measureRects[0].top;\n            const bottom = measureRects[measureRects.length - 1].bottom;\n            const left = minLeft;\n            const right = maxRight;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          return fallback;\n        }\n\n        const resetRects = yield platform.getElementRects({\n          reference: {\n            getBoundingClientRect\n          },\n          floating: elements.floating,\n          strategy\n        });\n\n        if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n          return {\n            reset: {\n              rects: resetRects\n            }\n          };\n        }\n\n        return {};\n      })();\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getSide","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","validMiddleware","filter","Boolean","isRTL","console","error","join","name","Error","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","fn","nextX","nextY","data","reset","initialPlacement","elements","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","min","Math","max","within","min$1","value","max$1","arrow","alignment","arrowDimensions","getDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","alignmentPadding","shouldAddOffset","alignmentOffset","centerOffset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","sides","allPlacements","reduce","acc","concat","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_middlewareData$autoP3","_middlewareData$autoP4","_placementsSortedByLe","detectOverflowOptions","placements","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","flip","_middlewareData$flip","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","push","_middlewareData$flip$","_middlewareData$flip2","nextIndex","_overflowsData$map$so","map","d","getSideOffsets","isAnySideFullyClipped","some","hide","_temp","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","nextDimensions","inline","_await$platform$getCl","fallback","clientRects","getClientRects","getBoundingClientRect","_clientRects$find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects"],"sources":["C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs"],"sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (validMiddleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement` middleware', 'detected. This will lead to an infinite loop. Ensure only one of', 'either has been passed to the `middleware` array.'].join(' '));\n    }\n\n    if (!reference || !floating) {\n      console.error(['Floating UI: The reference and/or floating element was not defined', 'when `computePosition()` was called. Ensure that both elements have', 'been created and can be measured.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? { ...rects.floating,\n    x,\n    y\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset(middlewareArguments) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      await apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (rects.floating.width !== nextDimensions.width || rects.floating.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}