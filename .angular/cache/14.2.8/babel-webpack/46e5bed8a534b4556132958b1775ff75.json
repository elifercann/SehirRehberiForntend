{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\n\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\n\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\n\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle(domElement);\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height); // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max; // of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n} // Returns the inner client rect, subtracting scrollbars if present\n\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  getElementRects(_ref) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      let {\n        reference,\n        floating,\n        strategy\n      } = _ref;\n      const getOffsetParentFn = _this.getOffsetParent || getOffsetParent;\n      const getDimensionsFn = _this.getDimensions;\n      return {\n        reference: getRectRelativeToOffsetParent(reference, yield getOffsetParentFn(floating), strategy),\n        floating: {\n          x: 0,\n          y: 0,\n          ...(yield getDimensionsFn(floating))\n        }\n      };\n    })();\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","getWindow","node","_node$ownerDocument","ownerDocument","defaultView","window","getComputedStyle","element","getNodeName","isNode","nodeName","toLowerCase","uaString","getUAString","uaData","navigator","userAgentData","Array","isArray","brands","map","item","brand","version","join","userAgent","isHTMLElement","value","HTMLElement","isElement","Element","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","display","test","includes","isTableElement","isContainingBlock","isFirefox","css","backdropFilter","WebkitBackdropFilter","transform","perspective","willChange","filter","some","contain","isLayoutViewport","isLastTraversableNode","FALLBACK_SCALE","x","y","getScale","domElement","contextElement","rect","getBoundingClientRect","width","parseFloat","height","Number","isFinite","includeScale","isFixedStrategy","offsetParent","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scale","win","addVisualOffsets","left","visualViewport","offsetLeft","top","offsetTop","right","bottom","getDocumentElement","document","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","getRectRelativeToOffsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","result","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","offsetWidth","offsetHeight","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","min","Math","max","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","scrollableAncestor","isBody","concat","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingAncestor","getClippingElementAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","containingBlock","shouldDropCurrentNode","ancestor","set","getClippingRect","boundary","rootBoundary","elementClippingAncestors","_c","clippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","platform","getElementRects","reference","floating","getOffsetParentFn","getDimensionsFn","getClientRects","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","elementResize","animationFrame","ancestors","forEach","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame","Map","mergedOptions","platformWithCache"],"sources":["C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction getWindow(node) {\n  var _node$ownerDocument;\n\n  return ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\n\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isNode(node) ? (node.nodeName || '').toLowerCase() : '';\n}\n\nlet uaString;\nfunction getUAString() {\n  if (uaString) {\n    return uaString;\n  }\n\n  const uaData = navigator.userAgentData;\n\n  if (uaData && Array.isArray(uaData.brands)) {\n    uaString = uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n    return uaString;\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle(element);\n  const backdropFilter = css.backdropFilter || css.WebkitBackdropFilter; // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || (backdropFilter ? backdropFilter !== 'none' : false) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective'].some(value => css.willChange.includes(value)) || ['paint', 'layout', 'strict', 'content'].some( // TS 4.1 compat\n  value => {\n    const contain = css.contain;\n    return contain != null ? contain.includes(value) : false;\n  });\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\n\nconst FALLBACK_SCALE = {\n  x: 1,\n  y: 1\n};\nfunction getScale(element) {\n  const domElement = !isElement(element) && element.contextElement ? element.contextElement : isElement(element) ? element : null;\n\n  if (!domElement) {\n    return FALLBACK_SCALE;\n  }\n\n  const rect = domElement.getBoundingClientRect();\n  const css = getComputedStyle(domElement);\n  let x = rect.width / parseFloat(css.width);\n  let y = rect.height / parseFloat(css.height); // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n\n  return {\n    x,\n    y\n  };\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scale = FALLBACK_SCALE;\n\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scale.x;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scale.y;\n  const width = clientRect.width / scale.x;\n  const height = clientRect.height / scale.y;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, true, strategy === 'fixed', offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  const result = // Step into the shadow DOM of the parent of a slotted node\n  node.assignedSlot || // DOM Element detected\n  node.parentNode || ( // ShadowRoot detected\n  isShadowRoot(node) ? node.host : null) || // Fallback\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = getParentNode(currentNode);\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = {\n    x: 1,\n    y: 1\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (isLastTraversableNode(parentNode)) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []);\n  }\n\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor));\n}\n\n// Returns the inner client rect, subtracting scrollbars if present\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : {\n    x: 1,\n    y: 1\n  };\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y,\n    width,\n    height\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  if (clippingAncestor === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingAncestor)) {\n    return getInnerBoundingClientRect(clippingAncestor, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\n\n\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n\n  if (cachedResult) {\n    return cachedResult;\n  }\n\n  let result = getOverflowAncestors(element).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element; // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const containingBlock = isContainingBlock(currentNode);\n    const shouldDropCurrentNode = elementIsFixed ? !containingBlock && !currentContainingBlockComputedStyle : !containingBlock && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position);\n\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n\n    currentNode = getParentNode(currentNode);\n  }\n\n  cache.set(element, result);\n  return result;\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getScale,\n\n  async getElementRects(_ref) {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n    const getDimensionsFn = this.getDimensions;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, await getOffsetParentFn(floating), strategy),\n      floating: {\n        x: 0,\n        y: 0,\n        ...(await getDimensionsFn(floating))\n      }\n    };\n  },\n\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : reference.contextElement ? getOverflowAncestors(reference.contextElement) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n\n    if (!isElement(reference) && reference.contextElement && !animationFrame) {\n      observer.observe(reference.contextElement);\n    }\n\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = { ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, { ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { autoUpdate, computePosition, getOverflowAncestors, platform };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}