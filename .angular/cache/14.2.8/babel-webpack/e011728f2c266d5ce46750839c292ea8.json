{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) : typeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) : factory(global['ngx-gallery'] = {}, global.core, global.common, global.platformBrowser);\n})(this, function (exports, core, common, platformBrowser) {\n  'use strict';\n\n  var NgxGalleryActionComponent =\n  /** @class */\n  function () {\n    function NgxGalleryActionComponent() {\n      this.disabled = false;\n      this.titleText = '';\n      this.onClick = new core.EventEmitter();\n    }\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\n      if (!this.disabled) {\n        this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n    };\n\n    NgxGalleryActionComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-action',\n        template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\n        changeDetection: core.ChangeDetectionStrategy.OnPush\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryActionComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryActionComponent.propDecorators = {\n      'icon': [{\n        type: core.Input\n      }],\n      'disabled': [{\n        type: core.Input\n      }],\n      'titleText': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryActionComponent;\n  }();\n\n  var NgxGalleryArrowsComponent =\n  /** @class */\n  function () {\n    function NgxGalleryArrowsComponent() {\n      this.onPrevClick = new core.EventEmitter();\n      this.onNextClick = new core.EventEmitter();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\n      this.onPrevClick.emit();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\n      this.onNextClick.emit();\n    };\n\n    NgxGalleryArrowsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-arrows',\n        template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\n        styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryArrowsComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryArrowsComponent.propDecorators = {\n      'prevDisabled': [{\n        type: core.Input\n      }],\n      'nextDisabled': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'onPrevClick': [{\n        type: core.Output\n      }],\n      'onNextClick': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryArrowsComponent;\n  }();\n\n  var NgxGalleryBulletsComponent =\n  /** @class */\n  function () {\n    function NgxGalleryBulletsComponent() {\n      this.active = 0;\n      this.onChange = new core.EventEmitter();\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryBulletsComponent.prototype.getBullets = function () {\n      return Array(this.count);\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {\n      this.onChange.emit(index);\n    };\n\n    NgxGalleryBulletsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-bullets',\n        template: \"\\n        <div class=\\\"ngx-gallery-bullet\\\" *ngFor=\\\"let bullet of getBullets(); let i = index;\\\" (click)=\\\"handleChange($event, i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == active }\\\"></div>\\n    \",\n        styles: [\":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryBulletsComponent.ctorParameters = function () {\n      return [];\n    };\n\n    NgxGalleryBulletsComponent.propDecorators = {\n      'count': [{\n        type: core.Input\n      }],\n      'active': [{\n        type: core.Input\n      }],\n      'onChange': [{\n        type: core.Output\n      }]\n    };\n    return NgxGalleryBulletsComponent;\n  }();\n\n  var NgxGalleryHelperService =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} renderer\r\n     */\n    function NgxGalleryHelperService(renderer) {\n      this.renderer = renderer;\n      this.swipeHandlers = new Map();\n    }\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\n      var\n      /** @type {?} */\n      handlers = this.getSwipeHandlers(id); // swipeleft and swiperight are available only if hammerjs is included\n\n      try {\n        if (status && !handlers) {\n          this.swipeHandlers.set(id, [this.renderer.listen(element.nativeElement, 'swipeleft', function () {\n            return nextHandler();\n          }), this.renderer.listen(element.nativeElement, 'swiperight', function () {\n            return prevHandler();\n          })]);\n        } else if (!status && handlers) {\n          handlers.map(function (handler) {\n            return handler();\n          });\n          this.removeSwipeHandlers(id);\n        }\n      } catch (e) {}\n    };\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\n      if (url.replace) {\n        return url.replace(new RegExp(' ', 'g'), '%20').replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n        return url;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\n      return this.swipeHandlers.get(id);\n    };\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\n      this.swipeHandlers.delete(id);\n    };\n\n    NgxGalleryHelperService.decorators = [{\n      type: core.Injectable\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryHelperService.ctorParameters = function () {\n      return [{\n        type: core.Renderer\n      }];\n    };\n\n    return NgxGalleryHelperService;\n  }();\n\n  var NgxGalleryAnimation =\n  /** @class */\n  function () {\n    function NgxGalleryAnimation() {}\n\n    NgxGalleryAnimation.Fade = 'fade';\n    NgxGalleryAnimation.Slide = 'slide';\n    NgxGalleryAnimation.Rotate = 'rotate';\n    NgxGalleryAnimation.Zoom = 'zoom';\n    return NgxGalleryAnimation;\n  }();\n\n  var NgxGalleryImageComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.onClick = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.canChangeImage = true;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\n      if (this.arrows && this.arrowsAutoHide) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\n      if (this.arrowsAutoHide && !this.arrows) {\n        this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\n      if (this.arrowsAutoHide && this.arrows) {\n        this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getImages = function () {\n      if (!this.images) {\n        return [];\n      }\n\n      if (this.lazyLoading) {\n        var\n        /** @type {?} */\n        indexes_1 = [this.selectedIndex];\n        var\n        /** @type {?} */\n        prevIndex = this.selectedIndex - 1;\n\n        if (prevIndex === -1 && this.infinityMove) {\n          indexes_1.push(this.images.length - 1);\n        } else if (prevIndex >= 0) {\n          indexes_1.push(prevIndex);\n        }\n\n        var\n        /** @type {?} */\n        nextIndex = this.selectedIndex + 1;\n\n        if (nextIndex == this.images.length && this.infinityMove) {\n          indexes_1.push(0);\n        } else if (nextIndex < this.images.length) {\n          indexes_1.push(nextIndex);\n        }\n\n        return this.images.filter(function (img, i) {\n          return indexes_1.indexOf(i) != -1;\n        });\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      this.stopAutoPlay();\n      this.timer = setInterval(function () {\n        if (!_this.showNext()) {\n          _this.selectedIndex = -1;\n\n          _this.showNext();\n        }\n      }, this.autoPlayInterval);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearInterval(this.timer);\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\n      if (this.clickable) {\n        this.onClick.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.show = function (index) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showNext = function () {\n      if (this.canShowNext() && this.canChangeImage) {\n        this.selectedIndex++;\n\n        if (this.selectedIndex === this.images.length) {\n          this.selectedIndex = 0;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.showPrev = function () {\n      if (this.canShowPrev() && this.canChangeImage) {\n        this.selectedIndex--;\n\n        if (this.selectedIndex < 0) {\n          this.selectedIndex = this.images.length - 1;\n        }\n\n        this.onActiveChange.emit(this.selectedIndex);\n        this.setChangeTimeout();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\n      var _this = this;\n\n      this.canChangeImage = false;\n      var\n      /** @type {?} */\n      timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide || this.animation === NgxGalleryAnimation.Fade) {\n        timeout = 500;\n      }\n\n      setTimeout(function () {\n        _this.canChangeImage = true;\n      }, timeout);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\n      if (this.images) {\n        return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n\n    NgxGalleryImageComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-image',\n        template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"selectedIndex\\\" (onChange)=\\\"show($event)\\\"></ngx-gallery-bullets>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryImageComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryImageComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'bullets': [{\n        type: core.Input\n      }],\n      'onClick': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryImageComponent;\n  }();\n\n  var NgxGalleryOrder =\n  /** @class */\n  function () {\n    function NgxGalleryOrder() {}\n\n    NgxGalleryOrder.Column = 1;\n    NgxGalleryOrder.Row = 2;\n    NgxGalleryOrder.Page = 3;\n    return NgxGalleryOrder;\n  }();\n\n  var NgxGalleryThumbnailsComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.minStopIndex = 0;\n      this.onActiveChange = new core.EventEmitter();\n      this.index = 0;\n    }\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['selectedIndex']) {\n        this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () {\n          return _this.moveRight();\n        }, function () {\n          return _this.moveLeft();\n        });\n      }\n\n      if (this.images) {\n        this.remainingCountValue = this.images.length - this.rows * this.columns;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\n      this.mouseenter = true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\n      this.mouseenter = false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n      this.index = 0;\n      this.validateIndex();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\n      if (!this.images) {\n        return [];\n      }\n\n      if (this.remainingCount) {\n        return this.images.slice(0, this.rows * this.columns);\n      } else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n        var\n        /** @type {?} */\n        stopIndex = 0;\n\n        if (this.order === NgxGalleryOrder.Column) {\n          stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n        } else if (this.order === NgxGalleryOrder.Page) {\n          stopIndex = this.index + this.columns * this.rows * 2;\n        }\n\n        if (stopIndex <= this.minStopIndex) {\n          stopIndex = this.minStopIndex;\n        } else {\n          this.minStopIndex = stopIndex;\n        }\n\n        return this.images.slice(0, stopIndex);\n      } else {\n        return this.images;\n      }\n    };\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\n      if (!this.hasLink(index)) {\n        this.selectedIndex = index;\n        this.onActiveChange.emit(index);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.hasLink = function (index) {\n      if (this.links && this.links.length && this.links[index]) return true;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\n      if (this.canMoveRight()) {\n        this.index += this.moveSize;\n        var\n        /** @type {?} */\n        maxIndex = this.getMaxIndex() - this.columns;\n\n        if (this.index > maxIndex) {\n          this.index = maxIndex;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\n      if (this.canMoveLeft()) {\n        this.index -= this.moveSize;\n\n        if (this.index < 0) {\n          this.index = 0;\n        }\n\n        this.setThumbnailsPosition();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\n      return this.index !== 0 ? true : false;\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = Math.floor(index / this.rows);\n      } else if (this.order === NgxGalleryOrder.Page) {\n        calculatedIndex = index % this.columns + Math.floor(index / (this.rows * this.columns)) * this.columns;\n      } else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n        calculatedIndex = index % this.columns;\n      } else {\n        calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\n      var\n      /** @type {?} */\n      calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        calculatedIndex = index % this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        calculatedIndex = Math.floor(index / this.columns) - Math.floor(index / (this.rows * this.columns)) * this.rows;\n      } else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n        calculatedIndex = Math.floor(index / this.columns);\n      } else {\n        calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\n      return this.getThumbnailDimension(this.columns);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\n      return this.getThumbnailDimension(this.rows);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\n      this.thumbnailsLeft = -(100 / this.columns * this.index) + '%';\n      this.thumbnailsMarginLeft = -((this.margin - (this.columns - 1) * this.margin / this.columns) * this.index) + 'px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\n      if (this.remainingCount) {\n        return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount() && (!this.arrowsAutoHide || this.mouseenter)) {\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\n      if (this.images) {\n        var\n        /** @type {?} */\n        newIndex = void 0;\n\n        if (this.order === NgxGalleryOrder.Column) {\n          newIndex = Math.floor(this.selectedIndex / this.rows);\n        } else {\n          newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n        }\n\n        if (this.remainingCount) {\n          newIndex = 0;\n        }\n\n        if (newIndex < this.index || newIndex >= this.index + this.columns) {\n          var\n          /** @type {?} */\n          maxIndex = this.getMaxIndex() - this.columns;\n          this.index = newIndex > maxIndex ? maxIndex : newIndex;\n          this.setThumbnailsPosition();\n        }\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n    };\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\n      return this.getSafeStyle('calc(' + 100 / count * index + '% + ' + (this.margin - (count - 1) * this.margin / count) * index + 'px)');\n    };\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\n      if (this.margin !== 0) {\n        return this.getSafeStyle('calc(' + 100 / count + '% - ' + (count - 1) * this.margin / count + 'px)');\n      } else {\n        return this.getSafeStyle('calc(' + 100 / count + '% + 1px)');\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\n      if (this.order == NgxGalleryOrder.Page) {\n        var\n        /** @type {?} */\n        maxIndex = Math.floor(this.images.length / this.getVisibleCount()) * this.columns;\n\n        if (this.images.length % this.getVisibleCount() > this.columns) {\n          maxIndex += this.columns;\n        } else {\n          maxIndex += this.images.length % this.getVisibleCount();\n        }\n\n        return maxIndex;\n      } else {\n        return Math.ceil(this.images.length / this.rows);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\n      return this.columns * this.rows;\n    };\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n    };\n\n    NgxGalleryThumbnailsComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-thumbnails',\n        template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.transform]=\\\"'translateX(' + thumbnailsLeft + ')'\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLink(i) ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\" [attr.aria-label]=\\\"labels[i]\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\n        styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryThumbnailsComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }];\n    };\n\n    NgxGalleryThumbnailsComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'links': [{\n        type: core.Input\n      }],\n      'labels': [{\n        type: core.Input\n      }],\n      'linkTarget': [{\n        type: core.Input\n      }],\n      'columns': [{\n        type: core.Input\n      }],\n      'rows': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'margin': [{\n        type: core.Input\n      }],\n      'selectedIndex': [{\n        type: core.Input\n      }],\n      'clickable': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'size': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'moveSize': [{\n        type: core.Input\n      }],\n      'order': [{\n        type: core.Input\n      }],\n      'remainingCount': [{\n        type: core.Input\n      }],\n      'lazyLoading': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryThumbnailsComponent;\n  }();\n\n  var NgxGalleryPreviewComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     * @param {?} renderer\r\n     * @param {?} changeDetectorRef\r\n     */\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService, renderer, changeDetectorRef) {\n      this.sanitization = sanitization;\n      this.elementRef = elementRef;\n      this.helperService = helperService;\n      this.renderer = renderer;\n      this.changeDetectorRef = changeDetectorRef;\n      this.showSpinner = false;\n      this.positionLeft = 0;\n      this.positionTop = 0;\n      this.zoomValue = 1;\n      this.loading = false;\n      this.rotateValue = 0;\n      this.index = 0;\n      this.onOpen = new core.EventEmitter();\n      this.onClose = new core.EventEmitter();\n      this.onActiveChange = new core.EventEmitter();\n      this.isOpen = false;\n      this.initialX = 0;\n      this.initialY = 0;\n      this.initialLeft = 0;\n      this.initialTop = 0;\n      this.isMove = false;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnInit = function () {\n      if (this.arrows && this.arrowsAutoHide) {\n        this.arrows = false;\n      }\n    };\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\n      var _this = this;\n\n      if (changes['swipe']) {\n        this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () {\n          return _this.showNext();\n        }, function () {\n          return _this.showPrev();\n        });\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.ngOnDestroy = function () {\n      if (this.keyDownListener) {\n        this.keyDownListener();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onMouseEnter = function () {\n      if (this.arrowsAutoHide && !this.arrows) {\n        this.arrows = true;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onMouseLeave = function () {\n      if (this.arrowsAutoHide && this.arrows) {\n        this.arrows = false;\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\n      if (this.isOpen) {\n        if (this.keyboardNavigation) {\n          if (this.isKeyboardPrev(e)) {\n            this.showPrev();\n          } else if (this.isKeyboardNext(e)) {\n            this.showNext();\n          }\n        }\n\n        if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n          this.close();\n        }\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\n      var _this = this;\n\n      this.onOpen.emit();\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n        this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listenGlobal(\"window\", \"keydown\", function (e) {\n        return _this.onKeyDown(e);\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.close = function () {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n        this.keyDownListener();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n        this.startAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\n      var _this = this;\n\n      if (this.autoPlay) {\n        this.stopAutoPlay();\n        this.timer = setTimeout(function () {\n          if (!_this.showNext()) {\n            _this.index = -1;\n\n            _this.showNext();\n          }\n        }, this.autoPlayInterval);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\n      if (this.timer) {\n        clearTimeout(this.timer);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showAtIndex = function (index) {\n      this.index = index;\n      this.show();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\n      if (this.canShowNext()) {\n        this.index++;\n\n        if (this.index === this.images.length) {\n          this.index = 0;\n        }\n\n        this.show();\n        return true;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\n      if (this.canShowPrev()) {\n        this.index--;\n\n        if (this.index < 0) {\n          this.index = this.images.length - 1;\n        }\n\n        this.show();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\n      if (this.loading) {\n        return false;\n      } else if (this.images) {\n        return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\n      if (this.fullscreen || this.forceFullscreen) {\n        var\n        /** @type {?} */\n        doc = document;\n\n        if (!doc.fullscreenElement && !doc.mozFullScreenElement && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n          this.openFullscreen();\n        } else {\n          this.closeFullscreen();\n        }\n      }\n    };\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\n      return image.substr(0, 10) === 'data:image' ? image : this.sanitization.bypassSecurityTrustUrl(image);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\n      if (this.canZoomIn()) {\n        this.zoomValue += this.zoomStep;\n\n        if (this.zoomValue > this.zoomMax) {\n          this.zoomValue = this.zoomMax;\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\n      if (this.canZoomOut()) {\n        this.zoomValue -= this.zoomStep;\n\n        if (this.zoomValue < this.zoomMin) {\n          this.zoomValue = this.zoomMin;\n        }\n\n        if (this.zoomValue <= 1) {\n          this.resetPosition();\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\n      this.rotateValue -= 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\n      this.rotateValue += 90;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\n      return this.zoomValue < this.zoomMax ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\n      return this.zoomValue > this.zoomMin ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\n      return this.zoom && this.zoomValue > 1;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\n      if (this.canDragOnZoom()) {\n        this.initialX = this.getClientX(e);\n        this.initialY = this.getClientY(e);\n        this.initialLeft = this.positionLeft;\n        this.initialTop = this.positionTop;\n        this.isMove = true;\n        e.preventDefault();\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\n      this.isMove = false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\n      if (this.isMove) {\n        this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n        this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\n      if (this.zoom) {\n        this.positionLeft = 0;\n        this.positionTop = 0;\n      }\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\n      return e.keyCode === 39 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\n      return e.keyCode === 37 ? true : false;\n    };\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\n      return e.keyCode === 27 ? true : false;\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\n      var\n      /** @type {?} */\n      element = document.documentElement;\n\n      if (element.requestFullscreen) {\n        element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n        element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n        element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n        element.webkitRequestFullscreen();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\n      if (this.isFullscreen()) {\n        var\n        /** @type {?} */\n        doc = document;\n\n        if (doc.exitFullscreen) {\n          doc.exitFullscreen();\n        } else if (doc.msExitFullscreen) {\n          doc.msExitFullscreen();\n        } else if (doc.mozCancelFullScreen) {\n          doc.mozCancelFullScreen();\n        } else if (doc.webkitExitFullscreen) {\n          doc.webkitExitFullscreen();\n        }\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isFullscreen = function () {\n      var\n      /** @type {?} */\n      doc = document;\n      return doc.fullscreenElement || doc.webkitFullscreenElement || doc.mozFullScreenElement || doc.msFullscreenElement;\n    };\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\n      var _this = this;\n\n      if (first === void 0) {\n        first = false;\n      }\n\n      this.loading = true;\n      this.stopAutoPlay();\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n        this._show();\n      } else {\n        setTimeout(function () {\n          return _this._show();\n        }, 600);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype._show = function () {\n      var _this = this;\n\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n      this.src = this.getSafeUrl(\n      /** @type {?} */\n      this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n      setTimeout(function () {\n        if (_this.isLoaded(_this.previewImage.nativeElement)) {\n          _this.loading = false;\n\n          _this.startAutoPlay();\n\n          _this.changeDetectorRef.markForCheck();\n        } else {\n          setTimeout(function () {\n            if (_this.loading) {\n              _this.showSpinner = true;\n\n              _this.changeDetectorRef.markForCheck();\n            }\n          });\n\n          _this.previewImage.nativeElement.onload = function () {\n            _this.loading = false;\n            _this.showSpinner = false;\n            _this.previewImage.nativeElement.onload = null;\n\n            _this.startAutoPlay();\n\n            _this.changeDetectorRef.markForCheck();\n          };\n        }\n      });\n    };\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\n      if (!img.complete) {\n        return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n        return false;\n      }\n\n      return true;\n    };\n\n    NgxGalleryPreviewComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery-preview',\n        template: \"\\n        <ngx-gallery-arrows *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, index)\\\"></ngx-gallery-action>\\n                <a *ngIf=\\\"download && src\\\" [href]=\\\"src\\\" class=\\\"ngx-gallery-icon\\\" aria-hidden=\\\"true\\\" download>\\n                    <i class=\\\"ngx-gallery-icon-content {{ downloadIcon }}\\\"></i>\\n                </a>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n                <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"index\\\" (onChange)=\\\"showAtIndex($event)\\\"></ngx-gallery-bullets>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n        </div>\\n    \",\n        styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryPreviewComponent.ctorParameters = function () {\n      return [{\n        type: platformBrowser.DomSanitizer\n      }, {\n        type: core.ElementRef\n      }, {\n        type: NgxGalleryHelperService\n      }, {\n        type: core.Renderer\n      }, {\n        type: core.ChangeDetectorRef\n      }];\n    };\n\n    NgxGalleryPreviewComponent.propDecorators = {\n      'images': [{\n        type: core.Input\n      }],\n      'descriptions': [{\n        type: core.Input\n      }],\n      'showDescription': [{\n        type: core.Input\n      }],\n      'arrows': [{\n        type: core.Input\n      }],\n      'arrowsAutoHide': [{\n        type: core.Input\n      }],\n      'swipe': [{\n        type: core.Input\n      }],\n      'fullscreen': [{\n        type: core.Input\n      }],\n      'forceFullscreen': [{\n        type: core.Input\n      }],\n      'closeOnClick': [{\n        type: core.Input\n      }],\n      'closeOnEsc': [{\n        type: core.Input\n      }],\n      'keyboardNavigation': [{\n        type: core.Input\n      }],\n      'arrowPrevIcon': [{\n        type: core.Input\n      }],\n      'arrowNextIcon': [{\n        type: core.Input\n      }],\n      'closeIcon': [{\n        type: core.Input\n      }],\n      'fullscreenIcon': [{\n        type: core.Input\n      }],\n      'spinnerIcon': [{\n        type: core.Input\n      }],\n      'autoPlay': [{\n        type: core.Input\n      }],\n      'autoPlayInterval': [{\n        type: core.Input\n      }],\n      'autoPlayPauseOnHover': [{\n        type: core.Input\n      }],\n      'infinityMove': [{\n        type: core.Input\n      }],\n      'zoom': [{\n        type: core.Input\n      }],\n      'zoomStep': [{\n        type: core.Input\n      }],\n      'zoomMax': [{\n        type: core.Input\n      }],\n      'zoomMin': [{\n        type: core.Input\n      }],\n      'zoomInIcon': [{\n        type: core.Input\n      }],\n      'zoomOutIcon': [{\n        type: core.Input\n      }],\n      'animation': [{\n        type: core.Input\n      }],\n      'actions': [{\n        type: core.Input\n      }],\n      'rotate': [{\n        type: core.Input\n      }],\n      'rotateLeftIcon': [{\n        type: core.Input\n      }],\n      'rotateRightIcon': [{\n        type: core.Input\n      }],\n      'download': [{\n        type: core.Input\n      }],\n      'downloadIcon': [{\n        type: core.Input\n      }],\n      'bullets': [{\n        type: core.Input\n      }],\n      'onOpen': [{\n        type: core.Output\n      }],\n      'onClose': [{\n        type: core.Output\n      }],\n      'onActiveChange': [{\n        type: core.Output\n      }],\n      'previewImage': [{\n        type: core.ViewChild,\n        args: ['previewImage']\n      }],\n      'onMouseEnter': [{\n        type: core.HostListener,\n        args: ['mouseenter']\n      }],\n      'onMouseLeave': [{\n        type: core.HostListener,\n        args: ['mouseleave']\n      }]\n    };\n    return NgxGalleryPreviewComponent;\n  }();\n\n  var NgxGalleryImageSize =\n  /** @class */\n  function () {\n    function NgxGalleryImageSize() {}\n\n    NgxGalleryImageSize.Cover = 'cover';\n    NgxGalleryImageSize.Contain = 'contain';\n    return NgxGalleryImageSize;\n  }();\n\n  var NgxGalleryLayout =\n  /** @class */\n  function () {\n    function NgxGalleryLayout() {}\n\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\n    return NgxGalleryLayout;\n  }();\n\n  var NgxGalleryAction =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} action\r\n     */\n    function NgxGalleryAction(action) {\n      this.icon = action.icon;\n      this.disabled = action.disabled ? action.disabled : false;\n      this.titleText = action.titleText ? action.titleText : '';\n      this.onClick = action.onClick;\n    }\n\n    return NgxGalleryAction;\n  }();\n\n  var NgxGalleryOptions =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOptions(obj) {\n      var preventDefaults = obj.breakpoint === undefined ? false : true;\n\n      function use(source, defaultValue) {\n        return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n      }\n\n      this.breakpoint = use(obj.breakpoint, undefined);\n      this.width = use(obj.width, '500px');\n      this.height = use(obj.height, '400px');\n      this.fullWidth = use(obj.fullWidth, false);\n      this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n      this.startIndex = use(obj.startIndex, 0);\n      this.linkTarget = use(obj.linkTarget, '_blank');\n      this.lazyLoading = use(obj.lazyLoading, true);\n      this.image = use(obj.image, true);\n      this.imagePercent = use(obj.imagePercent, 75);\n      this.imageArrows = use(obj.imageArrows, true);\n      this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n      this.imageSwipe = use(obj.imageSwipe, false);\n      this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n      this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n      this.imageAutoPlay = use(obj.imageAutoPlay, false);\n      this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n      this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n      this.imageInfinityMove = use(obj.imageInfinityMove, false);\n\n      if (obj && obj.imageActions && obj.imageActions.length) {\n        obj.imageActions = obj.imageActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.imageActions = use(obj.imageActions, []);\n      this.imageDescription = use(obj.imageDescription, false);\n      this.imageBullets = use(obj.imageBullets, false);\n      this.thumbnails = use(obj.thumbnails, true);\n      this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n      this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n      this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n      this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n      this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n      this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n      this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n      this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n      this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n      this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n      this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n      this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n      this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n      this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n\n      if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n        obj.thumbnailActions = obj.thumbnailActions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.thumbnailActions = use(obj.thumbnailActions, []);\n      this.preview = use(obj.preview, true);\n      this.previewDescription = use(obj.previewDescription, true);\n      this.previewArrows = use(obj.previewArrows, true);\n      this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n      this.previewSwipe = use(obj.previewSwipe, false);\n      this.previewFullscreen = use(obj.previewFullscreen, false);\n      this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n      this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n      this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n      this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n      this.previewAnimation = use(obj.previewAnimation, true);\n      this.previewAutoPlay = use(obj.previewAutoPlay, false);\n      this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n      this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n      this.previewInfinityMove = use(obj.previewInfinityMove, false);\n      this.previewZoom = use(obj.previewZoom, false);\n      this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n      this.previewZoomMax = use(obj.previewZoomMax, 2);\n      this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n      this.previewRotate = use(obj.previewRotate, false);\n      this.previewDownload = use(obj.previewDownload, false);\n      this.previewCustom = use(obj.previewCustom, undefined);\n      this.previewBullets = use(obj.previewBullets, false);\n      this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n      this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n      this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n      this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n      this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n      this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n      this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n      this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n      this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n      this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n      if (obj && obj.actions && obj.actions.length) {\n        obj.actions = obj.actions.map(function (action) {\n          return new NgxGalleryAction(action);\n        });\n      }\n\n      this.actions = use(obj.actions, []);\n    }\n\n    return NgxGalleryOptions;\n  }();\n\n  var NgxGalleryOrderedImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryOrderedImage(obj) {\n      this.src = obj.src;\n      this.index = obj.index;\n    }\n\n    return NgxGalleryOrderedImage;\n  }();\n\n  var NgxGalleryComponent =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} myElement\r\n     */\n    function NgxGalleryComponent(myElement) {\n      this.myElement = myElement;\n      this.imagesReady = new core.EventEmitter();\n      this.change = new core.EventEmitter();\n      this.previewOpen = new core.EventEmitter();\n      this.previewClose = new core.EventEmitter();\n      this.previewChange = new core.EventEmitter();\n      this.oldImagesLength = 0;\n      this.selectedIndex = 0;\n      this.breakpoint = undefined;\n      this.prevBreakpoint = undefined;\n    }\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngOnInit = function () {\n      this.options = this.options.map(function (opt) {\n        return new NgxGalleryOptions(opt);\n      });\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n\n      if (this.currentOptions) {\n        this.selectedIndex =\n        /** @type {?} */\n        this.currentOptions.startIndex;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\n      if (this.images !== undefined && this.images.length !== this.oldImagesLength || this.images !== this.oldImages) {\n        this.oldImagesLength = this.images.length;\n        this.oldImages = this.images;\n        this.setOptions();\n        this.setImages();\n\n        if (this.images && this.images.length) {\n          this.imagesReady.emit();\n        }\n\n        if (this.image) {\n          this.image.reset(\n          /** @type {?} */\n          this.currentOptions.startIndex);\n        }\n\n        if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails && this.images.length <= 1) {\n          this.currentOptions.thumbnails = false;\n          this.currentOptions.imageArrows = false;\n        }\n\n        this.resetThumbnails();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\n      this.checkFullWidth();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onResize = function () {\n      var _this = this;\n\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n        this.setOptions();\n        this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        if (this.fullWidthTimeout) {\n          clearTimeout(this.fullWidthTimeout);\n        }\n\n        this.fullWidthTimeout = setTimeout(function () {\n          _this.checkFullWidth();\n        }, 200);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getImageHeight = function () {\n      return this.currentOptions && this.currentOptions.thumbnails ? this.currentOptions.imagePercent + '%' : '100%';\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\n      if (this.currentOptions && this.currentOptions.image) {\n        return 'calc(' + this.currentOptions.thumbnailsPercent + '% - ' + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n        return '100%';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n        return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n        return '0px';\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.openPreview = function (index) {\n      if (this.currentOptions.previewCustom) {\n        this.currentOptions.previewCustom(index);\n      } else {\n        this.previewEnabled = true;\n        this.preview.open(index);\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.stopAutoPlay();\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n        this.image.startAutoPlay();\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n        this.openPreview(this.selectedIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.show = function (index) {\n      this.select(index);\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showNext = function () {\n      this.image.showNext();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.showPrev = function () {\n      this.image.showPrev();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowNext = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canShowPrev = function () {\n      if (this.images && this.currentOptions) {\n        return this.currentOptions.imageInfinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n        return false;\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\n      this.previewChange.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.moveThumbnailsRight = function () {\n      this.thubmnails.moveRight();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.moveThumbnailsLeft = function () {\n      this.thubmnails.moveLeft();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canMoveThumbnailsRight = function () {\n      return this.thubmnails.canMoveRight();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.canMoveThumbnailsLeft = function () {\n      return this.thubmnails.canMoveLeft();\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\n      if (this.thubmnails) {\n        this.thubmnails.reset(\n        /** @type {?} */\n        this.currentOptions.startIndex);\n      }\n    };\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.select = function (index) {\n      this.selectedIndex = index;\n      this.change.emit({\n        index: index,\n        image: this.images[index]\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n        this.width = document.body.clientWidth + 'px';\n        this.left = -(document.body.clientWidth - this.myElement.nativeElement.parentNode.innerWidth) / 2 + 'px';\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setImages = function () {\n      this.smallImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.small;\n      });\n      this.mediumImages = this.images.map(function (img, i) {\n        return new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n        });\n      });\n      this.bigImages = this.images.map(function (img) {\n        /** @type {?} */\n        return img.big;\n      });\n      this.descriptions = this.images.map(function (img) {\n        /** @type {?} */\n        return img.description;\n      });\n      this.links = this.images.map(function (img) {\n        /** @type {?} */\n        return img.url;\n      });\n      this.labels = this.images.map(function (img) {\n        /** @type {?} */\n        return img.label;\n      });\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\n      this.prevBreakpoint = this.breakpoint;\n      var\n      /** @type {?} */\n      breakpoints;\n\n      if (typeof window !== 'undefined') {\n        breakpoints = this.options.filter(function (opt) {\n          return opt.breakpoint >= window.innerWidth;\n        }).map(function (opt) {\n          return opt.breakpoint;\n        });\n      }\n\n      if (breakpoints && breakpoints.length) {\n        this.breakpoint = breakpoints.pop();\n      } else {\n        this.breakpoint = undefined;\n      }\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.sortOptions = function () {\n      this.options = this.options.filter(function (a) {\n        return a.breakpoint === undefined;\n      }).concat(this.options.filter(function (a) {\n        return a.breakpoint !== undefined;\n      }).sort(function (a, b) {\n        return b.breakpoint - a.breakpoint;\n      }));\n    };\n    /**\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.setOptions = function () {\n      var _this = this;\n\n      this.currentOptions = new NgxGalleryOptions({});\n      this.options.filter(function (opt) {\n        return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint;\n      }).map(function (opt) {\n        return _this.combineOptions(_this.currentOptions, opt);\n      });\n      this.width =\n      /** @type {?} */\n      this.currentOptions.width;\n      this.height =\n      /** @type {?} */\n      this.currentOptions.height;\n    };\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\n\n\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\n      Object.keys(second).map(function (val) {\n        return first[val] = second[val] !== undefined ? second[val] : first[val];\n      });\n    };\n\n    NgxGalleryComponent.decorators = [{\n      type: core.Component,\n      args: [{\n        selector: 'ngx-gallery',\n        template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" [bullets]=\\\"currentOptions?.imageBullets\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [labels]=\\\"labels\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [arrows]=\\\"currentOptions?.previewArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.previewArrowsAutoHide\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\" [download]=\\\"currentOptions?.previewDownload\\\" [downloadIcon]=\\\"currentOptions?.downloadIcon\\\" [bullets]=\\\"currentOptions?.previewBullets\\\" (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\n        styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\n        providers: [NgxGalleryHelperService]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryComponent.ctorParameters = function () {\n      return [{\n        type: core.ElementRef\n      }];\n    };\n\n    NgxGalleryComponent.propDecorators = {\n      'options': [{\n        type: core.Input\n      }],\n      'images': [{\n        type: core.Input\n      }],\n      'imagesReady': [{\n        type: core.Output\n      }],\n      'change': [{\n        type: core.Output\n      }],\n      'previewOpen': [{\n        type: core.Output\n      }],\n      'previewClose': [{\n        type: core.Output\n      }],\n      'previewChange': [{\n        type: core.Output\n      }],\n      'preview': [{\n        type: core.ViewChild,\n        args: [NgxGalleryPreviewComponent]\n      }],\n      'image': [{\n        type: core.ViewChild,\n        args: [NgxGalleryImageComponent]\n      }],\n      'thubmnails': [{\n        type: core.ViewChild,\n        args: [NgxGalleryThumbnailsComponent]\n      }],\n      'width': [{\n        type: core.HostBinding,\n        args: ['style.width']\n      }],\n      'height': [{\n        type: core.HostBinding,\n        args: ['style.height']\n      }],\n      'left': [{\n        type: core.HostBinding,\n        args: ['style.left']\n      }],\n      'onResize': [{\n        type: core.HostListener,\n        args: ['window:resize']\n      }]\n    };\n    return NgxGalleryComponent;\n  }();\n\n  var NgxGalleryImage =\n  /** @class */\n  function () {\n    /**\r\n     * @param {?} obj\r\n     */\n    function NgxGalleryImage(obj) {\n      this.small = obj.small;\n      this.medium = obj.medium;\n      this.big = obj.big;\n      this.description = obj.description;\n      this.url = obj.url;\n      this.label = obj.label;\n    }\n\n    return NgxGalleryImage;\n  }();\n\n  var __extends = undefined && undefined.__extends || function () {\n    var extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return function (d, b) {\n      extendStatics(d, b);\n\n      function __() {\n        this.constructor = d;\n      }\n\n      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n  }();\n\n  var CustomHammerConfig =\n  /** @class */\n  function (_super) {\n    __extends(CustomHammerConfig, _super);\n\n    function CustomHammerConfig() {\n      var _this = _super !== null && _super.apply(this, arguments) || this;\n\n      _this.overrides = {\n        'pinch': {\n          enable: false\n        },\n        'rotate': {\n          enable: false\n        }\n      };\n      return _this;\n    }\n\n    return CustomHammerConfig;\n  }(platformBrowser.HammerGestureConfig);\n\n  var NgxGalleryModule =\n  /** @class */\n  function () {\n    function NgxGalleryModule() {}\n\n    NgxGalleryModule.decorators = [{\n      type: core.NgModule,\n      args: [{\n        imports: [common.CommonModule],\n        declarations: [NgxGalleryActionComponent, NgxGalleryArrowsComponent, NgxGalleryBulletsComponent, NgxGalleryImageComponent, NgxGalleryThumbnailsComponent, NgxGalleryPreviewComponent, NgxGalleryComponent],\n        exports: [NgxGalleryComponent],\n        providers: [{\n          provide: platformBrowser.HAMMER_GESTURE_CONFIG,\n          useClass: CustomHammerConfig\n        }]\n      }]\n    }];\n    /**\r\n     * @nocollapse\r\n     */\n\n    NgxGalleryModule.ctorParameters = function () {\n      return [];\n    };\n\n    return NgxGalleryModule;\n  }();\n\n  exports.CustomHammerConfig = CustomHammerConfig;\n  exports.NgxGalleryModule = NgxGalleryModule;\n  exports.NgxGalleryComponent = NgxGalleryComponent;\n  exports.NgxGalleryActionComponent = NgxGalleryActionComponent;\n  exports.NgxGalleryImageComponent = NgxGalleryImageComponent;\n  exports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\n  exports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\n  exports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\n  exports.NgxGalleryBulletsComponent = NgxGalleryBulletsComponent;\n  exports.NgxGalleryOptions = NgxGalleryOptions;\n  exports.NgxGalleryImage = NgxGalleryImage;\n  exports.NgxGalleryAnimation = NgxGalleryAnimation;\n  exports.NgxGalleryHelperService = NgxGalleryHelperService;\n  exports.NgxGalleryImageSize = NgxGalleryImageSize;\n  exports.NgxGalleryLayout = NgxGalleryLayout;\n  exports.NgxGalleryOrder = NgxGalleryOrder;\n  exports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\n  exports.NgxGalleryAction = NgxGalleryAction;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"names":["global","factory","exports","module","require","define","amd","core","common","platformBrowser","NgxGalleryActionComponent","disabled","titleText","onClick","EventEmitter","prototype","handleClick","event","emit","stopPropagation","preventDefault","decorators","type","Component","args","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","ctorParameters","propDecorators","Input","Output","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","styles","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","count","handleChange","index","NgxGalleryHelperService","renderer","swipeHandlers","Map","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","e","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Injectable","Renderer","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","sanitization","elementRef","helperService","onActiveChange","canChangeImage","ngOnInit","arrows","arrowsAutoHide","autoPlay","startAutoPlay","ngOnChanges","changes","_this","swipe","showNext","showPrev","onMouseEnter","autoPlayPauseOnHover","stopAutoPlay","onMouseLeave","reset","selectedIndex","getImages","images","lazyLoading","indexes_1","prevIndex","infinityMove","push","length","nextIndex","filter","img","i","indexOf","timer","setInterval","autoPlayInterval","clearInterval","clickable","show","setChangeTimeout","canShowNext","canShowPrev","timeout","animation","setTimeout","getSafeUrl","bypassSecurityTrustStyle","DomSanitizer","ElementRef","HostListener","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","getSafeStyle","value","NgxGalleryPreviewComponent","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","onClose","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnDestroy","keyDownListener","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","forceFullscreen","manageFullscreen","listenGlobal","closeFullscreen","imageMouseEnter","imageMouseLeave","clearTimeout","showAtIndex","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","_show","src","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","complete","naturalWidth","ChangeDetectorRef","ViewChild","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryAction","action","icon","NgxGalleryOptions","obj","preventDefaults","breakpoint","undefined","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryOrderedImage","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","medium","bigImages","big","labels","label","breakpoints","window","pop","a","concat","sort","b","combineOptions","second","Object","keys","val","providers","HostBinding","NgxGalleryImage","__extends","extendStatics","setPrototypeOf","__proto__","d","p","hasOwnProperty","__","constructor","create","CustomHammerConfig","_super","apply","arguments","overrides","enable","HammerGestureConfig","NgxGalleryModule","NgModule","imports","CommonModule","declarations","provide","HAMMER_GESTURE_CONFIG","useClass","defineProperty"],"sources":["C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/ngx-gallery/bundles/ngx-gallery.umd.js"],"sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/platform-browser')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/common', '@angular/platform-browser'], factory) :\n\t(factory((global['ngx-gallery'] = {}),global.core,global.common,global.platformBrowser));\n}(this, (function (exports,core,common,platformBrowser) { 'use strict';\n\nvar NgxGalleryActionComponent = /** @class */ (function () {\r\n    function NgxGalleryActionComponent() {\r\n        this.disabled = false;\r\n        this.titleText = '';\r\n        this.onClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @param {?} event\r\n     * @return {?}\r\n     */\r\n    NgxGalleryActionComponent.prototype.handleClick = function (event) {\r\n        if (!this.disabled) {\r\n            this.onClick.emit(event);\r\n        }\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    };\r\n    NgxGalleryActionComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-action',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-icon\\\" [class.ngx-gallery-icon-disabled]=\\\"disabled\\\"\\n            aria-hidden=\\\"true\\\"\\n            title=\\\"{{ titleText }}\\\"\\n            (click)=\\\"handleClick($event)\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{ icon }}\\\"></i>\\n        </div>\",\r\n                    changeDetection: core.ChangeDetectionStrategy.OnPush\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryActionComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryActionComponent.propDecorators = {\r\n        'icon': [{ type: core.Input },],\r\n        'disabled': [{ type: core.Input },],\r\n        'titleText': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryActionComponent;\r\n}());\n\nvar NgxGalleryArrowsComponent = /** @class */ (function () {\r\n    function NgxGalleryArrowsComponent() {\r\n        this.onPrevClick = new core.EventEmitter();\r\n        this.onNextClick = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handlePrevClick = function () {\r\n        this.onPrevClick.emit();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryArrowsComponent.prototype.handleNextClick = function () {\r\n        this.onNextClick.emit();\r\n    };\r\n    NgxGalleryArrowsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-arrows',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-left\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handlePrevClick()\\\" [class.ngx-gallery-disabled]=\\\"prevDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowPrevIcon}}\\\"></i>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-gallery-arrow-wrapper ngx-gallery-arrow-right\\\">\\n            <div class=\\\"ngx-gallery-icon ngx-gallery-arrow\\\" aria-hidden=\\\"true\\\" (click)=\\\"handleNextClick()\\\" [class.ngx-gallery-disabled]=\\\"nextDisabled\\\">\\n                <i class=\\\"ngx-gallery-icon-content {{arrowNextIcon}}\\\"></i>\\n            </div>\\n        </div>\\n    \",\r\n                    styles: [\".ngx-gallery-arrow-wrapper { position: absolute; height: 100%; width: 1px; display: table; z-index: 2000; table-layout: fixed; } .ngx-gallery-arrow-left { left: 0px; } .ngx-gallery-arrow-right { right: 0px; } .ngx-gallery-arrow { top: 50%; transform: translateY(-50%); cursor: pointer; } .ngx-gallery-arrow.ngx-gallery-disabled { opacity: 0.6; cursor: default; } .ngx-gallery-arrow-left .ngx-gallery-arrow { left: 10px; } .ngx-gallery-arrow-right .ngx-gallery-arrow { right: 10px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryArrowsComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryArrowsComponent.propDecorators = {\r\n        'prevDisabled': [{ type: core.Input },],\r\n        'nextDisabled': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'onPrevClick': [{ type: core.Output },],\r\n        'onNextClick': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryArrowsComponent;\r\n}());\n\nvar NgxGalleryBulletsComponent = /** @class */ (function () {\r\n    function NgxGalleryBulletsComponent() {\r\n        this.active = 0;\r\n        this.onChange = new core.EventEmitter();\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryBulletsComponent.prototype.getBullets = function () {\r\n        return Array(this.count);\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryBulletsComponent.prototype.handleChange = function (event, index) {\r\n        this.onChange.emit(index);\r\n    };\r\n    NgxGalleryBulletsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-bullets',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-bullet\\\" *ngFor=\\\"let bullet of getBullets(); let i = index;\\\" (click)=\\\"handleChange($event, i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == active }\\\"></div>\\n    \",\r\n                    styles: [\":host { position: absolute; z-index: 2000; display: inline-flex; left: 50%; transform: translateX(-50%); bottom: 0px; padding: 10px; } .ngx-gallery-bullet { width: 10px; height: 10px; border-radius: 50%; cursor: pointer; background: white; } .ngx-gallery-bullet:not(:first-child) { margin-left: 5px; } .ngx-gallery-bullet:hover, .ngx-gallery-bullet.ngx-gallery-active { background: black; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryBulletsComponent.ctorParameters = function () { return []; };\r\n    NgxGalleryBulletsComponent.propDecorators = {\r\n        'count': [{ type: core.Input },],\r\n        'active': [{ type: core.Input },],\r\n        'onChange': [{ type: core.Output },],\r\n    };\r\n    return NgxGalleryBulletsComponent;\r\n}());\n\nvar NgxGalleryHelperService = /** @class */ (function () {\r\n    /**\r\n     * @param {?} renderer\r\n     */\r\n    function NgxGalleryHelperService(renderer) {\r\n        this.renderer = renderer;\r\n        this.swipeHandlers = new Map();\r\n    }\r\n    /**\r\n     * @param {?} status\r\n     * @param {?} element\r\n     * @param {?} id\r\n     * @param {?} nextHandler\r\n     * @param {?} prevHandler\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.manageSwipe = function (status, element, id, nextHandler, prevHandler) {\r\n        var /** @type {?} */ handlers = this.getSwipeHandlers(id);\r\n        // swipeleft and swiperight are available only if hammerjs is included\r\n        try {\r\n            if (status && !handlers) {\r\n                this.swipeHandlers.set(id, [\r\n                    this.renderer.listen(element.nativeElement, 'swipeleft', function () { return nextHandler(); }),\r\n                    this.renderer.listen(element.nativeElement, 'swiperight', function () { return prevHandler(); })\r\n                ]);\r\n            }\r\n            else if (!status && handlers) {\r\n                handlers.map(function (handler) { return handler(); });\r\n                this.removeSwipeHandlers(id);\r\n            }\r\n        }\r\n        catch (e) { }\r\n    };\r\n    /**\r\n     * @param {?} url\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.validateUrl = function (url) {\r\n        if (url.replace) {\r\n            return url.replace(new RegExp(' ', 'g'), '%20')\r\n                .replace(new RegExp('\\'', 'g'), '%27');\r\n        }\r\n        else {\r\n            return url;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getBackgroundUrl = function (image) {\r\n        return 'url(\\'' + this.validateUrl(image) + '\\')';\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.getSwipeHandlers = function (id) {\r\n        return this.swipeHandlers.get(id);\r\n    };\r\n    /**\r\n     * @param {?} id\r\n     * @return {?}\r\n     */\r\n    NgxGalleryHelperService.prototype.removeSwipeHandlers = function (id) {\r\n        this.swipeHandlers.delete(id);\r\n    };\r\n    NgxGalleryHelperService.decorators = [\r\n        { type: core.Injectable },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryHelperService.ctorParameters = function () { return [\r\n        { type: core.Renderer, },\r\n    ]; };\r\n    return NgxGalleryHelperService;\r\n}());\n\nvar NgxGalleryAnimation = /** @class */ (function () {\r\n    function NgxGalleryAnimation() {\r\n    }\r\n    NgxGalleryAnimation.Fade = 'fade';\r\n    NgxGalleryAnimation.Slide = 'slide';\r\n    NgxGalleryAnimation.Rotate = 'rotate';\r\n    NgxGalleryAnimation.Zoom = 'zoom';\r\n    return NgxGalleryAnimation;\r\n}());\n\nvar NgxGalleryImageComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryImageComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.onClick = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.canChangeImage = true;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnInit = function () {\r\n        if (this.arrows && this.arrowsAutoHide) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseEnter = function () {\r\n        if (this.arrowsAutoHide && !this.arrows) {\r\n            this.arrows = true;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.onMouseLeave = function () {\r\n        if (this.arrowsAutoHide && this.arrows) {\r\n            this.arrows = false;\r\n        }\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getImages = function () {\r\n        if (!this.images) {\r\n            return [];\r\n        }\r\n        if (this.lazyLoading) {\r\n            var /** @type {?} */ indexes_1 = [this.selectedIndex];\r\n            var /** @type {?} */ prevIndex = this.selectedIndex - 1;\r\n            if (prevIndex === -1 && this.infinityMove) {\r\n                indexes_1.push(this.images.length - 1);\r\n            }\r\n            else if (prevIndex >= 0) {\r\n                indexes_1.push(prevIndex);\r\n            }\r\n            var /** @type {?} */ nextIndex = this.selectedIndex + 1;\r\n            if (nextIndex == this.images.length && this.infinityMove) {\r\n                indexes_1.push(0);\r\n            }\r\n            else if (nextIndex < this.images.length) {\r\n                indexes_1.push(nextIndex);\r\n            }\r\n            return this.images.filter(function (img, i) { return indexes_1.indexOf(i) != -1; });\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        this.stopAutoPlay();\r\n        this.timer = setInterval(function () {\r\n            if (!_this.showNext()) {\r\n                _this.selectedIndex = -1;\r\n                _this.showNext();\r\n            }\r\n        }, this.autoPlayInterval);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearInterval(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.handleClick = function (event, index) {\r\n        if (this.clickable) {\r\n            this.onClick.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.show = function (index) {\r\n        this.selectedIndex = index;\r\n        this.onActiveChange.emit(this.selectedIndex);\r\n        this.setChangeTimeout();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showNext = function () {\r\n        if (this.canShowNext() && this.canChangeImage) {\r\n            this.selectedIndex++;\r\n            if (this.selectedIndex === this.images.length) {\r\n                this.selectedIndex = 0;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev() && this.canChangeImage) {\r\n            this.selectedIndex--;\r\n            if (this.selectedIndex < 0) {\r\n                this.selectedIndex = this.images.length - 1;\r\n            }\r\n            this.onActiveChange.emit(this.selectedIndex);\r\n            this.setChangeTimeout();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.setChangeTimeout = function () {\r\n        var _this = this;\r\n        this.canChangeImage = false;\r\n        var /** @type {?} */ timeout = 1000;\r\n        if (this.animation === NgxGalleryAnimation.Slide\r\n            || this.animation === NgxGalleryAnimation.Fade) {\r\n            timeout = 500;\r\n        }\r\n        setTimeout(function () {\r\n            _this.canChangeImage = true;\r\n        }, timeout);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowNext = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex < this.images.length - 1\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.canShowPrev = function () {\r\n        if (this.images) {\r\n            return this.infinityMove || this.selectedIndex > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryImageComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    NgxGalleryImageComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-image',\r\n                    template: \"\\n        <div class=\\\"ngx-gallery-image-wrapper ngx-gallery-animation-{{animation}} ngx-gallery-image-size-{{size}}\\\">\\n            <div class=\\\"ngx-gallery-image\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [ngClass]=\\\"{ 'ngx-gallery-active': selectedIndex == image.index, 'ngx-gallery-inactive-left': selectedIndex > image.index, 'ngx-gallery-inactive-right': selectedIndex < image.index, 'ngx-gallery-clickable': clickable }\\\" [style.background-image]=\\\"getSafeUrl(image.src)\\\" (click)=\\\"handleClick($event, image.index)\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, image.index)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-image-text\\\" *ngIf=\\\"showDescription && descriptions[image.index]\\\" [innerHTML]=\\\"descriptions[image.index]\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n            </div>\\n        </div>\\n        <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"selectedIndex\\\" (onChange)=\\\"show($event)\\\"></ngx-gallery-bullets>\\n        <ngx-gallery-arrows class=\\\"ngx-gallery-image-size-{{size}}\\\" *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-image-wrapper { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; overflow: hidden; } .ngx-gallery-image { background-position: center; background-repeat: no-repeat; height: 100%; width: 100%; position: absolute; top: 0px; } .ngx-gallery-image.ngx-gallery-active { z-index: 1000; } .ngx-gallery-image-size-cover .ngx-gallery-image { background-size: cover; } .ngx-gallery-image-size-contain .ngx-gallery-image { background-size: contain; } .ngx-gallery-animation-fade .ngx-gallery-image { left: 0px; opacity: 0; transition: 0.5s ease-in-out; } .ngx-gallery-animation-fade .ngx-gallery-image.ngx-gallery-active { opacity: 1; } .ngx-gallery-animation-slide .ngx-gallery-image { transition: 0.5s ease-in-out; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-active { left: 0px; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-left { left: -100%; } .ngx-gallery-animation-slide .ngx-gallery-image.ngx-gallery-inactive-right { left: 100%; } .ngx-gallery-animation-rotate .ngx-gallery-image { transition: 1s ease; transform: scale(3.5, 3.5) rotate(90deg); left: 0px; opacity: 0; } .ngx-gallery-animation-rotate .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1) rotate(0deg); opacity: 1; } .ngx-gallery-animation-zoom .ngx-gallery-image { transition: 1s ease; transform: scale(2.5, 2.5); left: 0px; opacity: 0; } .ngx-gallery-animation-zoom .ngx-gallery-image.ngx-gallery-active { transform: scale(1, 1); opacity: 1; } .ngx-gallery-image-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; position: absolute; bottom: 0px; z-index: 10; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryImageComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryImageComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'bullets': [{ type: core.Input },],\r\n        'onClick': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryImageComponent;\r\n}());\n\nvar NgxGalleryOrder = /** @class */ (function () {\r\n    function NgxGalleryOrder() {\r\n    }\r\n    NgxGalleryOrder.Column = 1;\r\n    NgxGalleryOrder.Row = 2;\r\n    NgxGalleryOrder.Page = 3;\r\n    return NgxGalleryOrder;\r\n}());\n\nvar NgxGalleryThumbnailsComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     */\r\n    function NgxGalleryThumbnailsComponent(sanitization, elementRef, helperService) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.minStopIndex = 0;\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.index = 0;\r\n    }\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['selectedIndex']) {\r\n            this.validateIndex();\r\n        }\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'thumbnails', function () { return _this.moveRight(); }, function () { return _this.moveLeft(); });\r\n        }\r\n        if (this.images) {\r\n            this.remainingCountValue = this.images.length - (this.rows * this.columns);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseEnter = function () {\r\n        this.mouseenter = true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.onMouseLeave = function () {\r\n        this.mouseenter = false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.reset = function (index) {\r\n        this.selectedIndex = index;\r\n        this.setDefaultPosition();\r\n        this.index = 0;\r\n        this.validateIndex();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getImages = function () {\r\n        if (!this.images) {\r\n            return [];\r\n        }\r\n        if (this.remainingCount) {\r\n            return this.images.slice(0, this.rows * this.columns);\r\n        }\r\n        else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\r\n            var /** @type {?} */ stopIndex = 0;\r\n            if (this.order === NgxGalleryOrder.Column) {\r\n                stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\r\n            }\r\n            else if (this.order === NgxGalleryOrder.Page) {\r\n                stopIndex = this.index + ((this.columns * this.rows) * 2);\r\n            }\r\n            if (stopIndex <= this.minStopIndex) {\r\n                stopIndex = this.minStopIndex;\r\n            }\r\n            else {\r\n                this.minStopIndex = stopIndex;\r\n            }\r\n            return this.images.slice(0, stopIndex);\r\n        }\r\n        else {\r\n            return this.images;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} event\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.handleClick = function (event, index) {\r\n        if (!this.hasLink(index)) {\r\n            this.selectedIndex = index;\r\n            this.onActiveChange.emit(index);\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.hasLink = function (index) {\r\n        if (this.links && this.links.length && this.links[index])\r\n            return true;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveRight = function () {\r\n        if (this.canMoveRight()) {\r\n            this.index += this.moveSize;\r\n            var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n            if (this.index > maxIndex) {\r\n                this.index = maxIndex;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.moveLeft = function () {\r\n        if (this.canMoveLeft()) {\r\n            this.index -= this.moveSize;\r\n            if (this.index < 0) {\r\n                this.index = 0;\r\n            }\r\n            this.setThumbnailsPosition();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveRight = function () {\r\n        return this.index + this.columns < this.getMaxIndex() ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canMoveLeft = function () {\r\n        return this.index !== 0 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailLeft = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = Math.floor(index / this.rows);\r\n        }\r\n        else if (this.order === NgxGalleryOrder.Page) {\r\n            calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\r\n        }\r\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\r\n            calculatedIndex = index % this.columns;\r\n        }\r\n        else {\r\n            calculatedIndex = index % Math.ceil(this.images.length / this.rows);\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.columns);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailTop = function (index) {\r\n        var /** @type {?} */ calculatedIndex;\r\n        if (this.order === NgxGalleryOrder.Column) {\r\n            calculatedIndex = index % this.rows;\r\n        }\r\n        else if (this.order === NgxGalleryOrder.Page) {\r\n            calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\r\n        }\r\n        else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\r\n            calculatedIndex = Math.floor(index / this.columns);\r\n        }\r\n        else {\r\n            calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\r\n        }\r\n        return this.getThumbnailPosition(calculatedIndex, this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailWidth = function () {\r\n        return this.getThumbnailDimension(this.columns);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailHeight = function () {\r\n        return this.getThumbnailDimension(this.rows);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setThumbnailsPosition = function () {\r\n        this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\r\n        this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\r\n            * this.margin) / this.columns)) * this.index) + 'px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.setDefaultPosition = function () {\r\n        this.thumbnailsLeft = '0px';\r\n        this.thumbnailsMarginLeft = '0px';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.canShowArrows = function () {\r\n        if (this.remainingCount) {\r\n            return false;\r\n        }\r\n        else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\r\n            && (!this.arrowsAutoHide || this.mouseenter)) {\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.validateIndex = function () {\r\n        if (this.images) {\r\n            var /** @type {?} */ newIndex = void 0;\r\n            if (this.order === NgxGalleryOrder.Column) {\r\n                newIndex = Math.floor(this.selectedIndex / this.rows);\r\n            }\r\n            else {\r\n                newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\r\n            }\r\n            if (this.remainingCount) {\r\n                newIndex = 0;\r\n            }\r\n            if (newIndex < this.index || newIndex >= this.index + this.columns) {\r\n                var /** @type {?} */ maxIndex = this.getMaxIndex() - this.columns;\r\n                this.index = newIndex > maxIndex ? maxIndex : newIndex;\r\n                this.setThumbnailsPosition();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeUrl = function (image) {\r\n        return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailPosition = function (index, count) {\r\n        return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\r\n            + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\r\n    };\r\n    /**\r\n     * @param {?} count\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getThumbnailDimension = function (count) {\r\n        if (this.margin !== 0) {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% - '\r\n                + (((count - 1) * this.margin) / count) + 'px)');\r\n        }\r\n        else {\r\n            return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getMaxIndex = function () {\r\n        if (this.order == NgxGalleryOrder.Page) {\r\n            var /** @type {?} */ maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\r\n            if (this.images.length % this.getVisibleCount() > this.columns) {\r\n                maxIndex += this.columns;\r\n            }\r\n            else {\r\n                maxIndex += this.images.length % this.getVisibleCount();\r\n            }\r\n            return maxIndex;\r\n        }\r\n        else {\r\n            return Math.ceil(this.images.length / this.rows);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getVisibleCount = function () {\r\n        return this.columns * this.rows;\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NgxGalleryThumbnailsComponent.prototype.getSafeStyle = function (value) {\r\n        return this.sanitization.bypassSecurityTrustStyle(value);\r\n    };\r\n    NgxGalleryThumbnailsComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-thumbnails',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-thumbnails-wrapper ngx-gallery-thumbnail-size-{{size}}\\\">\\n        <div class=\\\"ngx-gallery-thumbnails\\\" [style.transform]=\\\"'translateX(' + thumbnailsLeft + ')'\\\" [style.marginLeft]=\\\"thumbnailsMarginLeft\\\">\\n            <a [href]=\\\"hasLink(i) ? links[i] : '#'\\\" [target]=\\\"linkTarget\\\" class=\\\"ngx-gallery-thumbnail\\\" *ngFor=\\\"let image of getImages(); let i = index;\\\" [style.background-image]=\\\"getSafeUrl(image)\\\" (click)=\\\"handleClick($event, i)\\\" [style.width]=\\\"getThumbnailWidth()\\\" [style.height]=\\\"getThumbnailHeight()\\\" [style.left]=\\\"getThumbnailLeft(i)\\\" [style.top]=\\\"getThumbnailTop(i)\\\" [ngClass]=\\\"{ 'ngx-gallery-active': i == selectedIndex, 'ngx-gallery-clickable': clickable }\\\" [attr.aria-label]=\\\"labels[i]\\\">\\n                <div class=\\\"ngx-gallery-icons-wrapper\\\">\\n                    <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, i)\\\"></ngx-gallery-action>\\n                </div>\\n                <div class=\\\"ngx-gallery-remaining-count-overlay\\\" *ngIf=\\\"remainingCount && remainingCountValue && (i == (rows * columns) - 1)\\\">\\n                    <span class=\\\"ngx-gallery-remaining-count\\\">+{{remainingCountValue}}</span>\\n                </div>\\n            </a>\\n        </div>\\n    </div>\\n    <ngx-gallery-arrows *ngIf=\\\"canShowArrows()\\\" (onPrevClick)=\\\"moveLeft()\\\" (onNextClick)=\\\"moveRight()\\\" [prevDisabled]=\\\"!canMoveLeft()\\\" [nextDisabled]=\\\"!canMoveRight()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n    \",\r\n                    styles: [\":host { width: 100%; display: inline-block; position: relative; } .ngx-gallery-thumbnails-wrapper { width: 100%; height: 100%; position: absolute; overflow: hidden; } .ngx-gallery-thumbnails { height: 100%; width: 100%; position: absolute; left: 0px; transform: translateX(0); transition: transform 0.5s ease-in-out; will-change: transform; } .ngx-gallery-thumbnails .ngx-gallery-thumbnail { position: absolute; height: 100%; background-position: center; background-repeat: no-repeat; text-decoration: none; } .ngx-gallery-thumbnail-size-cover .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: cover; } .ngx-gallery-thumbnail-size-contain .ngx-gallery-thumbnails .ngx-gallery-thumbnail { background-size: contain; } .ngx-gallery-remaining-count-overlay { width: 100%; height: 100%; position: absolute; left: 0px; top: 0px; background-color: rgba(0, 0, 0, 0.4); } .ngx-gallery-remaining-count { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); color: white; font-size: 30px; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryThumbnailsComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n    ]; };\r\n    NgxGalleryThumbnailsComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'links': [{ type: core.Input },],\r\n        'labels': [{ type: core.Input },],\r\n        'linkTarget': [{ type: core.Input },],\r\n        'columns': [{ type: core.Input },],\r\n        'rows': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'margin': [{ type: core.Input },],\r\n        'selectedIndex': [{ type: core.Input },],\r\n        'clickable': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'size': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'moveSize': [{ type: core.Input },],\r\n        'order': [{ type: core.Input },],\r\n        'remainingCount': [{ type: core.Input },],\r\n        'lazyLoading': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryThumbnailsComponent;\r\n}());\n\nvar NgxGalleryPreviewComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} sanitization\r\n     * @param {?} elementRef\r\n     * @param {?} helperService\r\n     * @param {?} renderer\r\n     * @param {?} changeDetectorRef\r\n     */\r\n    function NgxGalleryPreviewComponent(sanitization, elementRef, helperService, renderer, changeDetectorRef) {\r\n        this.sanitization = sanitization;\r\n        this.elementRef = elementRef;\r\n        this.helperService = helperService;\r\n        this.renderer = renderer;\r\n        this.changeDetectorRef = changeDetectorRef;\r\n        this.showSpinner = false;\r\n        this.positionLeft = 0;\r\n        this.positionTop = 0;\r\n        this.zoomValue = 1;\r\n        this.loading = false;\r\n        this.rotateValue = 0;\r\n        this.index = 0;\r\n        this.onOpen = new core.EventEmitter();\r\n        this.onClose = new core.EventEmitter();\r\n        this.onActiveChange = new core.EventEmitter();\r\n        this.isOpen = false;\r\n        this.initialX = 0;\r\n        this.initialY = 0;\r\n        this.initialLeft = 0;\r\n        this.initialTop = 0;\r\n        this.isMove = false;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnInit = function () {\r\n        if (this.arrows && this.arrowsAutoHide) {\r\n            this.arrows = false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnChanges = function (changes) {\r\n        var _this = this;\r\n        if (changes['swipe']) {\r\n            this.helperService.manageSwipe(this.swipe, this.elementRef, 'preview', function () { return _this.showNext(); }, function () { return _this.showPrev(); });\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.ngOnDestroy = function () {\r\n        if (this.keyDownListener) {\r\n            this.keyDownListener();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onMouseEnter = function () {\r\n        if (this.arrowsAutoHide && !this.arrows) {\r\n            this.arrows = true;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onMouseLeave = function () {\r\n        if (this.arrowsAutoHide && this.arrows) {\r\n            this.arrows = false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.onKeyDown = function (e) {\r\n        if (this.isOpen) {\r\n            if (this.keyboardNavigation) {\r\n                if (this.isKeyboardPrev(e)) {\r\n                    this.showPrev();\r\n                }\r\n                else if (this.isKeyboardNext(e)) {\r\n                    this.showNext();\r\n                }\r\n            }\r\n            if (this.closeOnEsc && this.isKeyboardEsc(e)) {\r\n                this.close();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.open = function (index) {\r\n        var _this = this;\r\n        this.onOpen.emit();\r\n        this.index = index;\r\n        this.isOpen = true;\r\n        this.show(true);\r\n        if (this.forceFullscreen) {\r\n            this.manageFullscreen();\r\n        }\r\n        this.keyDownListener = this.renderer.listenGlobal(\"window\", \"keydown\", function (e) { return _this.onKeyDown(e); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.close = function () {\r\n        this.isOpen = false;\r\n        this.closeFullscreen();\r\n        this.onClose.emit();\r\n        this.stopAutoPlay();\r\n        if (this.keyDownListener) {\r\n            this.keyDownListener();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseEnter = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.imageMouseLeave = function () {\r\n        if (this.autoPlay && this.autoPlayPauseOnHover) {\r\n            this.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.startAutoPlay = function () {\r\n        var _this = this;\r\n        if (this.autoPlay) {\r\n            this.stopAutoPlay();\r\n            this.timer = setTimeout(function () {\r\n                if (!_this.showNext()) {\r\n                    _this.index = -1;\r\n                    _this.showNext();\r\n                }\r\n            }, this.autoPlayInterval);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.stopAutoPlay = function () {\r\n        if (this.timer) {\r\n            clearTimeout(this.timer);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showAtIndex = function (index) {\r\n        this.index = index;\r\n        this.show();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showNext = function () {\r\n        if (this.canShowNext()) {\r\n            this.index++;\r\n            if (this.index === this.images.length) {\r\n                this.index = 0;\r\n            }\r\n            this.show();\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.showPrev = function () {\r\n        if (this.canShowPrev()) {\r\n            this.index--;\r\n            if (this.index < 0) {\r\n                this.index = this.images.length - 1;\r\n            }\r\n            this.show();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowNext = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index < this.images.length - 1 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canShowPrev = function () {\r\n        if (this.loading) {\r\n            return false;\r\n        }\r\n        else if (this.images) {\r\n            return this.infinityMove || this.index > 0 ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.manageFullscreen = function () {\r\n        if (this.fullscreen || this.forceFullscreen) {\r\n            var /** @type {?} */ doc = (document);\r\n            if (!doc.fullscreenElement && !doc.mozFullScreenElement\r\n                && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\r\n                this.openFullscreen();\r\n            }\r\n            else {\r\n                this.closeFullscreen();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} image\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getSafeUrl = function (image) {\r\n        return image.substr(0, 10) === 'data:image' ?\r\n            image : this.sanitization.bypassSecurityTrustUrl(image);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomIn = function () {\r\n        if (this.canZoomIn()) {\r\n            this.zoomValue += this.zoomStep;\r\n            if (this.zoomValue > this.zoomMax) {\r\n                this.zoomValue = this.zoomMax;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.zoomOut = function () {\r\n        if (this.canZoomOut()) {\r\n            this.zoomValue -= this.zoomStep;\r\n            if (this.zoomValue < this.zoomMin) {\r\n                this.zoomValue = this.zoomMin;\r\n            }\r\n            if (this.zoomValue <= 1) {\r\n                this.resetPosition();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateLeft = function () {\r\n        this.rotateValue -= 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.rotateRight = function () {\r\n        this.rotateValue += 90;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getTransform = function () {\r\n        return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomIn = function () {\r\n        return this.zoomValue < this.zoomMax ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canZoomOut = function () {\r\n        return this.zoomValue > this.zoomMin ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.canDragOnZoom = function () {\r\n        return this.zoom && this.zoomValue > 1;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseDownHandler = function (e) {\r\n        if (this.canDragOnZoom()) {\r\n            this.initialX = this.getClientX(e);\r\n            this.initialY = this.getClientY(e);\r\n            this.initialLeft = this.positionLeft;\r\n            this.initialTop = this.positionTop;\r\n            this.isMove = true;\r\n            e.preventDefault();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseUpHandler = function (e) {\r\n        this.isMove = false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.mouseMoveHandler = function (e) {\r\n        if (this.isMove) {\r\n            this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\r\n            this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientX = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.getClientY = function (e) {\r\n        return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.resetPosition = function () {\r\n        if (this.zoom) {\r\n            this.positionLeft = 0;\r\n            this.positionTop = 0;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardNext = function (e) {\r\n        return e.keyCode === 39 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardPrev = function (e) {\r\n        return e.keyCode === 37 ? true : false;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isKeyboardEsc = function (e) {\r\n        return e.keyCode === 27 ? true : false;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.openFullscreen = function () {\r\n        var /** @type {?} */ element = (document.documentElement);\r\n        if (element.requestFullscreen) {\r\n            element.requestFullscreen();\r\n        }\r\n        else if (element.msRequestFullscreen) {\r\n            element.msRequestFullscreen();\r\n        }\r\n        else if (element.mozRequestFullScreen) {\r\n            element.mozRequestFullScreen();\r\n        }\r\n        else if (element.webkitRequestFullscreen) {\r\n            element.webkitRequestFullscreen();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.closeFullscreen = function () {\r\n        if (this.isFullscreen()) {\r\n            var /** @type {?} */ doc = (document);\r\n            if (doc.exitFullscreen) {\r\n                doc.exitFullscreen();\r\n            }\r\n            else if (doc.msExitFullscreen) {\r\n                doc.msExitFullscreen();\r\n            }\r\n            else if (doc.mozCancelFullScreen) {\r\n                doc.mozCancelFullScreen();\r\n            }\r\n            else if (doc.webkitExitFullscreen) {\r\n                doc.webkitExitFullscreen();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isFullscreen = function () {\r\n        var /** @type {?} */ doc = (document);\r\n        return doc.fullscreenElement || doc.webkitFullscreenElement\r\n            || doc.mozFullScreenElement || doc.msFullscreenElement;\r\n    };\r\n    /**\r\n     * @param {?=} first\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.show = function (first) {\r\n        var _this = this;\r\n        if (first === void 0) { first = false; }\r\n        this.loading = true;\r\n        this.stopAutoPlay();\r\n        this.onActiveChange.emit(this.index);\r\n        if (first || !this.animation) {\r\n            this._show();\r\n        }\r\n        else {\r\n            setTimeout(function () { return _this._show(); }, 600);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype._show = function () {\r\n        var _this = this;\r\n        this.zoomValue = 1;\r\n        this.rotateValue = 0;\r\n        this.resetPosition();\r\n        this.src = this.getSafeUrl(/** @type {?} */ (this.images[this.index]));\r\n        this.srcIndex = this.index;\r\n        this.description = this.descriptions[this.index];\r\n        this.changeDetectorRef.markForCheck();\r\n        setTimeout(function () {\r\n            if (_this.isLoaded(_this.previewImage.nativeElement)) {\r\n                _this.loading = false;\r\n                _this.startAutoPlay();\r\n                _this.changeDetectorRef.markForCheck();\r\n            }\r\n            else {\r\n                setTimeout(function () {\r\n                    if (_this.loading) {\r\n                        _this.showSpinner = true;\r\n                        _this.changeDetectorRef.markForCheck();\r\n                    }\r\n                });\r\n                _this.previewImage.nativeElement.onload = function () {\r\n                    _this.loading = false;\r\n                    _this.showSpinner = false;\r\n                    _this.previewImage.nativeElement.onload = null;\r\n                    _this.startAutoPlay();\r\n                    _this.changeDetectorRef.markForCheck();\r\n                };\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} img\r\n     * @return {?}\r\n     */\r\n    NgxGalleryPreviewComponent.prototype.isLoaded = function (img) {\r\n        if (!img.complete) {\r\n            return false;\r\n        }\r\n        if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\r\n            return false;\r\n        }\r\n        return true;\r\n    };\r\n    NgxGalleryPreviewComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery-preview',\r\n                    template: \"\\n        <ngx-gallery-arrows *ngIf=\\\"arrows\\\" (onPrevClick)=\\\"showPrev()\\\" (onNextClick)=\\\"showNext()\\\" [prevDisabled]=\\\"!canShowPrev()\\\" [nextDisabled]=\\\"!canShowNext()\\\" [arrowPrevIcon]=\\\"arrowPrevIcon\\\" [arrowNextIcon]=\\\"arrowNextIcon\\\"></ngx-gallery-arrows>\\n        <div class=\\\"ngx-gallery-preview-top\\\">\\n            <div class=\\\"ngx-gallery-preview-icons\\\">\\n                <ngx-gallery-action *ngFor=\\\"let action of actions\\\" [icon]=\\\"action.icon\\\" [disabled]=\\\"action.disabled\\\" [titleText]=\\\"action.titleText\\\" (onClick)=\\\"action.onClick($event, index)\\\"></ngx-gallery-action>\\n                <a *ngIf=\\\"download && src\\\" [href]=\\\"src\\\" class=\\\"ngx-gallery-icon\\\" aria-hidden=\\\"true\\\" download>\\n                    <i class=\\\"ngx-gallery-icon-content {{ downloadIcon }}\\\"></i>\\n                </a>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomOutIcon\\\" [disabled]=\\\"!canZoomOut()\\\" (onClick)=\\\"zoomOut()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"zoom\\\" [icon]=\\\"zoomInIcon\\\" [disabled]=\\\"!canZoomIn()\\\" (onClick)=\\\"zoomIn()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateLeftIcon\\\" (onClick)=\\\"rotateLeft()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"rotate\\\" [icon]=\\\"rotateRightIcon\\\" (onClick)=\\\"rotateRight()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action *ngIf=\\\"fullscreen\\\" [icon]=\\\"'ngx-gallery-fullscreen ' + fullscreenIcon\\\" (onClick)=\\\"manageFullscreen()\\\"></ngx-gallery-action>\\n                <ngx-gallery-action [icon]=\\\"'ngx-gallery-close ' + closeIcon\\\" (onClick)=\\\"close()\\\"></ngx-gallery-action>\\n            </div>\\n        </div>\\n        <div class=\\\"ngx-spinner-wrapper ngx-gallery-center\\\" [class.ngx-gallery-active]=\\\"showSpinner\\\">\\n            <i class=\\\"ngx-gallery-icon ngx-gallery-spinner {{spinnerIcon}}\\\" aria-hidden=\\\"true\\\"></i>\\n        </div>\\n        <div class=\\\"ngx-gallery-preview-wrapper\\\" (click)=\\\"closeOnClick && close()\\\" (mouseup)=\\\"mouseUpHandler($event)\\\" (mousemove)=\\\"mouseMoveHandler($event)\\\" (touchend)=\\\"mouseUpHandler($event)\\\" (touchmove)=\\\"mouseMoveHandler($event)\\\">\\n            <div class=\\\"ngx-gallery-preview-img-wrapper\\\">\\n                <img *ngIf=\\\"src\\\" #previewImage class=\\\"ngx-gallery-preview-img ngx-gallery-center\\\" [src]=\\\"src\\\" (click)=\\\"$event.stopPropagation()\\\" (mouseenter)=\\\"imageMouseEnter()\\\" (mouseleave)=\\\"imageMouseLeave()\\\" (mousedown)=\\\"mouseDownHandler($event)\\\" (touchstart)=\\\"mouseDownHandler($event)\\\" [class.ngx-gallery-active]=\\\"!loading\\\" [class.animation]=\\\"animation\\\" [class.ngx-gallery-grab]=\\\"canDragOnZoom()\\\" [style.transform]=\\\"getTransform()\\\" [style.left]=\\\"positionLeft + 'px'\\\" [style.top]=\\\"positionTop + 'px'\\\"/>\\n                <ngx-gallery-bullets *ngIf=\\\"bullets\\\" [count]=\\\"images.length\\\" [active]=\\\"index\\\" (onChange)=\\\"showAtIndex($event)\\\"></ngx-gallery-bullets>\\n            </div>\\n            <div class=\\\"ngx-gallery-preview-text\\\" *ngIf=\\\"showDescription && description\\\" [innerHTML]=\\\"description\\\" (click)=\\\"$event.stopPropagation()\\\"></div>\\n        </div>\\n    \",\r\n                    styles: [\":host(.ngx-gallery-active) { width: 100%; height: 100%; position: fixed; left: 0; top: 0; background: rgba(0, 0, 0, 0.7); z-index: 10000; display: inline-block; } :host { display: none; } :host /deep/ .ngx-gallery-arrow { font-size: 50px; } :host /deep/ ngx-gallery-bullets { height: 5%; align-items: center; padding: 0px; } .ngx-gallery-preview-img { opacity: 0; max-width: 90%; max-height: 90%; user-select: none; transition: transform .5s; } .ngx-gallery-preview-img.animation { transition: opacity 0.5s linear, transform .5s; } .ngx-gallery-preview-img.ngx-gallery-active { opacity: 1; } .ngx-gallery-preview-img.ngx-gallery-grab { cursor: grab; cursor: -webkit-grab; } .ngx-gallery-icon.ngx-gallery-spinner { font-size: 50px; left: 0; display: inline-block; } :host /deep/ .ngx-gallery-preview-top { position: absolute; width: 100%; user-select: none; } :host /deep/ .ngx-gallery-preview-icons { float: right; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon { position: relative; margin-right: 10px; margin-top: 10px; font-size: 25px; cursor: pointer; text-decoration: none; } :host /deep/ .ngx-gallery-preview-icons .ngx-gallery-icon.ngx-gallery-icon-disabled { cursor: default; opacity: 0.4; } .ngx-spinner-wrapper { width: 50px; height: 50px; display: none; } .ngx-spinner-wrapper.ngx-gallery-active { display: inline-block; } .ngx-gallery-center { position: absolute; left: 0; right: 0; bottom: 0; margin: auto; top: 0; } .ngx-gallery-preview-text { width: 100%; background: rgba(0, 0, 0, 0.7); padding: 10px; text-align: center; color: white; font-size: 16px; flex: 0 1 auto; z-index: 10; } .ngx-gallery-preview-wrapper { width: 100%; height: 100%; display: flex; flex-flow: column; } .ngx-gallery-preview-img-wrapper { flex: 1 1 auto; position: relative; } \"]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryPreviewComponent.ctorParameters = function () { return [\r\n        { type: platformBrowser.DomSanitizer, },\r\n        { type: core.ElementRef, },\r\n        { type: NgxGalleryHelperService, },\r\n        { type: core.Renderer, },\r\n        { type: core.ChangeDetectorRef, },\r\n    ]; };\r\n    NgxGalleryPreviewComponent.propDecorators = {\r\n        'images': [{ type: core.Input },],\r\n        'descriptions': [{ type: core.Input },],\r\n        'showDescription': [{ type: core.Input },],\r\n        'arrows': [{ type: core.Input },],\r\n        'arrowsAutoHide': [{ type: core.Input },],\r\n        'swipe': [{ type: core.Input },],\r\n        'fullscreen': [{ type: core.Input },],\r\n        'forceFullscreen': [{ type: core.Input },],\r\n        'closeOnClick': [{ type: core.Input },],\r\n        'closeOnEsc': [{ type: core.Input },],\r\n        'keyboardNavigation': [{ type: core.Input },],\r\n        'arrowPrevIcon': [{ type: core.Input },],\r\n        'arrowNextIcon': [{ type: core.Input },],\r\n        'closeIcon': [{ type: core.Input },],\r\n        'fullscreenIcon': [{ type: core.Input },],\r\n        'spinnerIcon': [{ type: core.Input },],\r\n        'autoPlay': [{ type: core.Input },],\r\n        'autoPlayInterval': [{ type: core.Input },],\r\n        'autoPlayPauseOnHover': [{ type: core.Input },],\r\n        'infinityMove': [{ type: core.Input },],\r\n        'zoom': [{ type: core.Input },],\r\n        'zoomStep': [{ type: core.Input },],\r\n        'zoomMax': [{ type: core.Input },],\r\n        'zoomMin': [{ type: core.Input },],\r\n        'zoomInIcon': [{ type: core.Input },],\r\n        'zoomOutIcon': [{ type: core.Input },],\r\n        'animation': [{ type: core.Input },],\r\n        'actions': [{ type: core.Input },],\r\n        'rotate': [{ type: core.Input },],\r\n        'rotateLeftIcon': [{ type: core.Input },],\r\n        'rotateRightIcon': [{ type: core.Input },],\r\n        'download': [{ type: core.Input },],\r\n        'downloadIcon': [{ type: core.Input },],\r\n        'bullets': [{ type: core.Input },],\r\n        'onOpen': [{ type: core.Output },],\r\n        'onClose': [{ type: core.Output },],\r\n        'onActiveChange': [{ type: core.Output },],\r\n        'previewImage': [{ type: core.ViewChild, args: ['previewImage',] },],\r\n        'onMouseEnter': [{ type: core.HostListener, args: ['mouseenter',] },],\r\n        'onMouseLeave': [{ type: core.HostListener, args: ['mouseleave',] },],\r\n    };\r\n    return NgxGalleryPreviewComponent;\r\n}());\n\nvar NgxGalleryImageSize = /** @class */ (function () {\r\n    function NgxGalleryImageSize() {\r\n    }\r\n    NgxGalleryImageSize.Cover = 'cover';\r\n    NgxGalleryImageSize.Contain = 'contain';\r\n    return NgxGalleryImageSize;\r\n}());\n\nvar NgxGalleryLayout = /** @class */ (function () {\r\n    function NgxGalleryLayout() {\r\n    }\r\n    NgxGalleryLayout.ThumbnailsTop = 'thumbnails-top';\r\n    NgxGalleryLayout.ThumbnailsBottom = 'thumbnails-bottom';\r\n    return NgxGalleryLayout;\r\n}());\n\nvar NgxGalleryAction = /** @class */ (function () {\r\n    /**\r\n     * @param {?} action\r\n     */\r\n    function NgxGalleryAction(action) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n        this.onClick = action.onClick;\r\n    }\r\n    return NgxGalleryAction;\r\n}());\n\nvar NgxGalleryOptions = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOptions(obj) {\r\n        var preventDefaults = obj.breakpoint === undefined ? false : true;\r\n        function use(source, defaultValue) {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(function (action) { return new NgxGalleryAction(action); });\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n    return NgxGalleryOptions;\r\n}());\n\nvar NgxGalleryOrderedImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryOrderedImage(obj) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n    return NgxGalleryOrderedImage;\r\n}());\n\nvar NgxGalleryComponent = /** @class */ (function () {\r\n    /**\r\n     * @param {?} myElement\r\n     */\r\n    function NgxGalleryComponent(myElement) {\r\n        this.myElement = myElement;\r\n        this.imagesReady = new core.EventEmitter();\r\n        this.change = new core.EventEmitter();\r\n        this.previewOpen = new core.EventEmitter();\r\n        this.previewClose = new core.EventEmitter();\r\n        this.previewChange = new core.EventEmitter();\r\n        this.oldImagesLength = 0;\r\n        this.selectedIndex = 0;\r\n        this.breakpoint = undefined;\r\n        this.prevBreakpoint = undefined;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngOnInit = function () {\r\n        this.options = this.options.map(function (opt) { return new NgxGalleryOptions(opt); });\r\n        this.sortOptions();\r\n        this.setBreakpoint();\r\n        this.setOptions();\r\n        this.checkFullWidth();\r\n        if (this.currentOptions) {\r\n            this.selectedIndex = /** @type {?} */ (this.currentOptions.startIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngDoCheck = function () {\r\n        if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\r\n            || (this.images !== this.oldImages)) {\r\n            this.oldImagesLength = this.images.length;\r\n            this.oldImages = this.images;\r\n            this.setOptions();\r\n            this.setImages();\r\n            if (this.images && this.images.length) {\r\n                this.imagesReady.emit();\r\n            }\r\n            if (this.image) {\r\n                this.image.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n            }\r\n            if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\r\n                && this.images.length <= 1) {\r\n                this.currentOptions.thumbnails = false;\r\n                this.currentOptions.imageArrows = false;\r\n            }\r\n            this.resetThumbnails();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.ngAfterViewInit = function () {\r\n        this.checkFullWidth();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onResize = function () {\r\n        var _this = this;\r\n        this.setBreakpoint();\r\n        if (this.prevBreakpoint !== this.breakpoint) {\r\n            this.setOptions();\r\n            this.resetThumbnails();\r\n        }\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            if (this.fullWidthTimeout) {\r\n                clearTimeout(this.fullWidthTimeout);\r\n            }\r\n            this.fullWidthTimeout = setTimeout(function () {\r\n                _this.checkFullWidth();\r\n            }, 200);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getImageHeight = function () {\r\n        return (this.currentOptions && this.currentOptions.thumbnails) ?\r\n            this.currentOptions.imagePercent + '%' : '100%';\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsHeight = function () {\r\n        if (this.currentOptions && this.currentOptions.image) {\r\n            return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\r\n                + this.currentOptions.thumbnailsMargin + 'px)';\r\n        }\r\n        else {\r\n            return '100%';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginTop = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.getThumbnailsMarginBottom = function () {\r\n        if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\r\n            return this.currentOptions.thumbnailsMargin + 'px';\r\n        }\r\n        else {\r\n            return '0px';\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.openPreview = function (index) {\r\n        if (this.currentOptions.previewCustom) {\r\n            this.currentOptions.previewCustom(index);\r\n        }\r\n        else {\r\n            this.previewEnabled = true;\r\n            this.preview.open(index);\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewOpen = function () {\r\n        this.previewOpen.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.stopAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.onPreviewClose = function () {\r\n        this.previewEnabled = false;\r\n        this.previewClose.emit();\r\n        if (this.image && this.image.autoPlay) {\r\n            this.image.startAutoPlay();\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromImage = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.selectFromThumbnails = function (index) {\r\n        this.select(index);\r\n        if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\r\n            && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\r\n            this.openPreview(this.selectedIndex);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.show = function (index) {\r\n        this.select(index);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showNext = function () {\r\n        this.image.showNext();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.showPrev = function () {\r\n        this.image.showPrev();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowNext = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\r\n                ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canShowPrev = function () {\r\n        if (this.images && this.currentOptions) {\r\n            return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.previewSelect = function (index) {\r\n        this.previewChange.emit({ index: index, image: this.images[index] });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.moveThumbnailsRight = function () {\r\n        this.thubmnails.moveRight();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.moveThumbnailsLeft = function () {\r\n        this.thubmnails.moveLeft();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canMoveThumbnailsRight = function () {\r\n        return this.thubmnails.canMoveRight();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.canMoveThumbnailsLeft = function () {\r\n        return this.thubmnails.canMoveLeft();\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.resetThumbnails = function () {\r\n        if (this.thubmnails) {\r\n            this.thubmnails.reset(/** @type {?} */ (this.currentOptions.startIndex));\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} index\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.select = function (index) {\r\n        this.selectedIndex = index;\r\n        this.change.emit({\r\n            index: index,\r\n            image: this.images[index]\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.checkFullWidth = function () {\r\n        if (this.currentOptions && this.currentOptions.fullWidth) {\r\n            this.width = document.body.clientWidth + 'px';\r\n            this.left = (-(document.body.clientWidth -\r\n                this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setImages = function () {\r\n        this.smallImages = this.images.map(function (img) { /** @type {?} */ return (img.small); });\r\n        this.mediumImages = this.images.map(function (img, i) { return new NgxGalleryOrderedImage({\r\n            src: img.medium,\r\n            index: i\r\n        }); });\r\n        this.bigImages = this.images.map(function (img) { /** @type {?} */ return (img.big); });\r\n        this.descriptions = this.images.map(function (img) { /** @type {?} */ return (img.description); });\r\n        this.links = this.images.map(function (img) { /** @type {?} */ return (img.url); });\r\n        this.labels = this.images.map(function (img) { /** @type {?} */ return (img.label); });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setBreakpoint = function () {\r\n        this.prevBreakpoint = this.breakpoint;\r\n        var /** @type {?} */ breakpoints;\r\n        if (typeof window !== 'undefined') {\r\n            breakpoints = this.options.filter(function (opt) { return opt.breakpoint >= window.innerWidth; })\r\n                .map(function (opt) { return opt.breakpoint; });\r\n        }\r\n        if (breakpoints && breakpoints.length) {\r\n            this.breakpoint = breakpoints.pop();\r\n        }\r\n        else {\r\n            this.breakpoint = undefined;\r\n        }\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.sortOptions = function () {\r\n        this.options = this.options.filter(function (a) { return a.breakpoint === undefined; }).concat(this.options\r\n            .filter(function (a) { return a.breakpoint !== undefined; })\r\n            .sort(function (a, b) { return b.breakpoint - a.breakpoint; }));\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.setOptions = function () {\r\n        var _this = this;\r\n        this.currentOptions = new NgxGalleryOptions({});\r\n        this.options\r\n            .filter(function (opt) { return opt.breakpoint === undefined || opt.breakpoint >= _this.breakpoint; })\r\n            .map(function (opt) { return _this.combineOptions(_this.currentOptions, opt); });\r\n        this.width = /** @type {?} */ (this.currentOptions.width);\r\n        this.height = /** @type {?} */ (this.currentOptions.height);\r\n    };\r\n    /**\r\n     * @param {?} first\r\n     * @param {?} second\r\n     * @return {?}\r\n     */\r\n    NgxGalleryComponent.prototype.combineOptions = function (first, second) {\r\n        Object.keys(second).map(function (val) { return first[val] = second[val] !== undefined ? second[val] : first[val]; });\r\n    };\r\n    NgxGalleryComponent.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'ngx-gallery',\r\n                    template: \"\\n    <div class=\\\"ngx-gallery-layout {{currentOptions?.layout}}\\\">\\n        <ngx-gallery-image *ngIf=\\\"currentOptions?.image\\\" [style.height]=\\\"getImageHeight()\\\" [images]=\\\"mediumImages\\\" [clickable]=\\\"currentOptions?.preview\\\" [selectedIndex]=\\\"selectedIndex\\\" [arrows]=\\\"currentOptions?.imageArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.imageArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [swipe]=\\\"currentOptions?.imageSwipe\\\" [animation]=\\\"currentOptions?.imageAnimation\\\" [size]=\\\"currentOptions?.imageSize\\\" [autoPlay]=\\\"currentOptions?.imageAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.imageAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.imageAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.imageInfinityMove\\\"  [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.imageActions\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.imageDescription\\\" [bullets]=\\\"currentOptions?.imageBullets\\\" (onClick)=\\\"openPreview($event)\\\" (onActiveChange)=\\\"selectFromImage($event)\\\"></ngx-gallery-image>\\n\\n        <ngx-gallery-thumbnails *ngIf=\\\"currentOptions?.thumbnails\\\" [style.marginTop]=\\\"getThumbnailsMarginTop()\\\" [style.marginBottom]=\\\"getThumbnailsMarginBottom()\\\" [style.height]=\\\"getThumbnailsHeight()\\\" [images]=\\\"smallImages\\\" [links]=\\\"currentOptions?.thumbnailsAsLinks ? links : []\\\" [labels]=\\\"labels\\\" [linkTarget]=\\\"currentOptions?.linkTarget\\\" [selectedIndex]=\\\"selectedIndex\\\" [columns]=\\\"currentOptions?.thumbnailsColumns\\\" [rows]=\\\"currentOptions?.thumbnailsRows\\\" [margin]=\\\"currentOptions?.thumbnailMargin\\\" [arrows]=\\\"currentOptions?.thumbnailsArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.thumbnailsArrowsAutoHide\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [clickable]=\\\"currentOptions?.image || currentOptions?.preview\\\" [swipe]=\\\"currentOptions?.thumbnailsSwipe\\\" [size]=\\\"currentOptions?.thumbnailSize\\\" [moveSize]=\\\"currentOptions?.thumbnailsMoveSize\\\" [order]=\\\"currentOptions?.thumbnailsOrder\\\" [remainingCount]=\\\"currentOptions?.thumbnailsRemainingCount\\\" [lazyLoading]=\\\"currentOptions?.lazyLoading\\\" [actions]=\\\"currentOptions?.thumbnailActions\\\"  (onActiveChange)=\\\"selectFromThumbnails($event)\\\"></ngx-gallery-thumbnails>\\n\\n        <ngx-gallery-preview [images]=\\\"bigImages\\\" [descriptions]=\\\"descriptions\\\" [showDescription]=\\\"currentOptions?.previewDescription\\\" [arrowPrevIcon]=\\\"currentOptions?.arrowPrevIcon\\\" [arrowNextIcon]=\\\"currentOptions?.arrowNextIcon\\\" [closeIcon]=\\\"currentOptions?.closeIcon\\\" [fullscreenIcon]=\\\"currentOptions?.fullscreenIcon\\\" [spinnerIcon]=\\\"currentOptions?.spinnerIcon\\\" [arrows]=\\\"currentOptions?.previewArrows\\\" [arrowsAutoHide]=\\\"currentOptions?.previewArrowsAutoHide\\\" [swipe]=\\\"currentOptions?.previewSwipe\\\" [fullscreen]=\\\"currentOptions?.previewFullscreen\\\" [forceFullscreen]=\\\"currentOptions?.previewForceFullscreen\\\" [closeOnClick]=\\\"currentOptions?.previewCloseOnClick\\\" [closeOnEsc]=\\\"currentOptions?.previewCloseOnEsc\\\" [keyboardNavigation]=\\\"currentOptions?.previewKeyboardNavigation\\\" [animation]=\\\"currentOptions?.previewAnimation\\\" [autoPlay]=\\\"currentOptions?.previewAutoPlay\\\" [autoPlayInterval]=\\\"currentOptions?.previewAutoPlayInterval\\\" [autoPlayPauseOnHover]=\\\"currentOptions?.previewAutoPlayPauseOnHover\\\" [infinityMove]=\\\"currentOptions?.previewInfinityMove\\\" [zoom]=\\\"currentOptions?.previewZoom\\\" [zoomStep]=\\\"currentOptions?.previewZoomStep\\\" [zoomMax]=\\\"currentOptions?.previewZoomMax\\\" [zoomMin]=\\\"currentOptions?.previewZoomMin\\\" [zoomInIcon]=\\\"currentOptions?.zoomInIcon\\\" [zoomOutIcon]=\\\"currentOptions?.zoomOutIcon\\\" [actions]=\\\"currentOptions?.actions\\\" [rotate]=\\\"currentOptions?.previewRotate\\\" [rotateLeftIcon]=\\\"currentOptions?.rotateLeftIcon\\\" [rotateRightIcon]=\\\"currentOptions?.rotateRightIcon\\\" [download]=\\\"currentOptions?.previewDownload\\\" [downloadIcon]=\\\"currentOptions?.downloadIcon\\\" [bullets]=\\\"currentOptions?.previewBullets\\\" (onClose)=\\\"onPreviewClose()\\\" (onOpen)=\\\"onPreviewOpen()\\\" (onActiveChange)=\\\"previewSelect($event)\\\" [class.ngx-gallery-active]=\\\"previewEnabled\\\"></ngx-gallery-preview>\\n    </div>\\n    \",\r\n                    styles: [\":host { display: inline-block; } :host > * { float: left; } :host /deep/ * { box-sizing: border-box; } :host /deep/ .ngx-gallery-icon { color: white; font-size: 25px; position: absolute; z-index: 2000; display: inline-block; } :host /deep/ .ngx-gallery-icon .ngx-gallery-icon-content { display: block; } :host /deep/ .ngx-gallery-clickable { cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper .ngx-gallery-icon { position: relative; margin-right: 5px; margin-top: 5px; font-size: 20px; cursor: pointer; } :host /deep/ .ngx-gallery-icons-wrapper { float: right; } :host .ngx-gallery-layout { width: 100%; height: 100%; display: flex; flex-direction: column; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-image { order: 2; } :host .ngx-gallery-layout.thumbnails-top ngx-gallery-thumbnails { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-image { order: 1; } :host .ngx-gallery-layout.thumbnails-bottom ngx-gallery-thumbnails { order: 2; } \"],\r\n                    providers: [NgxGalleryHelperService]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryComponent.ctorParameters = function () { return [\r\n        { type: core.ElementRef, },\r\n    ]; };\r\n    NgxGalleryComponent.propDecorators = {\r\n        'options': [{ type: core.Input },],\r\n        'images': [{ type: core.Input },],\r\n        'imagesReady': [{ type: core.Output },],\r\n        'change': [{ type: core.Output },],\r\n        'previewOpen': [{ type: core.Output },],\r\n        'previewClose': [{ type: core.Output },],\r\n        'previewChange': [{ type: core.Output },],\r\n        'preview': [{ type: core.ViewChild, args: [NgxGalleryPreviewComponent,] },],\r\n        'image': [{ type: core.ViewChild, args: [NgxGalleryImageComponent,] },],\r\n        'thubmnails': [{ type: core.ViewChild, args: [NgxGalleryThumbnailsComponent,] },],\r\n        'width': [{ type: core.HostBinding, args: ['style.width',] },],\r\n        'height': [{ type: core.HostBinding, args: ['style.height',] },],\r\n        'left': [{ type: core.HostBinding, args: ['style.left',] },],\r\n        'onResize': [{ type: core.HostListener, args: ['window:resize',] },],\r\n    };\r\n    return NgxGalleryComponent;\r\n}());\n\nvar NgxGalleryImage = /** @class */ (function () {\r\n    /**\r\n     * @param {?} obj\r\n     */\r\n    function NgxGalleryImage(obj) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n    return NgxGalleryImage;\r\n}());\n\nvar __extends = (undefined && undefined.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar CustomHammerConfig = /** @class */ (function (_super) {\r\n    __extends(CustomHammerConfig, _super);\r\n    function CustomHammerConfig() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.overrides = ({\r\n            'pinch': { enable: false },\r\n            'rotate': { enable: false }\r\n        });\r\n        return _this;\r\n    }\r\n    return CustomHammerConfig;\r\n}(platformBrowser.HammerGestureConfig));\r\nvar NgxGalleryModule = /** @class */ (function () {\r\n    function NgxGalleryModule() {\r\n    }\r\n    NgxGalleryModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    imports: [\r\n                        common.CommonModule\r\n                    ],\r\n                    declarations: [\r\n                        NgxGalleryActionComponent,\r\n                        NgxGalleryArrowsComponent,\r\n                        NgxGalleryBulletsComponent,\r\n                        NgxGalleryImageComponent,\r\n                        NgxGalleryThumbnailsComponent,\r\n                        NgxGalleryPreviewComponent,\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    exports: [\r\n                        NgxGalleryComponent\r\n                    ],\r\n                    providers: [\r\n                        { provide: platformBrowser.HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\r\n                    ]\r\n                },] },\r\n    ];\r\n    /**\r\n     * @nocollapse\r\n     */\r\n    NgxGalleryModule.ctorParameters = function () { return []; };\r\n    return NgxGalleryModule;\r\n}());\n\nexports.CustomHammerConfig = CustomHammerConfig;\nexports.NgxGalleryModule = NgxGalleryModule;\nexports.NgxGalleryComponent = NgxGalleryComponent;\nexports.NgxGalleryActionComponent = NgxGalleryActionComponent;\nexports.NgxGalleryImageComponent = NgxGalleryImageComponent;\nexports.NgxGalleryThumbnailsComponent = NgxGalleryThumbnailsComponent;\nexports.NgxGalleryPreviewComponent = NgxGalleryPreviewComponent;\nexports.NgxGalleryArrowsComponent = NgxGalleryArrowsComponent;\nexports.NgxGalleryBulletsComponent = NgxGalleryBulletsComponent;\nexports.NgxGalleryOptions = NgxGalleryOptions;\nexports.NgxGalleryImage = NgxGalleryImage;\nexports.NgxGalleryAnimation = NgxGalleryAnimation;\nexports.NgxGalleryHelperService = NgxGalleryHelperService;\nexports.NgxGalleryImageSize = NgxGalleryImageSize;\nexports.NgxGalleryLayout = NgxGalleryLayout;\nexports.NgxGalleryOrder = NgxGalleryOrder;\nexports.NgxGalleryOrderedImage = NgxGalleryOrderedImage;\nexports.NgxGalleryAction = NgxGalleryAction;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}