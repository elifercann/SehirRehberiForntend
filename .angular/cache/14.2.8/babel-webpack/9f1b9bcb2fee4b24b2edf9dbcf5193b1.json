{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ApplicationRef, createComponent, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostListener, HostBinding, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, fromEvent, asyncScheduler } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { NgxEditorError, isNil } from 'ngx-editor/utils';\nimport { Plugin, PluginKey, NodeSelection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\nconst _c0 = [\"imgEl\"];\n\nfunction ImageViewComponent_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"span\", 4)(1, \"span\", 5);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.startResizing($event, \"left\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"span\", 6);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.startResizing($event, \"right\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_3_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.startResizing($event, \"left\"));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 8);\n    i0.ɵɵlistener(\"mousedown\", function ImageViewComponent_span_1_Template_span_mousedown_4_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.startResizing($event, \"right\"));\n    });\n    i0.ɵɵelementEnd()();\n  }\n}\n\nconst _c1 = function (a0) {\n  return {\n    \"NgxEditor__Resizer--Active\": a0\n  };\n};\n\nconst _c2 = [\"ngxEditor\"];\nconst _c3 = [\"*\"];\n\nfunction LinkComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.href.errors == null ? null : ctx_r1.href.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\n\nfunction LinkComponent_div_2_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r2.text.errors == null ? null : ctx_r2.text.errors[\"required\"]) && \"This is required\", \" \");\n  }\n}\n\nfunction LinkComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function LinkComponent_div_2_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.insertLink($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵtemplate(7, LinkComponent_div_2_div_7_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵtemplate(13, LinkComponent_div_2_div_13_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"div\", 4)(15, \"div\", 5)(16, \"label\");\n    i0.ɵɵelement(17, \"input\", 10);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(19, \"button\", 11);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.href.touched && ctx_r0.href.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"text\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.text.touched && ctx_r0.text.invalid);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getLabel(\"openInNewTab\"), \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"insert\"));\n  }\n}\n\nconst _c4 = function (a0, a1) {\n  return {\n    \"NgxEditor__Dropdown--Active\": a0,\n    \"NgxEditor--Disabled\": a1\n  };\n};\n\nfunction DropdownComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵlistener(\"mousedown\", function DropdownComponent_div_2_div_1_Template_div_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const item_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.onClick($event, item_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c4, item_r2 === ctx_r1.activeItem, ctx_r1.disabledItems.includes(item_r2)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.getName(item_r2), \" \");\n  }\n}\n\nfunction DropdownComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, DropdownComponent_div_2_div_1_Template, 2, 5, \"div\", 3);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.items)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction ImageComponent_div_2_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r1.src.errors == null ? null : ctx_r1.src.errors[\"pattern\"]) && \"Please enter valid url.\", \" \");\n  }\n}\n\nfunction ImageComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"form\", 3);\n    i0.ɵɵlistener(\"ngSubmit\", function ImageComponent_div_2_Template_form_ngSubmit_1_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.insertLink($event));\n    });\n    i0.ɵɵelementStart(2, \"div\", 4)(3, \"div\", 5)(4, \"label\", 6);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 7);\n    i0.ɵɵtemplate(7, ImageComponent_div_2_div_7_Template, 2, 1, \"div\", 8);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"div\", 4)(9, \"div\", 5)(10, \"label\", 6);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(12, \"input\", 9);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(13, \"div\", 4)(14, \"div\", 5)(15, \"label\", 6);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"input\", 10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"button\", 11);\n    i0.ɵɵtext(19);\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroup\", ctx_r0.form);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"url\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.src.touched && ctx_r0.src.invalid);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"altText\"));\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"title\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.form.valid || !ctx_r0.form.dirty);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r0.getLabel(\"insert\"));\n  }\n}\n\nconst _c5 = function (a0, a1) {\n  return {\n    backgroundColor: a0,\n    color: a1\n  };\n};\n\nconst _c6 = function (a0) {\n  return {\n    \"NgxEditor__Color--Active\": a0\n  };\n};\n\nfunction ColorPickerComponent_div_2_div_1_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"button\", 7);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_2_div_1_button_1_Template_button_mousedown_0_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const color_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r5.onColorSelect($event, color_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const color_r4 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngStyle\", i0.ɵɵpureFunction2(3, _c5, color_r4, ctx_r3.getContrastYIQ(color_r4)))(\"title\", color_r4)(\"ngClass\", i0.ɵɵpureFunction1(6, _c6, ctx_r3.activeColors.includes(color_r4)));\n  }\n}\n\nfunction ColorPickerComponent_div_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_button_1_Template, 1, 8, \"button\", 6);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const colorGroup_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", colorGroup_r2)(\"ngForTrackBy\", ctx_r1.trackByIndex);\n  }\n}\n\nfunction ColorPickerComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 2);\n    i0.ɵɵtemplate(1, ColorPickerComponent_div_2_div_1_Template, 2, 2, \"div\", 3);\n    i0.ɵɵelementStart(2, \"button\", 4);\n    i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_div_2_Template_button_mousedown_2_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.remove($event));\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.presets)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", !ctx_r0.isActive);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.getLabel(\"remove\"), \" \");\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-toggle-command\", 7);\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r7.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-insert-command\", 7);\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r8.iconContainerClass);\n    i0.ɵɵproperty(\"toolbarItem\", item_r5);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-link\");\n  }\n\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r9.iconContainerClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-image\");\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r10.iconContainerClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-dropdown\", 9);\n  }\n\n  if (rf & 2) {\n    const dropdownItem_r18 = ctx.$implicit;\n    const ctx_r17 = i0.ɵɵnextContext(4);\n    i0.ɵɵclassMap(ctx_r17.dropdownContainerClass);\n    i0.ɵɵproperty(\"group\", dropdownItem_r18.key)(\"items\", dropdownItem_r18.value);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ng_container_5_ngx_dropdown_1_Template, 1, 4, \"ngx-dropdown\", 8);\n    i0.ɵɵpipe(2, \"keyvalue\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 2, ctx_r11.getDropdownItems(item_r5)))(\"ngForTrackBy\", ctx_r11.trackByIndex);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 10);\n  }\n\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r12.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r12.presets);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"ngx-color-picker\", 11);\n  }\n\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r13.iconContainerClass);\n    i0.ɵɵproperty(\"presets\", ctx_r13.presets);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\");\n  }\n\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(ctx_r14.seperatorClass);\n  }\n}\n\nfunction MenuComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_ngx_toggle_command_1_Template, 1, 3, \"ngx-toggle-command\", 3);\n    i0.ɵɵtemplate(2, MenuComponent_ng_container_1_ng_container_1_ngx_insert_command_2_Template, 1, 3, \"ngx-insert-command\", 3);\n    i0.ɵɵtemplate(3, MenuComponent_ng_container_1_ng_container_1_ngx_link_3_Template, 1, 2, \"ngx-link\", 4);\n    i0.ɵɵtemplate(4, MenuComponent_ng_container_1_ng_container_1_ngx_image_4_Template, 1, 2, \"ngx-image\", 4);\n    i0.ɵɵtemplate(5, MenuComponent_ng_container_1_ng_container_1_ng_container_5_Template, 3, 4, \"ng-container\", 2);\n    i0.ɵɵtemplate(6, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_6_Template, 1, 3, \"ngx-color-picker\", 5);\n    i0.ɵɵtemplate(7, MenuComponent_ng_container_1_ng_container_1_ngx_color_picker_7_Template, 1, 3, \"ngx-color-picker\", 6);\n    i0.ɵɵtemplate(8, MenuComponent_ng_container_1_ng_container_1_div_8_Template, 1, 2, \"div\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r5 = ctx.$implicit;\n    const lastItem_r6 = ctx.last;\n    const lastToolbarItem_r3 = i0.ɵɵnextContext().last;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.toggleCommands.includes(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.insertCommands.includes(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"link\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"image\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.isDropDown(item_r5));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"text_color\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r5 === \"background_color\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lastItem_r6 && !lastToolbarItem_r3);\n  }\n}\n\nfunction MenuComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenuComponent_ng_container_1_ng_container_1_Template, 9, 8, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const toolbarItem_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r2)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction MenuComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainer(1, 12);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.customMenuRef);\n  }\n}\n\nconst _c7 = function (a0, a1) {\n  return {\n    \"NgxEditor--Disabled\": a0,\n    \"NgxEditor__MenuBar--Reverse\": a1\n  };\n};\n\nconst _c8 = function (a0, a1) {\n  return {\n    \"NgxBubbleMenu__Icon--Active\": a0,\n    \"NgxEditor--Disabled\": a1\n  };\n};\n\nfunction BubbleComponent_ng_container_0_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵlistener(\"mousedown\", function BubbleComponent_ng_container_0_ng_container_1_div_1_Template_div_mousedown_0_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const item_r4 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.onClick($event, item_r4));\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(3, _c8, ctx_r6.activeItems.includes(item_r4), !ctx_r6.execulableItems.includes(item_r4)))(\"title\", ctx_r6.getTitle(item_r4))(\"innerHTML\", ctx_r6.getIcon(item_r4), i0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_ng_container_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 4);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_div_1_Template, 1, 6, \"div\", 1);\n    i0.ɵɵtemplate(2, BubbleComponent_ng_container_0_ng_container_1_div_2_Template, 1, 0, \"div\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const item_r4 = ctx.$implicit;\n    const lastItem_r5 = ctx.last;\n    const lastToolbarItem_r2 = i0.ɵɵnextContext().last;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.toggleCommands.includes(item_r4));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", lastItem_r5 && !lastToolbarItem_r2);\n  }\n}\n\nfunction BubbleComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, BubbleComponent_ng_container_0_ng_container_1_Template, 3, 2, \"ng-container\", 0);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const toolbarItem_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", toolbarItem_r1)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction FloatingMenuComponent_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"ngx-bubble\", 2);\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"editor\", ctx_r1.editor);\n  }\n}\n\nconst editablePlugin = (editable = true) => {\n  return new Plugin({\n    key: new PluginKey('editable'),\n    state: {\n      init() {\n        return editable;\n      },\n\n      apply(tr, previousVal) {\n        return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n      }\n\n    },\n    props: {\n      editable(state) {\n        return this.getState(state);\n      },\n\n      attributes(state) {\n        const isEnabled = this.getState(state);\n\n        if (isEnabled) {\n          return null;\n        }\n\n        return {\n          class: 'NgxEditor__Content--Disabled'\n        };\n      }\n\n    }\n  });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\n\nconst placeholderPlugin = text => {\n  return new Plugin({\n    key: new PluginKey('placeholder'),\n    state: {\n      init() {\n        return text ?? '';\n      },\n\n      apply(tr, previousVal) {\n        const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n        return placeholder;\n      }\n\n    },\n    props: {\n      decorations(state) {\n        const {\n          doc\n        } = state;\n        const {\n          textContent,\n          childCount\n        } = doc;\n        const placeholder = this.getState(state);\n\n        if (!placeholder || childCount > 1) {\n          return DecorationSet.empty;\n        }\n\n        const decorations = [];\n\n        const decorate = (node, pos) => {\n          if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n            const from = pos;\n            const to = pos + node.nodeSize;\n            const placeholderNode = Decoration.node(from, to, {\n              'class': PLACEHOLDER_CLASSNAME,\n              'data-placeholder': placeholder,\n              'data-align': node.attrs['align'] ?? null\n            });\n            decorations.push(placeholderNode);\n          }\n\n          return false;\n        };\n\n        doc.descendants(decorate);\n        return DecorationSet.create(doc, decorations);\n      }\n\n    }\n  });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n  return new Plugin({\n    key: new PluginKey('attributes'),\n    props: {\n      attributes\n    }\n  });\n};\n\nconst focusPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('focus'),\n    props: {\n      handleDOMEvents: {\n        focus: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nconst blurPlugin = cb => {\n  return new Plugin({\n    key: new PluginKey('blur'),\n    props: {\n      handleDOMEvents: {\n        blur: () => {\n          cb();\n          return false;\n        }\n      }\n    }\n  });\n};\n\nclass ImageViewComponent {\n  constructor() {\n    this.alt = '';\n    this.title = '';\n    this.outerWidth = '';\n    this.selected = false;\n    this.imageResize = new EventEmitter();\n  }\n\n  startResizing(e, direction) {\n    e.preventDefault();\n    this.resizeImage(e, direction);\n  }\n\n  resizeImage(evt, direction) {\n    const startX = evt.pageX;\n    const startWidth = this.imgEl.nativeElement.clientWidth;\n    const isLeftResize = direction === 'left';\n    const {\n      width\n    } = window.getComputedStyle(this.view.dom);\n    const editorWidth = parseInt(width, 10);\n\n    const onMouseMove = e => {\n      const currentX = e.pageX;\n      const diffInPx = currentX - startX;\n      const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx; // prevent image overflow the editor\n      // prevent resizng below 20px\n\n      if (computedWidth > editorWidth || computedWidth < 20) {\n        return;\n      }\n\n      this.outerWidth = `${computedWidth}px`;\n    };\n\n    const onMouseUp = e => {\n      e.preventDefault();\n      document.removeEventListener('mousemove', onMouseMove);\n      document.removeEventListener('mouseup', onMouseUp);\n      this.imageResize.emit();\n    };\n\n    document.addEventListener('mousemove', onMouseMove);\n    document.addEventListener('mouseup', onMouseUp);\n  }\n\n}\n\nImageViewComponent.ɵfac = function ImageViewComponent_Factory(t) {\n  return new (t || ImageViewComponent)();\n};\n\nImageViewComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ImageViewComponent,\n  selectors: [[\"ngx-image-view\"]],\n  viewQuery: function ImageViewComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.imgEl = _t.first);\n    }\n  },\n  inputs: {\n    src: \"src\",\n    alt: \"alt\",\n    title: \"title\",\n    outerWidth: \"outerWidth\",\n    selected: \"selected\",\n    view: \"view\"\n  },\n  outputs: {\n    imageResize: \"imageResize\"\n  },\n  decls: 4,\n  vars: 9,\n  consts: [[1, \"NgxEditor__ImageWrapper\", 3, \"ngClass\"], [\"class\", \"NgxEditor__ResizeHandle\", 4, \"ngIf\"], [3, \"src\", \"alt\", \"title\"], [\"imgEl\", \"\"], [1, \"NgxEditor__ResizeHandle\"], [1, \"NgxEditor__ResizeHandle--TL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--TR\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BL\", 3, \"mousedown\"], [1, \"NgxEditor__ResizeHandle--BR\", 3, \"mousedown\"]],\n  template: function ImageViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"span\", 0);\n      i0.ɵɵtemplate(1, ImageViewComponent_span_1_Template, 5, 0, \"span\", 1);\n      i0.ɵɵelement(2, \"img\", 2, 3);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleProp(\"width\", ctx.outerWidth);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.selected));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.selected);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"src\", ctx.src, i0.ɵɵsanitizeUrl)(\"alt\", ctx.alt)(\"title\", ctx.title);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}img[_ngcontent-%COMP%]{width:100%;height:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active[_ngcontent-%COMP%]{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%], .NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BR[_ngcontent-%COMP%]{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TR[_ngcontent-%COMP%]{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--TL[_ngcontent-%COMP%]{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle[_ngcontent-%COMP%]   .NgxEditor__ResizeHandle--BL[_ngcontent-%COMP%]{bottom:-5px;left:-5px;cursor:sw-resize}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image-view',\n      template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"]\n    }]\n  }], null, {\n    src: [{\n      type: Input\n    }],\n    alt: [{\n      type: Input\n    }],\n    title: [{\n      type: Input\n    }],\n    outerWidth: [{\n      type: Input\n    }],\n    selected: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }],\n    imageResize: [{\n      type: Output\n    }],\n    imgEl: [{\n      type: ViewChild,\n      args: ['imgEl', {\n        static: true\n      }]\n    }]\n  });\n})();\n\nclass ImageRezieView {\n  constructor(node, view, getPos, injector) {\n    this.updating = false;\n\n    this.handleResize = () => {\n      if (this.updating) {\n        return;\n      }\n\n      const {\n        state,\n        dispatch\n      } = this.view;\n      const {\n        tr\n      } = state;\n      const transaction = tr.setNodeMarkup(this.getPos(), undefined, { ...this.node.attrs,\n        width: this.imageComponentRef.instance.outerWidth\n      });\n      const resolvedPos = transaction.doc.resolve(this.getPos());\n      const newSelection = new NodeSelection(resolvedPos);\n      transaction.setSelection(newSelection);\n      dispatch(transaction);\n    };\n\n    this.applicationRef = injector.get(ApplicationRef); // create component ref\n\n    this.imageComponentRef = createComponent(ImageViewComponent, {\n      environmentInjector: this.applicationRef.injector\n    }); // Attach to the view so that the change detector knows to run\n\n    this.applicationRef.attachView(this.imageComponentRef.hostView);\n    this.setNodeAttributes(node.attrs);\n    this.imageComponentRef.instance.view = view;\n    this.dom = this.imageComponentRef.location.nativeElement;\n    this.view = view;\n    this.node = node;\n    this.getPos = getPos;\n    this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n      this.handleResize();\n    });\n  }\n\n  computeChanges(prevAttrs, newAttrs) {\n    return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n  }\n\n  setNodeAttributes(attrs) {\n    this.imageComponentRef.instance.src = attrs['src'];\n    this.imageComponentRef.instance.alt = attrs['alt'];\n    this.imageComponentRef.instance.title = attrs['title'];\n    this.imageComponentRef.instance.outerWidth = attrs['width'];\n  }\n\n  update(node) {\n    if (node.type !== this.node.type) {\n      return false;\n    }\n\n    this.node = node;\n    const changed = this.computeChanges(this.node.attrs, node.attrs);\n\n    if (changed) {\n      this.updating = true;\n      this.setNodeAttributes(node.attrs);\n      this.updating = false;\n    }\n\n    return true;\n  }\n\n  ignoreMutation() {\n    return true;\n  }\n\n  selectNode() {\n    this.imageComponentRef.instance.selected = true;\n  }\n\n  deselectNode() {\n    this.imageComponentRef.instance.selected = false;\n  }\n\n  destroy() {\n    this.resizeSubscription.unsubscribe();\n    this.applicationRef.detachView(this.imageComponentRef.hostView);\n  }\n\n}\n\nconst imageResizePlugin = injector => {\n  return new Plugin({\n    key: new PluginKey('image-resize'),\n    props: {\n      nodeViews: {\n        image: (node, view, getPos) => {\n          return new ImageRezieView(node, view, getPos, injector);\n        }\n      }\n    }\n  });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\n\nconst linkify = fragment => {\n  const linkified = [];\n  fragment.forEach(child => {\n    if (child.isText) {\n      const text = child.text;\n      let pos = 0;\n      const match = HTTP_LINK_REGEX.exec(text);\n\n      if (match) {\n        const start = match.index;\n        const end = start + match[0].length;\n        const {\n          link\n        } = child.type.schema.marks;\n\n        if (start > 0) {\n          linkified.push(child.cut(pos, start));\n        }\n\n        const urlText = text.slice(start, end);\n        linkified.push(child.cut(start, end).mark(link.create({\n          href: urlText\n        }).addToSet(child.marks)));\n        pos = end;\n      }\n\n      if (pos < text.length) {\n        linkified.push(child.cut(pos));\n      }\n    } else {\n      linkified.push(child.copy(linkify(child.content)));\n    }\n  });\n  return Fragment.fromArray(linkified);\n};\n\nconst linkifyPlugin = () => {\n  return new Plugin({\n    key: new PluginKey('linkify'),\n    props: {\n      transformPasted: slice => {\n        return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n      }\n    }\n  });\n};\n\nconst emptyDoc = {\n  type: 'doc',\n  content: [{\n    type: 'paragraph'\n  }]\n}; // https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\n\nconst toHTML = (json, inputSchema) => {\n  const schema$1 = inputSchema ?? schema;\n  const contentNode = schema$1.nodeFromJSON(json);\n  const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n  const div = document.createElement('div');\n  div.appendChild(html);\n  return div.innerHTML;\n};\n\nconst toDoc = (html, inputSchema) => {\n  const schema$1 = inputSchema ?? schema;\n  const el = document.createElement('div');\n  el.innerHTML = html;\n  return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\n\nconst parseContent = (value, schema) => {\n  if (!value) {\n    return schema.nodeFromJSON(emptyDoc);\n  }\n\n  if (typeof value !== 'string') {\n    return schema.nodeFromJSON(value);\n  }\n\n  const docJson = toDoc(value, schema);\n  return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n  constructor(renderer, injector, elementRef) {\n    this.renderer = renderer;\n    this.injector = injector;\n    this.elementRef = elementRef;\n    this.placeholder = 'Type Here...';\n    this.focusOut = new EventEmitter();\n    this.focusIn = new EventEmitter();\n    this.unsubscribe = new Subject();\n\n    this.onChange = () => {};\n\n    this.onTouched = () => {};\n  }\n\n  writeValue(value) {\n    if (!this.outputFormat && typeof value === 'string') {\n      this.outputFormat = 'html';\n    }\n\n    this.editor.setContent(value ?? '');\n  }\n\n  registerOnChange(fn) {\n    this.onChange = fn;\n  }\n\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n\n  setDisabledState(isDisabled) {\n    this.setMeta('UPDATE_EDITABLE', !isDisabled);\n    this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n  }\n\n  handleChange(jsonDoc) {\n    if (this.outputFormat === 'html') {\n      const html = toHTML(jsonDoc, this.editor.schema);\n      this.onChange(html);\n      return;\n    }\n\n    this.onChange(jsonDoc);\n  }\n\n  setMeta(key, value) {\n    const {\n      dispatch,\n      state: {\n        tr\n      }\n    } = this.editor.view;\n    dispatch(tr.setMeta(key, value));\n  }\n\n  setPlaceholder(placeholder) {\n    this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n  }\n\n  registerPlugins() {\n    this.editor.registerPlugin(editablePlugin());\n    this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n    this.editor.registerPlugin(attributesPlugin({\n      class: 'NgxEditor__Content'\n    }));\n    this.editor.registerPlugin(focusPlugin(() => {\n      this.focusIn.emit();\n    }));\n    this.editor.registerPlugin(blurPlugin(() => {\n      this.focusOut.emit();\n      this.onTouched();\n    }));\n\n    if (this.editor.features.resizeImage) {\n      this.editor.registerPlugin(imageResizePlugin(this.injector));\n    }\n\n    if (this.editor.features.linkOnPaste) {\n      this.editor.registerPlugin(linkifyPlugin());\n    }\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance for initializing editor component');\n    }\n\n    this.registerPlugins();\n    this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n    this.editor.valueChanges.pipe(takeUntil(this.unsubscribe)).subscribe(jsonDoc => {\n      this.handleChange(jsonDoc);\n    });\n  }\n\n  ngOnChanges(changes) {\n    if (changes['placeholder'] && !changes['placeholder'].isFirstChange()) {\n      this.setPlaceholder(changes['placeholder'].currentValue);\n    }\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.next();\n    this.unsubscribe.complete();\n  }\n\n}\n\nNgxEditorComponent.ɵfac = function NgxEditorComponent_Factory(t) {\n  return new (t || NgxEditorComponent)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.Injector), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nNgxEditorComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxEditorComponent,\n  selectors: [[\"ngx-editor\"]],\n  viewQuery: function NgxEditorComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c2, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngxEditor = _t.first);\n    }\n  },\n  inputs: {\n    editor: \"editor\",\n    outputFormat: \"outputFormat\",\n    placeholder: \"placeholder\"\n  },\n  outputs: {\n    focusOut: \"focusOut\",\n    focusIn: \"focusIn\"\n  },\n  features: [i0.ɵɵProvidersFeature([{\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgxEditorComponent),\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  ngContentSelectors: _c3,\n  decls: 3,\n  vars: 0,\n  consts: [[1, \"NgxEditor\"], [\"ngxEditor\", \"\"]],\n  template: function NgxEditorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", 0, 1);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"],\n  encapsulation: 2\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor',\n      providers: [{\n        provide: NG_VALUE_ACCESSOR,\n        useExisting: forwardRef(() => NgxEditorComponent),\n        multi: true\n      }],\n      encapsulation: ViewEncapsulation.None,\n      template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\",\n      styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.Renderer2\n    }, {\n      type: i0.Injector\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    ngxEditor: [{\n      type: ViewChild,\n      args: ['ngxEditor', {\n        static: true\n      }]\n    }],\n    editor: [{\n      type: Input\n    }],\n    outputFormat: [{\n      type: Input\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    focusOut: [{\n      type: Output\n    }],\n    focusIn: [{\n      type: Output\n    }]\n  });\n})();\n\nclass MenuService {\n  constructor() {\n    this.customMenuRefChange = new Subject();\n  }\n\n  setCustomMenuRef(c) {\n    this.customMenuRefChange.next(c);\n  }\n\n}\n\nMenuService.ɵfac = function MenuService_Factory(t) {\n  return new (t || MenuService)();\n};\n\nMenuService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: MenuService,\n  factory: MenuService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`;\nvar formatClear = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z\"/>\n`; // Icons source: https://material.io/\n\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n  bold,\n  italic,\n  code,\n  underline,\n  strike,\n  ordered_list: orderedList,\n  bullet_list: bulletList,\n  blockquote: quote,\n  link,\n  unlink,\n  image,\n  align_left: alignLeft,\n  align_center: alignCenter,\n  align_right: alignRight,\n  align_justify: alignJustify,\n  text_color: textColor,\n  color_fill: colorFill,\n  horizontal_rule: horizontalRule,\n  format_clear: formatClear\n};\n\nclass Icon {\n  static get(name, fill = DEFAULT_ICON_FILL) {\n    const path = icons[name] || '<path></path>';\n    return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n  }\n\n}\n\nclass Mark {\n  constructor(name) {\n    this.name = name;\n  }\n\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return applyMark(type)(state, dispatch);\n    };\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return toggleMark(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass Blockqote {\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes['blockquote'];\n\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return lift(state, dispatch);\n      }\n\n      return wrapIn(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.nodes['blockquote'];\n\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass HorizontalRule {\n  insert() {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.nodes['horizontal_rule'];\n\n      if (!type) {\n        return false;\n      }\n\n      dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n      return true;\n    };\n  }\n\n  canExecute(state) {\n    return canInsert(state, state.schema.nodes['horizontal_rule']);\n  }\n\n}\n\nclass ListItem {\n  constructor(isBulletList = false) {\n    this.isBulletList = false;\n    this.isBulletList = isBulletList;\n  }\n\n  getType(schema) {\n    return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = this.getType(schema);\n\n      if (!type) {\n        return false;\n      }\n\n      if (this.isActive(state)) {\n        return liftListItem(schema.nodes['list_item'])(state, dispatch);\n      }\n\n      return wrapInList(type)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = this.getType(schema);\n\n    if (!type) {\n      return false;\n    }\n\n    return isNodeActive(state, type);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass Heading {\n  constructor(level) {\n    this.level = level;\n  }\n\n  apply() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.nodes['heading'];\n\n      if (!type) {\n        return false;\n      }\n\n      return setBlockType(type)(state, dispatch);\n    };\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.nodes['heading'];\n\n      if (!type) {\n        return false;\n      }\n\n      const nodePos = selection.$from.before(1);\n      const node = doc.nodeAt(nodePos);\n      const attrs = node?.attrs ?? {};\n\n      if (this.isActive(state)) {\n        return setBlockType(schema.nodes['paragraph'], attrs)(state, dispatch);\n      }\n\n      return setBlockType(type, { ...attrs,\n        level: this.level\n      })(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const nodesInSelection = getSelectionNodes(state);\n    const type = schema.nodes['heading'];\n\n    if (!type) {\n      return false;\n    }\n\n    const supportedNodes = [type, schema.nodes['text'], schema.nodes['blockquote']]; // heading is a text node\n    // don't mark as active when it has more nodes\n\n    const nodes = nodesInSelection.filter(node => {\n      return supportedNodes.includes(node.type);\n    });\n    const acitveNode = nodes.find(node => {\n      return node.attrs['level'] === this.level;\n    });\n    return Boolean(acitveNode);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nclass TextAlign {\n  constructor(align) {\n    this.align = align;\n  }\n\n  toggle() {\n    return (state, dispatch) => {\n      const {\n        doc,\n        selection,\n        tr,\n        schema\n      } = state;\n      const {\n        from,\n        to\n      } = selection;\n      let applicable = false;\n      doc.nodesBetween(from, to, (node, pos) => {\n        const nodeType = node.type;\n\n        if ([schema.nodes['paragraph'], schema.nodes['heading']].includes(nodeType)) {\n          applicable = true;\n          tr.setNodeMarkup(pos, nodeType, { ...node.attrs,\n            align: this.align\n          });\n        }\n\n        return true;\n      });\n\n      if (!applicable) {\n        return false;\n      }\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n      }\n\n      return true;\n    };\n  }\n\n  isActive(state) {\n    const nodes = getSelectionNodes(state);\n    const active = nodes.find(node => {\n      return node.attrs['align'] === this.align;\n    });\n    return Boolean(active);\n  }\n\n  canExecute(state) {\n    return this.toggle()(state);\n  }\n\n}\n\nconst defaultOptions = {\n  strict: true\n};\n\nclass Link$1 {\n  update(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection\n      } = state;\n      const type = schema.marks['link'];\n\n      if (!type) {\n        return false;\n      }\n\n      if (selection.empty) {\n        return false;\n      }\n\n      return toggleMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  insert(text, attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr\n      } = state;\n      const type = schema.marks['link'];\n\n      if (!type) {\n        return false;\n      }\n\n      const linkAttrs = {\n        href: attrs.href,\n        title: attrs.title ?? text,\n        target: attrs.target ?? '_blank'\n      };\n      const node = schema.text(text, [schema.marks['link'].create(linkAttrs)]);\n      tr.replaceSelectionWith(node, false).scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state, options = defaultOptions) {\n    if (options.strict) {\n      return true;\n    }\n\n    const {\n      schema\n    } = state;\n    const type = schema.marks['link'];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  remove(state, dispatch) {\n    return removeLink()(state, dispatch);\n  }\n\n  canExecute(state) {\n    const testAttrs = {\n      href: ''\n    };\n    return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n  }\n\n}\n\nclass Image$1 {\n  insert(src, attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        tr,\n        selection\n      } = state;\n      const type = schema.nodes['image'];\n\n      if (!type) {\n        return false;\n      }\n\n      const imageAttrs = {\n        width: null,\n        src,\n        ...attrs\n      };\n\n      if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n        imageAttrs.width = selection.node.attrs['width'];\n      }\n\n      tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n      const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n      tr.setSelection(new NodeSelection(resolvedPos)).scrollIntoView();\n\n      if (tr.docChanged) {\n        dispatch?.(tr);\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  isActive(state) {\n    const {\n      selection\n    } = state;\n\n    if (selection instanceof NodeSelection) {\n      return selection.node.type.name === 'image';\n    }\n\n    return false;\n  }\n\n}\n\nclass TextColor$1 {\n  constructor(name, attrName = 'color') {\n    this.name = name;\n    this.attrName = attrName;\n  }\n\n  apply(attrs) {\n    return (state, dispatch) => {\n      const {\n        schema,\n        selection,\n        doc\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      const {\n        from,\n        to,\n        empty\n      } = selection;\n\n      if (!empty && from + 1 === to) {\n        const node = doc.nodeAt(from);\n\n        if (node?.isAtom && !node.isText && node.isLeaf) {\n          // An atomic node (e.g. Image) is selected.\n          return false;\n        }\n      }\n\n      return applyMark(type, attrs)(state, dispatch);\n    };\n  }\n\n  isActive(state) {\n    const {\n      schema\n    } = state;\n    const type = schema.marks[this.name];\n\n    if (!type) {\n      return false;\n    }\n\n    return isMarkActive(state, type);\n  }\n\n  getActiveColors(state) {\n    if (!this.isActive(state)) {\n      return [];\n    }\n\n    const {\n      schema\n    } = state;\n    const marks = getSelectionMarks(state);\n    const colors = marks.filter(mark => mark.type === schema.marks[this.name]).map(mark => {\n      return mark.attrs[this.attrName];\n    }).filter(Boolean);\n    return colors;\n  }\n\n  remove() {\n    return (state, dispatch) => {\n      const {\n        schema\n      } = state;\n      const type = schema.marks[this.name];\n\n      if (!type) {\n        return false;\n      }\n\n      return removeMark(type)(state, dispatch);\n    };\n  }\n\n  canExecute(state) {\n    const attrs = this.name === 'text_color' ? {\n      color: ''\n    } : {\n      backgroundColor: ''\n    };\n    return this.apply(attrs)(state);\n  }\n\n}\n\nconst SAFE_MARKS = ['link'];\n\nclass FormatClear {\n  insert() {\n    return (state, dispatch) => {\n      const {\n        tr\n      } = state;\n      const {\n        ranges,\n        empty\n      } = tr.selection;\n\n      if (empty) {\n        return true;\n      }\n\n      Object.entries(state.schema.marks).forEach(([markType, mark]) => {\n        if (SAFE_MARKS.includes(markType)) {\n          return;\n        }\n\n        ranges.forEach(range => {\n          tr.removeMark(range.$from.pos, range.$to.pos, mark);\n        });\n      });\n      dispatch(tr);\n      return true;\n    };\n  }\n\n  canExecute() {\n    return true;\n  }\n\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst FORMAT_CLEAR = new FormatClear();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\nconst ToggleCommands = {\n  bold: STRONG,\n  italic: EM,\n  code: CODE,\n  underline: UNDERLINE,\n  strike: STRIKE,\n  blockquote: BLOCKQUOTE,\n  bullet_list: UL,\n  ordered_list: OL,\n  h1: H1,\n  h2: H2,\n  h3: H3,\n  h4: H4,\n  h5: H5,\n  h6: H6,\n  align_left: ALIGN_LEFT,\n  align_center: ALIGN_CENTER,\n  align_right: ALIGN_RIGHT,\n  align_justify: ALIGN_JUSTIFY\n};\nconst InsertCommands = {\n  horizontal_rule: HORIZONTAL_RULE,\n  format_clear: FORMAT_CLEAR\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\nconst defaults = {\n  // menu\n  bold: 'Bold',\n  italic: 'Italic',\n  code: 'Code',\n  underline: 'Underline',\n  strike: 'Strike',\n  blockquote: 'Blockquote',\n  bullet_list: 'Bullet List',\n  ordered_list: 'Ordered List',\n  heading: 'Heading',\n  h1: 'Header 1',\n  h2: 'Header 2',\n  h3: 'Header 3',\n  h4: 'Header 4',\n  h5: 'Header 5',\n  h6: 'Header 6',\n  align_left: 'Left Align',\n  align_center: 'Center Align',\n  align_right: 'Right Align',\n  align_justify: 'Justify',\n  text_color: 'Text Color',\n  background_color: 'Background Color',\n  horizontal_rule: 'Horizontal rule',\n  format_clear: 'Clear Formatting',\n  insertLink: 'Insert Link',\n  removeLink: 'Remove Link',\n  insertImage: 'Insert Image',\n  // pupups, forms, others...\n  url: 'URL',\n  text: 'Text',\n  openInNewTab: 'Open in new tab',\n  insert: 'Insert',\n  altText: 'Alt Text',\n  title: 'Title',\n  remove: 'Remove'\n};\n\nclass Locals {\n  constructor(newLocals = {}) {\n    this.locals = defaults;\n\n    this.get = key => {\n      return this.locals[key] ?? '';\n    };\n\n    this.locals = { ...defaults,\n      ...newLocals\n    };\n  }\n\n}\n\nclass NgxEditorServiceConfig {\n  constructor() {\n    this.locals = {};\n  }\n\n}\n\nNgxEditorServiceConfig.ɵfac = function NgxEditorServiceConfig_Factory(t) {\n  return new (t || NgxEditorServiceConfig)();\n};\n\nNgxEditorServiceConfig.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxEditorServiceConfig,\n  factory: NgxEditorServiceConfig.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorServiceConfig, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], null, null);\n})();\n\nclass NgxEditorService {\n  constructor(config) {\n    this.config = config;\n  }\n\n  get locals() {\n    return new Locals(this.config.locals);\n  }\n\n}\n\nNgxEditorService.ɵfac = function NgxEditorService_Factory(t) {\n  return new (t || NgxEditorService)(i0.ɵɵinject(NgxEditorServiceConfig, 8));\n};\n\nNgxEditorService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: NgxEditorService,\n  factory: NgxEditorService.ɵfac,\n  providedIn: 'root'\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorServiceConfig,\n      decorators: [{\n        type: Optional\n      }]\n    }];\n  }, null);\n})();\n\nconst provideMyServiceOptions = config => {\n  return {\n    locals: config.locals ?? {}\n  };\n};\n\nclass SanitizeHtmlPipe {\n  constructor(sanitizer) {\n    this.sanitizer = sanitizer;\n  }\n\n  transform(value) {\n    return this.sanitizer.bypassSecurityTrustHtml(value);\n  }\n\n}\n\nSanitizeHtmlPipe.ɵfac = function SanitizeHtmlPipe_Factory(t) {\n  return new (t || SanitizeHtmlPipe)(i0.ɵɵdirectiveInject(i1.DomSanitizer, 16));\n};\n\nSanitizeHtmlPipe.ɵpipe = /* @__PURE__ */i0.ɵɵdefinePipe({\n  name: \"sanitizeHtml\",\n  type: SanitizeHtmlPipe,\n  pure: true\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(SanitizeHtmlPipe, [{\n    type: Pipe,\n    args: [{\n      name: 'sanitizeHtml'\n    }]\n  }], function () {\n    return [{\n      type: i1.DomSanitizer\n    }];\n  }, null);\n})();\n\nclass ToggleCommandComponent {\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.isActive = false;\n    this.disabled = false;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = ToggleCommands[this.name];\n      this.isActive = command.isActive(state);\n      this.disabled = !command.canExecute(state);\n    };\n  }\n\n  get name() {\n    return this.toolbarItem;\n  }\n\n  toggle(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = ToggleCommands[this.name];\n    command.toggle()(state, dispatch);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit() {\n    this.html = Icon.get(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nToggleCommandComponent.ɵfac = function ToggleCommandComponent_Factory(t) {\n  return new (t || ToggleCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nToggleCommandComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ToggleCommandComponent,\n  selectors: [[\"ngx-toggle-command\"]],\n  inputs: {\n    toolbarItem: \"toolbarItem\"\n  },\n  decls: 2,\n  vars: 8,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n  template: function ToggleCommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ToggleCommandComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.toggle($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive)(\"NgxEditor--Disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 6, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", ctx.getTitle(ctx.name));\n    }\n  },\n  dependencies: [SanitizeHtmlPipe]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ToggleCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-toggle-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }]\n  });\n})();\n\nclass InsertCommandComponent {\n  constructor(ngxeService, menuService) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.disabled = false;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      const command = InsertCommands[this.name];\n      this.disabled = !command.canExecute(state);\n    };\n  }\n\n  get name() {\n    return this.toolbarItem;\n  }\n\n  insert(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    const command = InsertCommands[this.name];\n    command.insert()(state, dispatch);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  ngOnInit() {\n    this.html = Icon.get(this.name);\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nInsertCommandComponent.ɵfac = function InsertCommandComponent_Factory(t) {\n  return new (t || InsertCommandComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nInsertCommandComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: InsertCommandComponent,\n  selectors: [[\"ngx-insert-command\"]],\n  inputs: {\n    toolbarItem: \"toolbarItem\"\n  },\n  decls: 2,\n  vars: 6,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"]],\n  template: function InsertCommandComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function InsertCommandComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.insert($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor--Disabled\", ctx.disabled);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 4, ctx.html), i0.ɵɵsanitizeHtml)(\"title\", ctx.getTitle(ctx.name));\n    }\n  },\n  dependencies: [SanitizeHtmlPipe]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(InsertCommandComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-insert-command',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name)\\\">\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    toolbarItem: [{\n      type: Input\n    }]\n  });\n})();\n\nclass LinkComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.canExecute = true;\n\n    this.setText = () => {\n      const {\n        state: {\n          selection,\n          doc\n        }\n      } = this.editorView;\n      const {\n        empty,\n        from,\n        to\n      } = selection;\n      const selectedText = !empty ? doc.textBetween(from, to) : '';\n\n      if (selectedText) {\n        this.text.patchValue(selectedText);\n        this.text.disable();\n      }\n    };\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Link.isActive(state, {\n        strict: false\n      });\n      this.canExecute = Link.canExecute(state);\n    };\n  }\n\n  get icon() {\n    return Icon.get(this.isActive ? 'unlink' : 'link');\n  }\n\n  get title() {\n    return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n  }\n\n  get href() {\n    return this.form.get('href');\n  }\n\n  get text() {\n    return this.form.get('text');\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      href: '',\n      text: '',\n      openInNewTab: true\n    });\n    this.text.enable();\n  }\n\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n\n    if (this.isActive) {\n      Link.remove(state, dispatch);\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.setText();\n    }\n  }\n\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      text,\n      href,\n      openInNewTab\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n    const attrs = {\n      title: href,\n      href,\n      target: openInNewTab ? '_blank' : '_self'\n    };\n\n    if (selection.empty) {\n      Link.insert(text, attrs)(state, dispatch);\n      this.editorView.focus();\n    } else {\n      Link.update(attrs)(state, dispatch);\n    }\n\n    this.hideForm();\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.form = new FormGroup({\n      href: new FormControl('', [Validators$1.required, Validators$1.pattern(this.menuService.editor.linkValidationPattern)]),\n      text: new FormControl('', [Validators$1.required]),\n      openInNewTab: new FormControl(true)\n    });\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nLinkComponent.ɵfac = function LinkComponent_Factory(t) {\n  return new (t || LinkComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nLinkComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LinkComponent,\n  selectors: [[\"ngx-link\"]],\n  hostBindings: function LinkComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function LinkComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 3,\n  vars: 9,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"href\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"text\", \"autocomplete\", \"off\"], [\"type\", \"checkbox\", \"formControlName\", \"openInNewTab\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n  template: function LinkComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function LinkComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.onMouseDown($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, LinkComponent_div_2_Template, 21, 8, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup)(\"NgxEditor--Disabled\", !ctx.canExecute);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 7, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.CheckboxControlValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, SanitizeHtmlPipe]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LinkComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-link',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nclass DropdownComponent {\n  constructor(ngxeService, menuService, el) {\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.el = el;\n    this.isDropdownOpen = false;\n    this.disabledItems = [];\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.disabledItems = [];\n      const activeItems = [];\n      this.items.forEach(item => {\n        const command = ToggleCommands[item];\n        const isActive = command.isActive(state);\n\n        if (isActive) {\n          activeItems.push(item);\n        }\n\n        if (!command.canExecute(state)) {\n          this.disabledItems.push(item);\n        }\n      });\n\n      if (activeItems.length === 1) {\n        [this.activeItem] = activeItems;\n      } else {\n        this.activeItem = null;\n      }\n    };\n  }\n\n  get isSelected() {\n    return Boolean(this.activeItem || this.isDropdownOpen);\n  }\n\n  get isDropdownDisabled() {\n    return this.disabledItems.length === this.items.length;\n  }\n\n  onDocumentClick(target) {\n    if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n      this.isDropdownOpen = false;\n    }\n  }\n\n  getName(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  toggleDropdown(e) {\n    e.preventDefault();\n    this.isDropdownOpen = !this.isDropdownOpen;\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onClick(e, item) {\n    e.preventDefault(); // consider only left click\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const command = ToggleCommands[item];\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    command.toggle()(state, dispatch);\n    this.isDropdownOpen = false;\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nDropdownComponent.ɵfac = function DropdownComponent_Factory(t) {\n  return new (t || DropdownComponent)(i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nDropdownComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: DropdownComponent,\n  selectors: [[\"ngx-dropdown\"]],\n  hostBindings: function DropdownComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function DropdownComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event.target);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    group: \"group\",\n    items: \"items\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[1, \"NgxEditor__Dropdown--Text\", 3, \"mousedown\"], [\"class\", \"NgxEditor__Dropdown--DropdownMenu\", 4, \"ngIf\"], [1, \"NgxEditor__Dropdown--DropdownMenu\"], [\"class\", \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Dropdown--Item\", 3, \"ngClass\", \"mousedown\"]],\n  template: function DropdownComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function DropdownComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.toggleDropdown($event);\n      });\n      i0.ɵɵtext(1);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, DropdownComponent_div_2_Template, 2, 2, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__Dropdown--Selected\", ctx.isSelected)(\"NgxEditor--Disabled\", ctx.isDropdownDisabled);\n      i0.ɵɵadvance(1);\n      i0.ɵɵtextInterpolate1(\" \", ctx.getName(ctx.activeItem || ctx.group), \"\\n\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.isDropdownOpen);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DropdownComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-dropdown',\n      template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }, {\n      type: i0.ElementRef\n    }];\n  }, {\n    group: [{\n      type: Input\n    }],\n    items: [{\n      type: Input\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event.target']]\n    }]\n  });\n})();\n\nclass ImageComponent {\n  constructor(el, ngxeService, menuService) {\n    this.el = el;\n    this.ngxeService = ngxeService;\n    this.menuService = menuService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.form = new FormGroup({\n      src: new FormControl('', [Validators$1.required, Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)')]),\n      alt: new FormControl(''),\n      title: new FormControl('')\n    });\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.isActive = Image.isActive(state);\n    };\n  }\n\n  get icon() {\n    return Icon.get('image');\n  }\n\n  get src() {\n    return this.form.get('src');\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hideForm();\n    }\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  hideForm() {\n    this.showPopup = false;\n    this.form.reset({\n      src: '',\n      alt: '',\n      title: ''\n    });\n  }\n\n  onMouseDown(e) {\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n\n    if (this.showPopup) {\n      this.fillForm();\n    }\n  }\n\n  fillForm() {\n    const {\n      state\n    } = this.editorView;\n    const {\n      selection\n    } = state;\n\n    if (selection instanceof NodeSelection && this.isActive) {\n      const {\n        src,\n        alt = '',\n        title = ''\n      } = selection.node.attrs;\n      this.form.setValue({\n        src,\n        alt,\n        title\n      });\n    }\n  }\n\n  insertLink(e) {\n    e.preventDefault();\n    const {\n      src,\n      alt,\n      title\n    } = this.form.getRawValue();\n    const {\n      dispatch,\n      state\n    } = this.editorView;\n    const attrs = {\n      alt,\n      title\n    };\n    Image.insert(src, attrs)(state, dispatch);\n    this.editorView.focus();\n    this.hideForm();\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nImageComponent.ɵfac = function ImageComponent_Factory(t) {\n  return new (t || ImageComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(NgxEditorService), i0.ɵɵdirectiveInject(MenuService));\n};\n\nImageComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ImageComponent,\n  selectors: [[\"ngx-image\"]],\n  hostBindings: function ImageComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function ImageComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [1, \"NgxEditor__Popup--Form\", 3, \"formGroup\", \"ngSubmit\"], [1, \"NgxEditor__Popup--FormGroup\"], [1, \"NgxEditor__Popup--Col\"], [1, \"NgxEditor__Popup--Label\"], [\"type\", \"href\", \"id\", \"href\", \"formControlName\", \"src\", \"autofocus\", \"\", \"autocomplete\", \"off\"], [\"class\", \"NgxEditor__HelpText NgxEditor__HelpText--Error\", 4, \"ngIf\"], [\"type\", \"text\", \"formControlName\", \"alt\", \"autocomplete\", \"off\"], [\"type\", \"text\", \"formControlName\", \"title\", \"autocomplete\", \"off\"], [\"type\", \"submit\", 3, \"disabled\"], [1, \"NgxEditor__HelpText\", \"NgxEditor__HelpText--Error\"]],\n  template: function ImageComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ImageComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.onMouseDown($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ImageComponent_div_2_Template, 20, 7, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 5, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.getLabel(\"insertImage\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  dependencies: [i3.NgIf, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.FormGroupDirective, i4.FormControlName, SanitizeHtmlPipe]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ImageComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-image',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: NgxEditorService\n    }, {\n      type: MenuService\n    }];\n  }, {\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nclass ColorPickerComponent {\n  constructor(el, menuService, ngxeService) {\n    this.el = el;\n    this.menuService = menuService;\n    this.ngxeService = ngxeService;\n    this.showPopup = false;\n    this.isActive = false;\n    this.activeColors = [];\n    this.canExecute = true;\n\n    this.update = view => {\n      const {\n        state\n      } = view;\n      this.canExecute = this.command.canExecute(state);\n      this.isActive = this.command.isActive(state);\n      this.activeColors = [];\n\n      if (this.isActive) {\n        this.activeColors = this.command.getActiveColors(state);\n      }\n    };\n  }\n\n  get title() {\n    return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n  }\n\n  get icon() {\n    return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n  }\n\n  get command() {\n    return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n  }\n\n  getContrastYIQ(hexcolor) {\n    const color = hexcolor.replace('#', '');\n    const r = parseInt(color.substring(0, 2), 16);\n    const g = parseInt(color.substring(2, 4), 16);\n    const b = parseInt(color.substring(4, 6), 16);\n    const yiq = (r * 299 + g * 587 + b * 114) / 1000;\n    return yiq >= 128 ? 'black' : 'white';\n  }\n\n  onDocumentClick(e) {\n    if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n      this.hidePopup();\n    }\n  }\n\n  hidePopup() {\n    this.showPopup = false;\n  }\n\n  togglePopup(e) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    this.showPopup = !this.showPopup;\n  }\n\n  remove(e) {\n    e.preventDefault();\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n    this.command.remove()(state, dispatch);\n    this.hidePopup();\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onColorSelect(e, color) {\n    e.preventDefault();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.editorView;\n\n    if (this.type === 'text_color') {\n      const attrs = {\n        color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    } else {\n      const attrs = {\n        backgroundColor: color\n      };\n      this.command.apply(attrs)(state, dispatch);\n    }\n\n    if (!this.editorView.hasFocus()) {\n      this.editorView.focus();\n    }\n\n    this.hidePopup();\n  }\n\n  getLabel(key) {\n    return this.ngxeService.locals.get(key);\n  }\n\n  ngOnInit() {\n    this.editorView = this.menuService.editor.view;\n    this.updateSubscription = this.menuService.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nColorPickerComponent.ɵfac = function ColorPickerComponent_Factory(t) {\n  return new (t || ColorPickerComponent)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(MenuService), i0.ɵɵdirectiveInject(NgxEditorService));\n};\n\nColorPickerComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: ColorPickerComponent,\n  selectors: [[\"ngx-color-picker\"]],\n  hostBindings: function ColorPickerComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onDocumentClick($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n  },\n  inputs: {\n    presets: \"presets\",\n    type: \"type\"\n  },\n  decls: 3,\n  vars: 9,\n  consts: [[1, \"NgxEditor__MenuItem--IconContainer\", 3, \"innerHTML\", \"title\", \"mousedown\"], [\"class\", \"NgxEditor__Popup\", 4, \"ngIf\"], [1, \"NgxEditor__Popup\"], [\"class\", \"NgxEditor__ColorContainer\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__MenuItem--Button\", 3, \"disabled\", \"mousedown\"], [1, \"NgxEditor__ColorContainer\"], [\"class\", \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"NgxEditor__Color\", 3, \"ngStyle\", \"title\", \"ngClass\", \"mousedown\"]],\n  template: function ColorPickerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵlistener(\"mousedown\", function ColorPickerComponent_Template_div_mousedown_0_listener($event) {\n        return ctx.togglePopup($event);\n      });\n      i0.ɵɵpipe(1, \"sanitizeHtml\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(2, ColorPickerComponent_div_2_Template, 4, 4, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵclassProp(\"NgxEditor__MenuItem--Active\", ctx.isActive || ctx.showPopup)(\"NgxEditor--Disabled\", !ctx.canExecute);\n      i0.ɵɵproperty(\"innerHTML\", i0.ɵɵpipeBind1(1, 7, ctx.icon), i0.ɵɵsanitizeHtml)(\"title\", ctx.title);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.showPopup);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgStyle, SanitizeHtmlPipe],\n  styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup[_ngcontent-%COMP%]{width:230px}.NgxEditor__ColorContainer[_ngcontent-%COMP%]{display:flex;justify-content:space-between}.NgxEditor__ColorContainer[_ngcontent-%COMP%] + .NgxEditor__ColorContainer[_ngcontent-%COMP%]{margin-top:5px}.NgxEditor__Color[_ngcontent-%COMP%]{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active[_ngcontent-%COMP%]:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button[_ngcontent-%COMP%]{margin-top:5px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ColorPickerComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-color-picker',\n      template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\",\n      styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }, {\n      type: MenuService\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    presets: [{\n      type: Input\n    }],\n    type: [{\n      type: Input\n    }],\n    onDocumentClick: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }]\n  });\n})();\n\nconst DEFAULT_TOOLBAR = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify'], ['format_clear']];\nconst TOOLBAR_MINIMAL = [['bold', 'italic'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color']];\nconst TOOLBAR_FULL = [['bold', 'italic'], ['code', 'blockquote'], ['underline', 'strike'], ['ordered_list', 'bullet_list'], [{\n  heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6']\n}], ['link', 'image'], ['text_color', 'background_color'], ['align_left', 'align_center', 'align_right', 'align_justify'], ['horizontal_rule']];\nconst DEFAULT_COLOR_PRESETS = ['#b60205', '#d93f0b', '#fbca04', '#0e8a16', '#006b75', '#1d76db', '#0052cc', '#5319e7', '#e99695', '#f9d0c4', '#fef2c0', '#c2e0c6', '#bfdadc', '#c5def5', '#bfd4f2', '#d4c5f9'];\n\nclass MenuComponent {\n  constructor(menuService) {\n    this.menuService = menuService;\n    this.toolbar = TOOLBAR_MINIMAL;\n    this.colorPresets = DEFAULT_COLOR_PRESETS;\n    this.disabled = false;\n    this.customMenuRef = null;\n    this.dropdownPlacement = 'bottom';\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'code', 'blockquote', 'ordered_list', 'bullet_list', 'align_left', 'align_center', 'align_right', 'align_justify'];\n    this.insertCommands = ['horizontal_rule', 'format_clear'];\n    this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n    this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n    this.seperatorClass = ['NgxEditor__Seperator'];\n  }\n\n  get presets() {\n    const col = 8;\n    const colors = [];\n    this.colorPresets.forEach((color, index) => {\n      const row = Math.floor(index / col);\n\n      if (!colors[row]) {\n        colors.push([]);\n      }\n\n      colors[row].push(color);\n    });\n    return colors;\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  isDropDown(item) {\n    if (item?.heading) {\n      return true;\n    }\n\n    return false;\n  }\n\n  getDropdownItems(item) {\n    return item;\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance to initialize menu component');\n    }\n\n    this.menuService.editor = this.editor;\n  }\n\n}\n\nMenuComponent.ɵfac = function MenuComponent_Factory(t) {\n  return new (t || MenuComponent)(i0.ɵɵdirectiveInject(MenuService));\n};\n\nMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: MenuComponent,\n  selectors: [[\"ngx-editor-menu\"]],\n  inputs: {\n    toolbar: \"toolbar\",\n    colorPresets: \"colorPresets\",\n    disabled: \"disabled\",\n    editor: \"editor\",\n    customMenuRef: \"customMenuRef\",\n    dropdownPlacement: \"dropdownPlacement\"\n  },\n  features: [i0.ɵɵProvidersFeature([MenuService])],\n  decls: 3,\n  vars: 7,\n  consts: [[1, \"NgxEditor__MenuBar\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [4, \"ngIf\"], [3, \"toolbarItem\", \"class\", 4, \"ngIf\"], [3, \"class\", 4, \"ngIf\"], [\"type\", \"text_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [\"type\", \"background_color\", 3, \"class\", \"presets\", 4, \"ngIf\"], [3, \"toolbarItem\"], [3, \"class\", \"group\", \"items\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"group\", \"items\"], [\"type\", \"text_color\", 3, \"presets\"], [\"type\", \"background_color\", 3, \"presets\"], [3, \"ngTemplateOutlet\"]],\n  template: function MenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, MenuComponent_ng_container_1_Template, 2, 2, \"ng-container\", 1);\n      i0.ɵɵtemplate(2, MenuComponent_ng_container_2_Template, 2, 1, \"ng-container\", 2);\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(4, _c7, ctx.disabled, ctx.dropdownPlacement === \"top\"));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.customMenuRef);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf, i3.NgTemplateOutlet, ToggleCommandComponent, InsertCommandComponent, LinkComponent, DropdownComponent, ImageComponent, ColorPickerComponent, i3.KeyValuePipe]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-menu',\n      providers: [MenuService],\n      template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\"\n    }]\n  }], function () {\n    return [{\n      type: MenuService\n    }];\n  }, {\n    toolbar: [{\n      type: Input\n    }],\n    colorPresets: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input\n    }],\n    editor: [{\n      type: Input\n    }],\n    customMenuRef: [{\n      type: Input\n    }],\n    dropdownPlacement: [{\n      type: Input\n    }]\n  });\n})();\n\nclass BubbleComponent {\n  constructor(sanitizeHTML, ngxeService) {\n    this.sanitizeHTML = sanitizeHTML;\n    this.ngxeService = ngxeService;\n    this.execulableItems = [];\n    this.activeItems = [];\n    this.toolbar = [['bold', 'italic', 'underline', 'strike'], ['ordered_list', 'bullet_list', 'blockquote', 'code'], ['align_left', 'align_center', 'align_right', 'align_justify']];\n    this.toggleCommands = ['bold', 'italic', 'underline', 'strike', 'ordered_list', 'bullet_list', 'blockquote', 'code', 'align_left', 'align_center', 'align_right', 'align_justify'];\n  }\n\n  get view() {\n    return this.editor.view;\n  }\n\n  getIcon(name) {\n    const icon = Icon.get(name);\n    return this.sanitizeHTML.transform(icon);\n  }\n\n  getTitle(name) {\n    return this.ngxeService.locals.get(name);\n  }\n\n  trackByIndex(index) {\n    return index;\n  }\n\n  onClick(e, commandName) {\n    e.preventDefault();\n    e.stopPropagation();\n\n    if (e.button !== 0) {\n      return;\n    }\n\n    const {\n      state,\n      dispatch\n    } = this.view;\n    const command = ToggleCommands[commandName];\n    command.toggle()(state, dispatch);\n  }\n\n  update(view) {\n    this.activeItems = [];\n    this.execulableItems = [];\n    const {\n      state\n    } = view;\n    this.toggleCommands.forEach(toolbarItem => {\n      const command = ToggleCommands[toolbarItem];\n      const isActive = command.isActive(state);\n\n      if (isActive) {\n        this.activeItems.push(toolbarItem);\n      }\n\n      const canExecute = command.canExecute(state);\n\n      if (canExecute) {\n        this.execulableItems.push(toolbarItem);\n      }\n    });\n  }\n\n  ngOnInit() {\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n  }\n\n}\n\nBubbleComponent.ɵfac = function BubbleComponent_Factory(t) {\n  return new (t || BubbleComponent)(i0.ɵɵdirectiveInject(SanitizeHtmlPipe), i0.ɵɵdirectiveInject(NgxEditorService));\n};\n\nBubbleComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: BubbleComponent,\n  selectors: [[\"ngx-bubble\"]],\n  inputs: {\n    editor: \"editor\"\n  },\n  decls: 1,\n  vars: 2,\n  consts: [[4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\", 4, \"ngIf\"], [\"class\", \"NgxBubbleMenu__Seperator\", 4, \"ngIf\"], [1, \"NgxBubbleMenu__Icon\", 3, \"ngClass\", \"title\", \"innerHTML\", \"mousedown\"], [1, \"NgxBubbleMenu__Seperator\"]],\n  template: function BubbleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, BubbleComponent_ng_container_0_Template, 2, 2, \"ng-container\", 0);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngForOf\", ctx.toolbar)(\"ngForTrackBy\", ctx.trackByIndex);\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgForOf, i3.NgIf],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon[_ngcontent-%COMP%]:hover{background-color:#636262}.NgxBubbleMenu__Icon[_ngcontent-%COMP%] + .NgxBubbleMenu__Icon[_ngcontent-%COMP%]{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active[_ngcontent-%COMP%]{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator[_ngcontent-%COMP%]{border-left:1px solid white;margin:0 5px}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(BubbleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-bubble',\n      template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: SanitizeHtmlPipe\n    }, {\n      type: NgxEditorService\n    }];\n  }, {\n    editor: [{\n      type: Input\n    }]\n  });\n})();\n\nclass FloatingMenuComponent {\n  constructor(el) {\n    this.el = el;\n    this.autoPlace = false;\n    this.posLeft = 0;\n    this.posTop = 0;\n    this.showMenu = false;\n    this.dragging = false;\n  }\n\n  get display() {\n    return {\n      visibility: this.showMenu ? 'visible' : 'hidden',\n      opacity: this.showMenu ? '1' : '0',\n      top: `${this.posTop}px`,\n      left: `${this.posLeft}px`\n    };\n  }\n\n  get view() {\n    return this.editor.view;\n  }\n\n  onMouseDown(e) {\n    const target = e.target;\n\n    if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n\n    this.dragging = true;\n  }\n\n  onKeyDown(e) {\n    const target = e.target;\n\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n\n    this.dragging = true;\n    this.hide();\n  }\n\n  onMouseUp(e) {\n    const target = e.target;\n\n    if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n      e.preventDefault();\n      return;\n    }\n\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  onKeyUp(e) {\n    const target = e.target;\n\n    if (target.nodeName === 'INPUT') {\n      return;\n    }\n\n    this.dragging = false;\n    this.useUpdate();\n  }\n\n  useUpdate() {\n    if (!this.view) {\n      return;\n    }\n\n    this.update(this.view);\n  }\n\n  hide() {\n    this.showMenu = false;\n  }\n\n  show() {\n    this.showMenu = true;\n  }\n\n  calculateBubblePosition(view) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        state: {\n          selection\n        }\n      } = view;\n      const {\n        from,\n        to\n      } = selection;\n      const start = view.coordsAtPos(from);\n      const end = view.coordsAtPos(to);\n      const selectionElement = {\n        getBoundingClientRect() {\n          if (selection instanceof NodeSelection) {\n            const node = view.nodeDOM(from);\n            return node.getBoundingClientRect();\n          }\n\n          const {\n            top,\n            left\n          } = start;\n          const {\n            bottom,\n            right\n          } = end;\n          return {\n            x: left,\n            y: top,\n            top,\n            bottom,\n            left,\n            right,\n            width: right - left,\n            height: bottom - top\n          };\n        }\n\n      }; // the floating bubble itself\n\n      const bubbleEl = _this.el.nativeElement;\n      const {\n        x: left,\n        y: top\n      } = yield computePosition(selectionElement, bubbleEl, {\n        placement: 'top',\n        middleware: [offset(5), _this.autoPlace && autoPlacement({\n          boundary: view.dom,\n          padding: 5,\n          allowedPlacements: ['top', 'bottom']\n        }), {\n          // prevent overflow on right and left side\n          // since only top and bottom placements are allowed\n          // autoplacement can't handle overflows on the right and left\n          name: 'overflowMiddleware',\n\n          fn(middlewareArgs) {\n            return _asyncToGenerator(function* () {\n              const overflow = yield detectOverflow(middlewareArgs, {\n                boundary: view.dom,\n                padding: 5\n              }); // overflows left\n\n              if (overflow.left > 0) {\n                return {\n                  x: middlewareArgs.x + overflow.left\n                };\n              } // overflows right\n\n\n              if (overflow.right > 0) {\n                return {\n                  x: middlewareArgs.x - overflow.right\n                };\n              }\n\n              return {};\n            })();\n          }\n\n        }].filter(Boolean)\n      });\n      return {\n        left,\n        top\n      };\n    })();\n  }\n\n  canShowMenu(view) {\n    const {\n      state\n    } = view;\n    const {\n      selection\n    } = state;\n    const {\n      empty\n    } = selection;\n\n    if (selection instanceof NodeSelection) {\n      if (selection.node.type.name === 'image') {\n        return false;\n      }\n    }\n\n    const hasFocus = this.view.hasFocus();\n\n    if (!hasFocus || empty || this.dragging) {\n      this.hide();\n      return false;\n    }\n\n    return true;\n  }\n\n  update(view) {\n    const canShowMenu = this.canShowMenu(view);\n\n    if (!canShowMenu) {\n      this.hide();\n      return;\n    }\n\n    this.calculateBubblePosition(this.view).then(({\n      top,\n      left\n    }) => {\n      if (!this.canShowMenu) {\n        this.hide();\n        return;\n      }\n\n      this.posLeft = left;\n      this.posTop = top;\n      this.show();\n    });\n  }\n\n  ngOnInit() {\n    if (!this.editor) {\n      throw new NgxEditorError('Required editor instance to initialize floating menu component');\n    }\n\n    this.updateSubscription = this.editor.update.subscribe(view => {\n      this.update(view);\n    });\n    this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, {\n      leading: true,\n      trailing: true\n    })).subscribe(() => {\n      this.useUpdate();\n    });\n  }\n\n  ngOnDestroy() {\n    this.updateSubscription.unsubscribe();\n    this.resizeSubscription.unsubscribe();\n  }\n\n}\n\nFloatingMenuComponent.ɵfac = function FloatingMenuComponent_Factory(t) {\n  return new (t || FloatingMenuComponent)(i0.ɵɵdirectiveInject(i0.ElementRef));\n};\n\nFloatingMenuComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: FloatingMenuComponent,\n  selectors: [[\"ngx-editor-floating-menu\"]],\n  hostVars: 2,\n  hostBindings: function FloatingMenuComponent_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵlistener(\"mousedown\", function FloatingMenuComponent_mousedown_HostBindingHandler($event) {\n        return ctx.onMouseDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"keydown\", function FloatingMenuComponent_keydown_HostBindingHandler($event) {\n        return ctx.onKeyDown($event);\n      }, false, i0.ɵɵresolveDocument)(\"mouseup\", function FloatingMenuComponent_mouseup_HostBindingHandler($event) {\n        return ctx.onMouseUp($event);\n      }, false, i0.ɵɵresolveDocument)(\"keyup\", function FloatingMenuComponent_keyup_HostBindingHandler($event) {\n        return ctx.onKeyUp($event);\n      }, false, i0.ɵɵresolveDocument);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵstyleMap(ctx.display);\n    }\n  },\n  inputs: {\n    editor: \"editor\",\n    autoPlace: \"autoPlace\"\n  },\n  ngContentSelectors: _c3,\n  decls: 4,\n  vars: 1,\n  consts: [[\"ref\", \"\"], [4, \"ngIf\"], [3, \"editor\"]],\n  template: function FloatingMenuComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵprojectionDef();\n      i0.ɵɵelementStart(0, \"div\", null, 0);\n      i0.ɵɵprojection(2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(3, FloatingMenuComponent_ng_container_3_Template, 2, 1, \"ng-container\", 1);\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(1);\n\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"ngIf\", _r0.children.length === 0);\n    }\n  },\n  dependencies: [i3.NgIf, BubbleComponent],\n  styles: [\"*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_nghost-%COMP%]{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\"]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(FloatingMenuComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-editor-floating-menu',\n      template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\",\n      styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: i0.ElementRef\n    }];\n  }, {\n    display: [{\n      type: HostBinding,\n      args: ['style']\n    }],\n    editor: [{\n      type: Input\n    }],\n    autoPlace: [{\n      type: Input\n    }],\n    onMouseDown: [{\n      type: HostListener,\n      args: ['document:mousedown', ['$event']]\n    }],\n    onKeyDown: [{\n      type: HostListener,\n      args: ['document:keydown', ['$event']]\n    }],\n    onMouseUp: [{\n      type: HostListener,\n      args: ['document:mouseup', ['$event']]\n    }],\n    onKeyUp: [{\n      type: HostListener,\n      args: ['document:keyup', ['$event']]\n    }]\n  });\n})();\n\nclass MenuModule {}\n\nMenuModule.ɵfac = function MenuModule_Factory(t) {\n  return new (t || MenuModule)();\n};\n\nMenuModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: MenuModule\n});\nMenuModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  providers: [SanitizeHtmlPipe],\n  imports: [CommonModule, ReactiveFormsModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MenuModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ReactiveFormsModule],\n      declarations: [// pipes\n      SanitizeHtmlPipe, // components\n      MenuComponent, ToggleCommandComponent, InsertCommandComponent, LinkComponent, DropdownComponent, ImageComponent, ColorPickerComponent, FloatingMenuComponent, BubbleComponent],\n      providers: [SanitizeHtmlPipe],\n      exports: [MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nconst defaultConfig = {\n  locals: defaults\n};\n\nclass NgxEditorModule {\n  static forRoot(config = defaultConfig) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }]\n    };\n  }\n\n  static forChild(config = defaultConfig) {\n    return {\n      ngModule: NgxEditorModule,\n      providers: [{\n        provide: NGX_EDITOR_CONFIG_TOKEN,\n        useValue: config\n      }, {\n        provide: NgxEditorServiceConfig,\n        useFactory: provideMyServiceOptions,\n        deps: [NGX_EDITOR_CONFIG_TOKEN]\n      }, NgxEditorService]\n    };\n  }\n\n}\n\nNgxEditorModule.ɵfac = function NgxEditorModule_Factory(t) {\n  return new (t || NgxEditorModule)();\n};\n\nNgxEditorModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxEditorModule\n});\nNgxEditorModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [CommonModule, MenuModule]\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxEditorModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, MenuModule],\n      providers: [],\n      declarations: [NgxEditorComponent, ImageViewComponent],\n      exports: [NgxEditorComponent, MenuComponent, FloatingMenuComponent]\n    }]\n  }], null, null);\n})();\n\nconst isEmptyInputValue = value => {\n  // we don't check for string here so it also works with arrays\n  return value === null || value.length === 0;\n};\n\nconst hasValidLength = value => {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value !== null && typeof value.length === 'number';\n};\n\nconst isDocEmpty = doc => {\n  if (!doc) {\n    return true;\n  }\n\n  const {\n    childCount,\n    firstChild\n  } = doc;\n  return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n}; // @dynamic\n\n\nclass Validators {\n  static required(userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const isEmpty = isDocEmpty(doc);\n\n      if (!isEmpty) {\n        return null;\n      }\n\n      return {\n        required: true\n      };\n    };\n  }\n\n  static maxLength(maxLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n\n      if (hasValidLength(value) && value.length > maxLength) {\n        return {\n          maxlength: {\n            requiredLength: maxLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n  static minLength(minLength, userSchema) {\n    return control => {\n      const schema$1 = userSchema || schema;\n      const doc = parseContent(control.value, schema$1);\n      const value = doc.textContent;\n\n      if (isEmptyInputValue(value) || !hasValidLength(value)) {\n        // don't validate empty values to allow optional controls\n        // don't validate values without `length` property\n        return null;\n      }\n\n      if (value.length < minLength) {\n        return {\n          minlength: {\n            requiredLength: minLength,\n            actualLength: value.length\n          }\n        };\n      }\n\n      return null;\n    };\n  }\n\n}\n\nconst execMark = (name, toggle = false) => {\n  return (state, dispatch) => {\n    const command = new Mark(name);\n\n    if (!toggle) {\n      return command.apply()(state, dispatch);\n    }\n\n    return command.toggle()(state, dispatch);\n  };\n};\n\nclass EditorCommands {\n  constructor(view) {\n    this.applyTrx = tr => {\n      this.state = this.state.apply(tr ?? this.tr);\n      this.tr = this.state.tr;\n      this.tr.setMeta('APPLIED_TRX', true);\n    };\n\n    this.dispatch = tr => {\n      this.applyTrx(tr);\n    };\n\n    if (!view) {\n      throw new NgxEditorError('Required view to initialize commands.');\n    }\n\n    this.view = view;\n    this.state = view.state;\n    this.tr = this.view.state.tr;\n  }\n\n  exec() {\n    // No changes applied\n    if (!this.tr.getMeta('APPLIED_TRX')) {\n      return false;\n    }\n\n    const forceEmit = !this.view.state.doc.eq(this.state.doc);\n    this.view.updateState(this.state);\n    const tr = this.tr.setMeta('FORCE_EMIT', forceEmit);\n    this.view.dispatch(tr);\n    return true;\n  }\n\n  focus() {\n    this.view.focus();\n    return this;\n  }\n\n  scrollIntoView() {\n    this.tr.scrollIntoView();\n    this.applyTrx();\n    return this;\n  }\n\n  insertText(text) {\n    this.tr.insertText(text);\n    this.applyTrx();\n    return this;\n  }\n\n  insertNewLine() {\n    const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n    chainCommands(...newLineCommands)(this.state, this.dispatch);\n    return this;\n  }\n\n  applyMark(name) {\n    execMark(name, false)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleMark(name) {\n    execMark(name, true)(this.state, this.dispatch);\n    return this;\n  }\n\n  bold() {\n    execMark('strong')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBold() {\n    execMark('strong', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  italics() {\n    execMark('em')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleItalics() {\n    execMark('em', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  underline() {\n    execMark('u')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleUnderline() {\n    execMark('u', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  strike() {\n    execMark('s')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleStrike() {\n    execMark('s', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  code() {\n    execMark('code')(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleCode() {\n    execMark('code', true)(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleOrderedList() {\n    const command = new ListItem(false);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleBulletList() {\n    const command = new ListItem(true);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  toggleHeading(level) {\n    const command = new Heading(level);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertLink(text, attrs) {\n    const command = new Link$1();\n    command.insert(text, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  updateLink(attrs) {\n    const command = new Link$1();\n    command.update(attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  insertImage(src, attrs = {}) {\n    const command = new Image$1();\n    command.insert(src, attrs)(this.state, this.dispatch);\n    return this;\n  }\n\n  textColor(color) {\n    const command = new TextColor$1('text_color');\n    command.apply({\n      color\n    })(this.state, this.dispatch);\n    return this;\n  }\n\n  backgroundColor(color) {\n    const command = new TextColor$1('text_background_color');\n    command.apply({\n      backgroundColor: color\n    })(this.state, this.dispatch);\n    return this;\n  }\n\n  removeTextColor() {\n    const command = new TextColor$1('text_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  removeBackgroundColor() {\n    const command = new TextColor$1('text_background_color');\n    command.remove()(this.state, this.dispatch);\n    return this;\n  }\n\n  align(p) {\n    const command = new TextAlign(p);\n    command.toggle()(this.state, this.dispatch);\n    return this;\n  }\n\n  insertHTML(html) {\n    const {\n      selection,\n      schema,\n      tr\n    } = this.state;\n    const {\n      from,\n      to\n    } = selection;\n    const element = document.createElement('div');\n    element.innerHTML = html.trim();\n    const slice = DOMParser.fromSchema(schema).parseSlice(element);\n    const transaction = tr.replaceRange(from, to, slice);\n    this.applyTrx(transaction);\n    return this;\n  }\n\n}\n\nconst isMacOs = typeof navigator !== 'undefined' ? /Mac/.test(navigator.platform) : false; // Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\n\nconst blockQuoteRule = nodeType => {\n  return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n}; // : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\n\n\nconst orderedListRule = nodeType => {\n  return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, match => ({\n    order: Number(match[1])\n  }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n}; // : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\n\n\nconst bulletListRule = nodeType => {\n  return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n}; // : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\n\n\nconst codeBlockRule = nodeType => {\n  return textblockTypeInputRule(/^```$/, nodeType);\n}; // : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\n\n\nconst headingRule = (nodeType, maxLevel) => {\n  return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, match => ({\n    level: match[1].length\n  }));\n}; // : (MarkType) → InputRule\n// Wraps matching text with bold mark\n\n\nconst boldRule = markType => {\n  return markInputRule(/(?:^|\\s)(?:(?:\\*\\*|__)(?:(?:[^*_]+))(?:\\*\\*|__))$/, markType);\n}; // : (MarkType) → InputRule\n// Wraps matching text with em mark\n\n\nconst emRule = markType => {\n  return markInputRule(/(?:^|\\s)(?:(?:\\*|_)(?:(?:[^*_]+))(?:\\*|_))$/, markType);\n}; // : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\n\n\nconst buildInputRules = schema => {\n  const rules = smartQuotes.concat(ellipsis, emDash);\n  rules.push(boldRule(schema.marks['strong']));\n  rules.push(emRule(schema.marks['em']));\n  rules.push(blockQuoteRule(schema.nodes['blockquote']));\n  rules.push(orderedListRule(schema.nodes['ordered_list']));\n  rules.push(bulletListRule(schema.nodes['bullet_list']));\n  rules.push(codeBlockRule(schema.nodes['code_block']));\n  rules.push(headingRule(schema.nodes['heading'], 6));\n  return inputRules({\n    rules\n  });\n};\n\nconst getKeyboardShortcuts = (schema, options) => {\n  const historyKeyMap = {};\n  historyKeyMap['Mod-z'] = undo;\n\n  if (isMacOs) {\n    historyKeyMap['Shift-Mod-z'] = redo;\n  } else {\n    historyKeyMap['Mod-y'] = redo;\n  }\n\n  const plugins = [keymap({\n    'Mod-b': toggleMark(schema.marks['strong']),\n    'Mod-i': toggleMark(schema.marks['em']),\n    'Mod-u': toggleMark(schema.marks['u']),\n    'Mod-`': toggleMark(schema.marks['code'])\n  }), keymap({\n    'Enter': splitListItem(schema.nodes['list_item']),\n    'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n      const {\n        tr\n      } = state;\n      const br = schema.nodes['hard_break'];\n      dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n      return true;\n    }),\n    'Mod-[': liftListItem(schema.nodes['list_item']),\n    'Mod-]': sinkListItem(schema.nodes['list_item']),\n    'Tab': sinkListItem(schema.nodes['list_item'])\n  }), keymap(baseKeymap)];\n\n  if (options.history) {\n    plugins.push(keymap(historyKeyMap));\n  }\n\n  return plugins;\n};\n\nconst getDefaultPlugins = (schema, options) => {\n  const plugins = [];\n\n  if (options.keyboardShortcuts) {\n    plugins.push(...getKeyboardShortcuts(schema, {\n      history: options.history\n    }));\n  }\n\n  if (options.history) {\n    plugins.push(history());\n  }\n\n  if (options.inputRules) {\n    plugins.push(buildInputRules(schema));\n  }\n\n  return plugins;\n};\n\nconst defaultFeatures = {\n  linkOnPaste: true,\n  resizeImage: true\n};\nconst DEFAULT_OPTIONS = {\n  content: null,\n  history: true,\n  keyboardShortcuts: true,\n  inputRules: true,\n  schema: schema,\n  plugins: [],\n  nodeViews: {},\n  attributes: {},\n  features: defaultFeatures,\n  handleScrollToSelection: null,\n  linkValidationPattern: '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)|(mailto:.*[@].*)'\n};\n\nclass Editor {\n  constructor(options = DEFAULT_OPTIONS) {\n    this.valueChangesSubject = new Subject();\n    this.updateSubject = new Subject();\n    this.options = { ...DEFAULT_OPTIONS,\n      ...options\n    };\n    this.createEditor();\n  }\n\n  get valueChanges() {\n    return this.valueChangesSubject.asObservable();\n  }\n\n  get update() {\n    return this.updateSubject.asObservable();\n  }\n\n  get schema() {\n    return this.options.schema || schema;\n  }\n\n  get linkValidationPattern() {\n    return this.options.linkValidationPattern;\n  }\n\n  get commands() {\n    return new EditorCommands(this.view);\n  }\n\n  get features() {\n    return { ...defaultFeatures,\n      ...this.options.features\n    };\n  }\n\n  handleTransactions(tr) {\n    const state = this.view.state.apply(tr);\n    this.view.updateState(state);\n    this.updateSubject.next(this.view);\n\n    if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n      return;\n    }\n\n    const json = state.doc.toJSON();\n    this.valueChangesSubject.next(json);\n  }\n\n  createEditor() {\n    const {\n      options,\n      schema\n    } = this;\n    const {\n      content = null,\n      nodeViews\n    } = options;\n    const {\n      history = true,\n      keyboardShortcuts = true,\n      inputRules = true\n    } = options;\n    const doc = parseContent(content, schema);\n    const plugins = options.plugins ?? [];\n    const attributes = options.attributes ?? {};\n    const defaultPlugins = getDefaultPlugins(schema, {\n      history,\n      keyboardShortcuts,\n      inputRules\n    });\n    this.view = new EditorView(null, {\n      state: EditorState.create({\n        doc,\n        schema,\n        plugins: [...defaultPlugins, ...plugins]\n      }),\n      nodeViews,\n      dispatchTransaction: this.handleTransactions.bind(this),\n      attributes,\n      handleScrollToSelection: options.handleScrollToSelection\n    });\n  }\n\n  setContent(content) {\n    if (isNil(content)) {\n      return;\n    }\n\n    const {\n      state\n    } = this.view;\n    const {\n      tr,\n      doc\n    } = state;\n    const newDoc = parseContent(content, this.schema);\n    tr.replaceWith(0, state.doc.content.size, newDoc); // don't emit if both content is same\n\n    if (doc.eq(tr.doc)) {\n      return;\n    }\n\n    if (!tr.docChanged) {\n      return;\n    }\n\n    this.view.dispatch(tr);\n  }\n\n  registerPlugin(plugin) {\n    const {\n      state\n    } = this.view;\n    const plugins = [...state.plugins, plugin];\n    const newState = state.reconfigure({\n      plugins\n    });\n    this.view.updateState(newState);\n  }\n\n  destroy() {\n    this.view.destroy();\n  }\n\n}\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, MenuComponent, NGX_EDITOR_CONFIG_TOKEN, NgxEditorComponent, NgxEditorModule, NgxEditorService, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, provideMyServiceOptions, toDoc, toHTML };","map":{"version":3,"names":["i0","EventEmitter","Component","Input","Output","ViewChild","ApplicationRef","createComponent","forwardRef","ViewEncapsulation","Injectable","Optional","Pipe","HostListener","HostBinding","NgModule","InjectionToken","i4","NG_VALUE_ACCESSOR","FormGroup","FormControl","Validators","Validators$1","ReactiveFormsModule","Subject","fromEvent","asyncScheduler","takeUntil","throttleTime","NgxEditorError","isNil","Plugin","PluginKey","NodeSelection","EditorState","DecorationSet","Decoration","EditorView","i3","CommonModule","Fragment","Slice","DOMSerializer","DOMParser","schema","marks","nodes","toggleMark","lift","wrapIn","setBlockType","newlineInCode","createParagraphNear","liftEmptyBlock","splitBlock","chainCommands","exitCode","baseKeymap","applyMark","removeLink","removeMark","isMarkActive","isNodeActive","canInsert","getSelectionNodes","getSelectionMarks","markInputRule","liftListItem","wrapInList","splitListItem","sinkListItem","i1","computePosition","offset","autoPlacement","detectOverflow","keymap","undo","redo","history","wrappingInputRule","textblockTypeInputRule","smartQuotes","ellipsis","emDash","inputRules","editablePlugin","editable","key","state","init","apply","tr","previousVal","getMeta","props","getState","attributes","isEnabled","class","PLACEHOLDER_CLASSNAME","placeholderPlugin","text","placeholder","decorations","doc","textContent","childCount","empty","decorate","node","pos","type","isBlock","length","from","to","nodeSize","placeholderNode","attrs","push","descendants","create","attributesPlugin","focusPlugin","cb","handleDOMEvents","focus","blurPlugin","blur","ImageViewComponent","constructor","alt","title","outerWidth","selected","imageResize","startResizing","e","direction","preventDefault","resizeImage","evt","startX","pageX","startWidth","imgEl","nativeElement","clientWidth","isLeftResize","width","window","getComputedStyle","view","dom","editorWidth","parseInt","onMouseMove","currentX","diffInPx","computedWidth","onMouseUp","document","removeEventListener","emit","addEventListener","ɵfac","ɵcmp","NgClass","NgIf","args","selector","template","styles","src","static","ImageRezieView","getPos","injector","updating","handleResize","dispatch","transaction","setNodeMarkup","undefined","imageComponentRef","instance","resolvedPos","resolve","newSelection","setSelection","applicationRef","get","environmentInjector","attachView","hostView","setNodeAttributes","location","resizeSubscription","subscribe","computeChanges","prevAttrs","newAttrs","JSON","stringify","update","changed","ignoreMutation","selectNode","deselectNode","destroy","unsubscribe","detachView","imageResizePlugin","nodeViews","image","HTTP_LINK_REGEX","linkify","fragment","linkified","forEach","child","isText","match","exec","start","index","end","link","cut","urlText","slice","mark","href","addToSet","copy","content","fromArray","linkifyPlugin","transformPasted","openStart","openEnd","emptyDoc","toHTML","json","inputSchema","schema$1","contentNode","nodeFromJSON","html","fromSchema","serializeFragment","div","createElement","appendChild","innerHTML","toDoc","el","parse","toJSON","parseContent","value","docJson","NgxEditorComponent","renderer","elementRef","focusOut","focusIn","onChange","onTouched","writeValue","outputFormat","editor","setContent","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","setMeta","setProperty","handleChange","jsonDoc","setPlaceholder","registerPlugins","registerPlugin","features","linkOnPaste","ngOnInit","ngxEditor","valueChanges","pipe","ngOnChanges","changes","isFirstChange","currentValue","ngOnDestroy","next","complete","Renderer2","Injector","ElementRef","provide","useExisting","multi","providers","encapsulation","None","MenuService","customMenuRefChange","setCustomMenuRef","c","ɵprov","providedIn","bold","italic","code","underline","strike","orderedList","bulletList","quote","unlink","alignLeft","alignCenter","alignRight","alignJustify","textColor","colorFill","horizontalRule","formatClear","DEFAULT_ICON_HEIGHT","DEFAULT_ICON_WIDTH","DEFAULT_ICON_FILL","icons","ordered_list","bullet_list","blockquote","align_left","align_center","align_right","align_justify","text_color","color_fill","horizontal_rule","format_clear","Icon","name","fill","path","Mark","toggle","isActive","canExecute","Blockqote","HorizontalRule","insert","replaceSelectionWith","scrollIntoView","ListItem","isBulletList","getType","Heading","level","selection","nodePos","$from","before","nodeAt","nodesInSelection","supportedNodes","filter","includes","acitveNode","find","Boolean","TextAlign","align","applicable","nodesBetween","nodeType","docChanged","active","defaultOptions","strict","Link$1","linkAttrs","target","options","remove","testAttrs","Image$1","imageAttrs","createAndFill","anchor","$anchor","nodeBefore","TextColor$1","attrName","isAtom","isLeaf","getActiveColors","colors","map","color","backgroundColor","SAFE_MARKS","FormatClear","ranges","Object","entries","markType","range","$to","STRONG","EM","CODE","UNDERLINE","STRIKE","BLOCKQUOTE","HORIZONTAL_RULE","FORMAT_CLEAR","UL","OL","H1","H2","H3","H4","H5","H6","ALIGN_LEFT","ALIGN_CENTER","ALIGN_RIGHT","ALIGN_JUSTIFY","LINK","IMAGE","TEXT_COLOR","TEXT_BACKGROUND_COLOR","ToggleCommands","h1","h2","h3","h4","h5","h6","InsertCommands","Link","Image","TextColor","TextBackgroundColor","defaults","heading","background_color","insertLink","insertImage","url","openInNewTab","altText","Locals","newLocals","locals","NgxEditorServiceConfig","NgxEditorService","config","decorators","provideMyServiceOptions","SanitizeHtmlPipe","sanitizer","transform","bypassSecurityTrustHtml","DomSanitizer","ɵpipe","ToggleCommandComponent","ngxeService","menuService","disabled","command","toolbarItem","button","editorView","getTitle","updateSubscription","InsertCommandComponent","LinkComponent","showPopup","setText","selectedText","textBetween","patchValue","disable","icon","form","onDocumentClick","contains","hideForm","getLabel","reset","enable","onMouseDown","getRawValue","required","pattern","linkValidationPattern","ɵNgNoValidate","DefaultValueAccessor","CheckboxControlValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","DropdownComponent","isDropdownOpen","disabledItems","activeItems","items","item","activeItem","isSelected","isDropdownDisabled","getName","toggleDropdown","trackByIndex","onClick","NgForOf","group","ImageComponent","fillForm","setValue","ColorPickerComponent","activeColors","getContrastYIQ","hexcolor","replace","r","substring","g","b","yiq","hidePopup","togglePopup","onColorSelect","hasFocus","NgStyle","presets","DEFAULT_TOOLBAR","TOOLBAR_MINIMAL","TOOLBAR_FULL","DEFAULT_COLOR_PRESETS","MenuComponent","toolbar","colorPresets","customMenuRef","dropdownPlacement","toggleCommands","insertCommands","iconContainerClass","dropdownContainerClass","seperatorClass","col","row","Math","floor","isDropDown","getDropdownItems","NgTemplateOutlet","KeyValuePipe","BubbleComponent","sanitizeHTML","execulableItems","getIcon","commandName","stopPropagation","FloatingMenuComponent","autoPlace","posLeft","posTop","showMenu","dragging","display","visibility","opacity","top","left","nodeName","onKeyDown","hide","useUpdate","onKeyUp","show","calculateBubblePosition","coordsAtPos","selectionElement","getBoundingClientRect","nodeDOM","bottom","right","x","y","height","bubbleEl","placement","middleware","boundary","padding","allowedPlacements","middlewareArgs","overflow","canShowMenu","then","leading","trailing","MenuModule","ɵmod","ɵinj","imports","declarations","exports","NGX_EDITOR_CONFIG_TOKEN","defaultConfig","NgxEditorModule","forRoot","ngModule","useValue","useFactory","deps","forChild","isEmptyInputValue","hasValidLength","isDocEmpty","firstChild","isTextblock","size","userSchema","control","isEmpty","maxLength","maxlength","requiredLength","actualLength","minLength","minlength","execMark","EditorCommands","applyTrx","forceEmit","eq","updateState","insertText","insertNewLine","newLineCommands","toggleBold","italics","toggleItalics","toggleUnderline","toggleStrike","toggleCode","toggleOrderedList","toggleBulletList","toggleHeading","updateLink","removeTextColor","removeBackgroundColor","p","insertHTML","element","trim","parseSlice","replaceRange","isMacOs","navigator","test","platform","blockQuoteRule","orderedListRule","order","Number","bulletListRule","codeBlockRule","headingRule","maxLevel","RegExp","boldRule","emRule","buildInputRules","rules","concat","getKeyboardShortcuts","historyKeyMap","plugins","br","getDefaultPlugins","keyboardShortcuts","defaultFeatures","DEFAULT_OPTIONS","handleScrollToSelection","Editor","valueChangesSubject","updateSubject","createEditor","asObservable","commands","handleTransactions","defaultPlugins","dispatchTransaction","bind","newDoc","replaceWith","plugin","newState","reconfigure"],"sources":["C:/Users/ercan/source/repos/sehir-rehberi-spa/node_modules/ngx-editor/fesm2020/ngx-editor.mjs"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { EventEmitter, Component, Input, Output, ViewChild, ApplicationRef, createComponent, forwardRef, ViewEncapsulation, Injectable, Optional, Pipe, HostListener, HostBinding, NgModule, InjectionToken } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, FormGroup, FormControl, Validators as Validators$1, ReactiveFormsModule } from '@angular/forms';\nimport { Subject, fromEvent, asyncScheduler } from 'rxjs';\nimport { takeUntil, throttleTime } from 'rxjs/operators';\nimport { NgxEditorError, isNil } from 'ngx-editor/utils';\nimport { Plugin, PluginKey, NodeSelection, EditorState } from 'prosemirror-state';\nimport { DecorationSet, Decoration, EditorView } from 'prosemirror-view';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport { Fragment, Slice, DOMSerializer, DOMParser } from 'prosemirror-model';\nimport { schema } from 'ngx-editor/schema';\nexport { marks, nodes, schema } from 'ngx-editor/schema';\nimport { toggleMark, lift, wrapIn, setBlockType, newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock, chainCommands, exitCode, baseKeymap } from 'prosemirror-commands';\nimport { applyMark, removeLink, removeMark } from 'ngx-editor/commands';\nimport { isMarkActive, isNodeActive, canInsert, getSelectionNodes, getSelectionMarks, markInputRule } from 'ngx-editor/helpers';\nimport { liftListItem, wrapInList, splitListItem, sinkListItem } from 'prosemirror-schema-list';\nimport * as i1 from '@angular/platform-browser';\nimport { computePosition, offset, autoPlacement, detectOverflow } from '@floating-ui/dom';\nimport { keymap } from 'prosemirror-keymap';\nimport { undo, redo, history } from 'prosemirror-history';\nimport { wrappingInputRule, textblockTypeInputRule, smartQuotes, ellipsis, emDash, inputRules } from 'prosemirror-inputrules';\n\nconst editablePlugin = (editable = true) => {\n    return new Plugin({\n        key: new PluginKey('editable'),\n        state: {\n            init() {\n                return editable;\n            },\n            apply(tr, previousVal) {\n                return tr.getMeta('UPDATE_EDITABLE') ?? previousVal;\n            },\n        },\n        props: {\n            editable(state) {\n                return this.getState(state);\n            },\n            attributes(state) {\n                const isEnabled = this.getState(state);\n                if (isEnabled) {\n                    return null;\n                }\n                return {\n                    class: 'NgxEditor__Content--Disabled',\n                };\n            },\n        },\n    });\n};\n\nconst PLACEHOLDER_CLASSNAME = 'NgxEditor__Placeholder';\nconst placeholderPlugin = (text) => {\n    return new Plugin({\n        key: new PluginKey('placeholder'),\n        state: {\n            init() {\n                return text ?? '';\n            },\n            apply(tr, previousVal) {\n                const placeholder = tr.getMeta('UPDATE_PLACEHOLDER') ?? previousVal;\n                return placeholder;\n            },\n        },\n        props: {\n            decorations(state) {\n                const { doc } = state;\n                const { textContent, childCount } = doc;\n                const placeholder = this.getState(state);\n                if (!placeholder || childCount > 1) {\n                    return DecorationSet.empty;\n                }\n                const decorations = [];\n                const decorate = (node, pos) => {\n                    if (node.type.isBlock && node.childCount === 0 && textContent.length === 0) {\n                        const from = pos;\n                        const to = pos + node.nodeSize;\n                        const placeholderNode = Decoration.node(from, to, {\n                            'class': PLACEHOLDER_CLASSNAME,\n                            'data-placeholder': placeholder,\n                            'data-align': node.attrs['align'] ?? null,\n                        });\n                        decorations.push(placeholderNode);\n                    }\n                    return false;\n                };\n                doc.descendants(decorate);\n                return DecorationSet.create(doc, decorations);\n            },\n        },\n    });\n};\n\nconst attributesPlugin = (attributes = {}) => {\n    return new Plugin({\n        key: new PluginKey('attributes'),\n        props: {\n            attributes,\n        },\n    });\n};\n\nconst focusPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('focus'),\n        props: {\n            handleDOMEvents: {\n                focus: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nconst blurPlugin = (cb) => {\n    return new Plugin({\n        key: new PluginKey('blur'),\n        props: {\n            handleDOMEvents: {\n                blur: () => {\n                    cb();\n                    return false;\n                },\n            },\n        },\n    });\n};\n\nclass ImageViewComponent {\n    constructor() {\n        this.alt = '';\n        this.title = '';\n        this.outerWidth = '';\n        this.selected = false;\n        this.imageResize = new EventEmitter();\n    }\n    startResizing(e, direction) {\n        e.preventDefault();\n        this.resizeImage(e, direction);\n    }\n    resizeImage(evt, direction) {\n        const startX = evt.pageX;\n        const startWidth = this.imgEl.nativeElement.clientWidth;\n        const isLeftResize = direction === 'left';\n        const { width } = window.getComputedStyle(this.view.dom);\n        const editorWidth = parseInt(width, 10);\n        const onMouseMove = (e) => {\n            const currentX = e.pageX;\n            const diffInPx = currentX - startX;\n            const computedWidth = isLeftResize ? startWidth - diffInPx : startWidth + diffInPx;\n            // prevent image overflow the editor\n            // prevent resizng below 20px\n            if (computedWidth > editorWidth || computedWidth < 20) {\n                return;\n            }\n            this.outerWidth = `${computedWidth}px`;\n        };\n        const onMouseUp = (e) => {\n            e.preventDefault();\n            document.removeEventListener('mousemove', onMouseMove);\n            document.removeEventListener('mouseup', onMouseUp);\n            this.imageResize.emit();\n        };\n        document.addEventListener('mousemove', onMouseMove);\n        document.addEventListener('mouseup', onMouseUp);\n    }\n}\nImageViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ImageViewComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nImageViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: ImageViewComponent, selector: \"ngx-image-view\", inputs: { src: \"src\", alt: \"alt\", title: \"title\", outerWidth: \"outerWidth\", selected: \"selected\", view: \"view\" }, outputs: { imageResize: \"imageResize\" }, viewQueries: [{ propertyName: \"imgEl\", first: true, predicate: [\"imgEl\"], descendants: true, static: true }], ngImport: i0, template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ImageViewComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image-view', template: \"<span class=\\\"NgxEditor__ImageWrapper\\\" [ngClass]=\\\"{'NgxEditor__Resizer--Active': selected}\\\" [style.width]=\\\"outerWidth\\\">\\n  <span class=\\\"NgxEditor__ResizeHandle\\\" *ngIf=\\\"selected\\\">\\n    <span class=\\\"NgxEditor__ResizeHandle--TL\\\"  (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--TR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BL\\\" (mousedown)=\\\"startResizing($event, 'left')\\\"></span>\\n    <span class=\\\"NgxEditor__ResizeHandle--BR\\\" (mousedown)=\\\"startResizing($event, 'right')\\\"></span>\\n  </span>\\n  <img [src]=\\\"src\\\" [alt]=\\\"alt\\\" [title]=\\\"title\\\" #imgEl />\\n</span>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}img{width:100%;height:100%}.NgxEditor__ImageWrapper{position:relative;display:inline-block;line-height:0;padding:2px}.NgxEditor__ImageWrapper.NgxEditor__Resizer--Active{padding:1px;border:1px solid #1a73e8}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle{position:absolute;height:100%;width:100%}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR,.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{position:absolute;width:7px;height:7px;background-color:#1a73e8;border:1px solid white}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BR{bottom:-5px;right:-5px;cursor:se-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TR{top:-5px;right:-5px;cursor:ne-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--TL{top:-5px;left:-5px;cursor:nw-resize}.NgxEditor__ImageWrapper .NgxEditor__ResizeHandle .NgxEditor__ResizeHandle--BL{bottom:-5px;left:-5px;cursor:sw-resize}\\n\"] }]\n        }], propDecorators: { src: [{\n                type: Input\n            }], alt: [{\n                type: Input\n            }], title: [{\n                type: Input\n            }], outerWidth: [{\n                type: Input\n            }], selected: [{\n                type: Input\n            }], view: [{\n                type: Input\n            }], imageResize: [{\n                type: Output\n            }], imgEl: [{\n                type: ViewChild,\n                args: ['imgEl', { static: true }]\n            }] } });\n\nclass ImageRezieView {\n    constructor(node, view, getPos, injector) {\n        this.updating = false;\n        this.handleResize = () => {\n            if (this.updating) {\n                return;\n            }\n            const { state, dispatch } = this.view;\n            const { tr } = state;\n            const transaction = tr.setNodeMarkup(this.getPos(), undefined, {\n                ...this.node.attrs,\n                width: this.imageComponentRef.instance.outerWidth,\n            });\n            const resolvedPos = transaction.doc.resolve(this.getPos());\n            const newSelection = new NodeSelection(resolvedPos);\n            transaction.setSelection(newSelection);\n            dispatch(transaction);\n        };\n        this.applicationRef = injector.get(ApplicationRef);\n        // create component ref\n        this.imageComponentRef = createComponent(ImageViewComponent, {\n            environmentInjector: this.applicationRef.injector,\n        });\n        // Attach to the view so that the change detector knows to run\n        this.applicationRef.attachView(this.imageComponentRef.hostView);\n        this.setNodeAttributes(node.attrs);\n        this.imageComponentRef.instance.view = view;\n        this.dom = this.imageComponentRef.location.nativeElement;\n        this.view = view;\n        this.node = node;\n        this.getPos = getPos;\n        this.resizeSubscription = this.imageComponentRef.instance.imageResize.subscribe(() => {\n            this.handleResize();\n        });\n    }\n    computeChanges(prevAttrs, newAttrs) {\n        return JSON.stringify(prevAttrs) === JSON.stringify(newAttrs);\n    }\n    setNodeAttributes(attrs) {\n        this.imageComponentRef.instance.src = attrs['src'];\n        this.imageComponentRef.instance.alt = attrs['alt'];\n        this.imageComponentRef.instance.title = attrs['title'];\n        this.imageComponentRef.instance.outerWidth = attrs['width'];\n    }\n    update(node) {\n        if (node.type !== this.node.type) {\n            return false;\n        }\n        this.node = node;\n        const changed = this.computeChanges(this.node.attrs, node.attrs);\n        if (changed) {\n            this.updating = true;\n            this.setNodeAttributes(node.attrs);\n            this.updating = false;\n        }\n        return true;\n    }\n    ignoreMutation() {\n        return true;\n    }\n    selectNode() {\n        this.imageComponentRef.instance.selected = true;\n    }\n    deselectNode() {\n        this.imageComponentRef.instance.selected = false;\n    }\n    destroy() {\n        this.resizeSubscription.unsubscribe();\n        this.applicationRef.detachView(this.imageComponentRef.hostView);\n    }\n}\nconst imageResizePlugin = (injector) => {\n    return new Plugin({\n        key: new PluginKey('image-resize'),\n        props: {\n            nodeViews: {\n                image: (node, view, getPos) => {\n                    return new ImageRezieView(node, view, getPos, injector);\n                },\n            },\n        },\n    });\n};\n\nconst HTTP_LINK_REGEX = /(?:https?:\\/\\/)?[\\w-]+(?:\\.[\\w-]+)+\\.?(?:\\d+)?(?:\\/\\S*)?$/;\nconst linkify = (fragment) => {\n    const linkified = [];\n    fragment.forEach((child) => {\n        if (child.isText) {\n            const text = child.text;\n            let pos = 0;\n            const match = HTTP_LINK_REGEX.exec(text);\n            if (match) {\n                const start = match.index;\n                const end = start + match[0].length;\n                const { link } = child.type.schema.marks;\n                if (start > 0) {\n                    linkified.push(child.cut(pos, start));\n                }\n                const urlText = text.slice(start, end);\n                linkified.push(child.cut(start, end).mark(link.create({ href: urlText }).addToSet(child.marks)));\n                pos = end;\n            }\n            if (pos < text.length) {\n                linkified.push(child.cut(pos));\n            }\n        }\n        else {\n            linkified.push(child.copy(linkify(child.content)));\n        }\n    });\n    return Fragment.fromArray(linkified);\n};\nconst linkifyPlugin = () => {\n    return new Plugin({\n        key: new PluginKey('linkify'),\n        props: {\n            transformPasted: (slice) => {\n                return new Slice(linkify(slice.content), slice.openStart, slice.openEnd);\n            },\n        },\n    });\n};\n\nconst emptyDoc = {\n    type: 'doc',\n    content: [\n        {\n            type: 'paragraph',\n        },\n    ],\n};\n// https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment\nconst toHTML = (json, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const contentNode = schema$1.nodeFromJSON(json);\n    const html = DOMSerializer.fromSchema(schema$1).serializeFragment(contentNode.content);\n    const div = document.createElement('div');\n    div.appendChild(html);\n    return div.innerHTML;\n};\nconst toDoc = (html, inputSchema) => {\n    const schema$1 = inputSchema ?? schema;\n    const el = document.createElement('div');\n    el.innerHTML = html;\n    return DOMParser.fromSchema(schema$1).parse(el).toJSON();\n};\nconst parseContent = (value, schema) => {\n    if (!value) {\n        return schema.nodeFromJSON(emptyDoc);\n    }\n    if (typeof value !== 'string') {\n        return schema.nodeFromJSON(value);\n    }\n    const docJson = toDoc(value, schema);\n    return schema.nodeFromJSON(docJson);\n};\n\nclass NgxEditorComponent {\n    constructor(renderer, injector, elementRef) {\n        this.renderer = renderer;\n        this.injector = injector;\n        this.elementRef = elementRef;\n        this.placeholder = 'Type Here...';\n        this.focusOut = new EventEmitter();\n        this.focusIn = new EventEmitter();\n        this.unsubscribe = new Subject();\n        this.onChange = () => { };\n        this.onTouched = () => { };\n    }\n    writeValue(value) {\n        if (!this.outputFormat && typeof value === 'string') {\n            this.outputFormat = 'html';\n        }\n        this.editor.setContent(value ?? '');\n    }\n    registerOnChange(fn) {\n        this.onChange = fn;\n    }\n    registerOnTouched(fn) {\n        this.onTouched = fn;\n    }\n    setDisabledState(isDisabled) {\n        this.setMeta('UPDATE_EDITABLE', !isDisabled);\n        this.renderer.setProperty(this.elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    handleChange(jsonDoc) {\n        if (this.outputFormat === 'html') {\n            const html = toHTML(jsonDoc, this.editor.schema);\n            this.onChange(html);\n            return;\n        }\n        this.onChange(jsonDoc);\n    }\n    setMeta(key, value) {\n        const { dispatch, state: { tr } } = this.editor.view;\n        dispatch(tr.setMeta(key, value));\n    }\n    setPlaceholder(placeholder) {\n        this.setMeta('UPDATE_PLACEHOLDER', placeholder);\n    }\n    registerPlugins() {\n        this.editor.registerPlugin(editablePlugin());\n        this.editor.registerPlugin(placeholderPlugin(this.placeholder));\n        this.editor.registerPlugin(attributesPlugin({\n            class: 'NgxEditor__Content',\n        }));\n        this.editor.registerPlugin(focusPlugin(() => {\n            this.focusIn.emit();\n        }));\n        this.editor.registerPlugin(blurPlugin(() => {\n            this.focusOut.emit();\n            this.onTouched();\n        }));\n        if (this.editor.features.resizeImage) {\n            this.editor.registerPlugin(imageResizePlugin(this.injector));\n        }\n        if (this.editor.features.linkOnPaste) {\n            this.editor.registerPlugin(linkifyPlugin());\n        }\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance for initializing editor component');\n        }\n        this.registerPlugins();\n        this.renderer.appendChild(this.ngxEditor.nativeElement, this.editor.view.dom);\n        this.editor.valueChanges\n            .pipe(takeUntil(this.unsubscribe))\n            .subscribe((jsonDoc) => {\n            this.handleChange(jsonDoc);\n        });\n    }\n    ngOnChanges(changes) {\n        if (changes['placeholder'] && !changes['placeholder'].isFirstChange()) {\n            this.setPlaceholder(changes['placeholder'].currentValue);\n        }\n    }\n    ngOnDestroy() {\n        this.unsubscribe.next();\n        this.unsubscribe.complete();\n    }\n}\nNgxEditorComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorComponent, deps: [{ token: i0.Renderer2 }, { token: i0.Injector }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nNgxEditorComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: NgxEditorComponent, selector: \"ngx-editor\", inputs: { editor: \"editor\", outputFormat: \"outputFormat\", placeholder: \"placeholder\" }, outputs: { focusOut: \"focusOut\", focusIn: \"focusIn\" }, providers: [{\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => NgxEditorComponent),\n            multi: true,\n        }], viewQueries: [{ propertyName: \"ngxEditor\", first: true, predicate: [\"ngxEditor\"], descendants: true, static: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"], encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor', providers: [{\n                            provide: NG_VALUE_ACCESSOR,\n                            useExisting: forwardRef(() => NgxEditorComponent),\n                            multi: true,\n                        }], encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"NgxEditor\\\" #ngxEditor>\\n  <ng-content></ng-content>\\n</div>\\n\", styles: [\".NgxEditor{background:white;color:#000;background-clip:padding-box;border-radius:4px;border:1px solid rgba(0,0,0,.2);position:relative}.NgxEditor--Disabled{opacity:.5;pointer-events:none}.NgxEditor__Placeholder:before{color:#6c757d;opacity:1;-webkit-user-select:none;user-select:none;position:absolute;cursor:text;content:attr(data-placeholder)}.NgxEditor__Placeholder[data-align=right]:before{position:relative}.NgxEditor__Content{padding:8px;white-space:pre-wrap;outline:none;font-variant-ligatures:none;font-feature-settings:\\\"liga\\\" 0,none}.NgxEditor__Content p{margin:0 0 10px}.NgxEditor__Content blockquote{padding-left:16px;border-left:3px solid #ddd;margin-left:0;margin-right:0}.NgxEditor__Content--Disabled{-webkit-user-select:none;user-select:none;pointer-events:none}.NgxEditor__Wrapper{border:1px solid rgba(0,0,0,.4);border-radius:4px}.NgxEditor__Wrapper .NgxEditor__MenuBar{border-top-left-radius:4px;border-top-right-radius:4px;border-bottom:1px solid rgba(0,0,0,.2)}.NgxEditor__Wrapper .NgxEditor{border-top-left-radius:0;border-top-right-radius:0;border:none}.NgxEditor__MenuBar{display:flex;flex-wrap:wrap;padding:3px;cursor:default;background-color:#fff}.NgxEditor__MenuItem{border-radius:2px;display:flex;align-items:center;justify-content:center;position:relative;flex-shrink:0}.NgxEditor__MenuItem:hover{background-color:#f1f1f1}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon{height:30px;width:30px;transition:.3s ease-in-out}.NgxEditor__MenuItem.NgxEditor__MenuItem--Icon+.NgxEditor__MenuItem--Icon{margin-left:2px}.NgxEditor__MenuItem .NgxEditor__MenuItem--IconContainer{display:flex;height:100%;width:100%;align-items:center;justify-content:center}.NgxEditor__MenuItem.NgxEditor__MenuItem--Text{padding:0 5px}.NgxEditor__MenuItem.NgxEditor__MenuItem--Active,.NgxEditor__MenuItem .NgxEditor__MenuItem--Active{background-color:#e8f0fe;color:#1a73e8}.NgxEditor__Dropdown{min-width:64px;position:relative;display:flex;align-items:center;flex-shrink:0}.NgxEditor__Dropdown:hover{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text{display:flex;align-items:center;justify-content:center;padding:0 5px;height:100%;width:100%}.NgxEditor__Dropdown .NgxEditor__Dropdown--Text:after{display:inline-block;content:\\\"\\\";margin-left:24px;vertical-align:4px;border-top:4px solid;border-right:4px solid transparent;border-bottom:0;border-left:4px solid transparent}.NgxEditor__Dropdown .NgxEditor__Dropdown--DropdownMenu{position:absolute;left:0;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;width:100%;top:32px}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item{padding:8px;white-space:nowrap;color:inherit}.NgxEditor__Dropdown .NgxEditor__Dropdown--Item:hover{background-color:#ececec}.NgxEditor__Dropdown .NgxEditor__Dropdown--Selected,.NgxEditor__Dropdown .NgxEditor__Dropdown--Open{color:#1a73e8;background-color:#e8f0fe}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active{background-color:#f1f1f1}.NgxEditor__Dropdown .NgxEditor__Dropdown--Active:hover{background-color:#e7e7e7}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--DropdownMenu{top:unset;bottom:32px}.NgxEditor__MenuBar--Reverse .NgxEditor__Dropdown--Text:after{transform:rotate(180deg)}.NgxEditor__MenuBar--Reverse .NgxEditor__Popup{top:unset;bottom:32px}.NgxEditor__Popup{position:absolute;top:32px;box-shadow:#3c404326 0 2px 6px 2px;border-radius:4px;background-color:#fff;z-index:10;min-width:192px;padding:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup{margin-bottom:8px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup label{margin-bottom:3px}.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=text],.NgxEditor__Popup .NgxEditor__Popup--FormGroup input[type=url]{padding:2px 4px}.NgxEditor__Popup .NgxEditor__Popup--Col{display:flex;flex-direction:column;position:relative}.NgxEditor__Popup .NgxEditor__Popup--Label{font-size:85%}.NgxEditor__Seperator{border-left:1px solid #ccc;margin:0 5px}.NgxEditor__HelpText{font-size:80%}.NgxEditor__HelpText.NgxEditor__HelpText--Error{color:red}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.Renderer2 }, { type: i0.Injector }, { type: i0.ElementRef }]; }, propDecorators: { ngxEditor: [{\n                type: ViewChild,\n                args: ['ngxEditor', { static: true }]\n            }], editor: [{\n                type: Input\n            }], outputFormat: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], focusOut: [{\n                type: Output\n            }], focusIn: [{\n                type: Output\n            }] } });\n\nclass MenuService {\n    constructor() {\n        this.customMenuRefChange = new Subject();\n    }\n    setCustomMenuRef(c) {\n        this.customMenuRefChange.next(c);\n    }\n}\nMenuService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMenuService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nvar bold = `\n  <path d=\"M15.6 10.79c.97-.67 1.65-1.77 1.65-2.79 0-2.26-1.75-4-4-4H7v14h7.04c2.09 0 3.71-1.7 3.71-3.79 0-1.52-.86-2.82-2.15-3.42zM10 6.5h3c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5h-3v-3zm3.5 9H10v-3h3.5c.83 0 1.5.67 1.5 1.5s-.67 1.5-1.5 1.5z\" />\n`;\n\nvar italic = `\n  <path d=\"M10 4v3h2.21l-3.42 8H6v3h8v-3h-2.21l3.42-8H18V4z\" />\n`;\n\nvar code = `\n<path d=\"M9.4 16.6L4.8 12l4.6-4.6L8 6l-6 6 6 6 1.4-1.4zm5.2 0l4.6-4.6-4.6-4.6L16 6l6 6-6 6-1.4-1.4z\"/>\n`;\n\nvar underline = `\n<path d=\"M12 17c3.31 0 6-2.69 6-6V3h-2.5v8c0 1.93-1.57 3.5-3.5 3.5S8.5 12.93 8.5 11V3H6v8c0 3.31 2.69 6 6 6zm-7 2v2h14v-2H5z\"/>\n`;\n\nvar strike = `\n<path d=\"M6.85,7.08C6.85,4.37,9.45,3,12.24,3c1.64,0,3,0.49,3.9,1.28c0.77,0.65,1.46,1.73,1.46,3.24h-3.01 c0-0.31-0.05-0.59-0.15-0.85c-0.29-0.86-1.2-1.28-2.25-1.28c-1.86,0-2.34,1.02-2.34,1.7c0,0.48,0.25,0.88,0.74,1.21 C10.97,8.55,11.36,8.78,12,9H7.39C7.18,8.66,6.85,8.11,6.85,7.08z M21,12v-2H3v2h9.62c1.15,0.45,1.96,0.75,1.96,1.97 c0,1-0.81,1.67-2.28,1.67c-1.54,0-2.93-0.54-2.93-2.51H6.4c0,0.55,0.08,1.13,0.24,1.58c0.81,2.29,3.29,3.3,5.67,3.3 c2.27,0,5.3-0.89,5.3-4.05c0-0.3-0.01-1.16-0.48-1.94H21V12z\"/>\n`;\n\nvar orderedList = `\n<path d=\"M2 17h2v.5H3v1h1v.5H2v1h3v-4H2v1zm1-9h1V4H2v1h1v3zm-1 3h1.8L2 13.1v.9h3v-1H3.2L5 10.9V10H2v1zm5-6v2h14V5H7zm0 14h14v-2H7v2zm0-6h14v-2H7v2z\"/>\n`;\n\nvar bulletList = `\n<path d=\"M4 10.5c-.83 0-1.5.67-1.5 1.5s.67 1.5 1.5 1.5 1.5-.67 1.5-1.5-.67-1.5-1.5-1.5zm0-6c-.83 0-1.5.67-1.5 1.5S3.17 7.5 4 7.5 5.5 6.83 5.5 6 4.83 4.5 4 4.5zm0 12c-.83 0-1.5.68-1.5 1.5s.68 1.5 1.5 1.5 1.5-.68 1.5-1.5-.67-1.5-1.5-1.5zM7 19h14v-2H7v2zm0-6h14v-2H7v2zm0-8v2h14V5H7z\"/>\n`;\n\nvar quote = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M6 17h3l2-4V7H5v6h3zm8 0h3l2-4V7h-6v6h3z\"/>\n`;\n\nvar link = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"/>\n`;\n\nvar unlink = `\n<path d=\"M17 7h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1 0 1.43-.98 2.63-2.31 2.98l1.46 1.46C20.88 15.61 22 13.95 22 12c0-2.76-2.24-5-5-5zm-1 4h-2.19l2 2H16zM2 4.27l3.11 3.11C3.29 8.12 2 9.91 2 12c0 2.76 2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1 0-1.59 1.21-2.9 2.76-3.07L8.73 11H8v2h2.73L13 15.27V17h1.73l4.01 4L20 19.74 3.27 3 2 4.27z\"/>\n`;\n\nvar image = `\n<path d=\"M21 19V5c0-1.1-.9-2-2-2H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2zM8.5 13.5l2.5 3.01L14.5 12l4.5 6H5l3.5-4.5z\"/>\n`;\n\nvar alignLeft = `\n<path d=\"M15 15H3v2h12v-2zm0-8H3v2h12V7zM3 13h18v-2H3v2zm0 8h18v-2H3v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignCenter = `\n<path d=\"M7 15v2h10v-2H7zm-4 6h18v-2H3v2zm0-8h18v-2H3v2zm4-6v2h10V7H7zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignRight = `\n<path d=\"M3 21h18v-2H3v2zm6-4h12v-2H9v2zm-6-4h18v-2H3v2zm6-4h12V7H9v2zM3 3v2h18V3H3z\"/>\n`;\n\nvar alignJustify = `\n<path d=\"M3 21h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18v-2H3v2zm0-4h18V7H3v2zm0-6v2h18V3H3z\"/>\n`;\n\nvar textColor = `\n<path d=\"M2,20h20v4H2V20z M5.49,17h2.42l1.27-3.58h5.65L16.09,17h2.42L13.25,3h-2.5L5.49,17z M9.91,11.39l2.03-5.79h0.12l2.03,5.79 H9.91z\"/>\n`;\n\nvar colorFill = `\n<path d=\"M16.56,8.94L7.62,0L6.21,1.41l2.38,2.38L3.44,8.94c-0.59,0.59-0.59,1.54,0,2.12l5.5,5.5C9.23,16.85,9.62,17,10,17 s0.77-0.15,1.06-0.44l5.5-5.5C17.15,10.48,17.15,9.53,16.56,8.94z M5.21,10L10,5.21L14.79,10H5.21z M19,11.5c0,0-2,2.17-2,3.5 c0,1.1,0.9,2,2,2s2-0.9,2-2C21,13.67,19,11.5,19,11.5z M2,20h20v4H2V20z\"/>\n`;\n\nvar horizontalRule = `\n  <g>\n    <rect fill=\"none\" fill-rule=\"evenodd\" height=\"24\" width=\"24\"/>\n    <rect fill-rule=\"evenodd\" height=\"2\" width=\"16\" x=\"4\" y=\"11\"/>\n  </g>\n`;\n\nvar formatClear = `\n<path d=\"M0 0h24v24H0z\" fill=\"none\"/><path d=\"M3.27 5L2 6.27l6.97 6.97L6.5 19h3l1.57-3.66L16.73 21 18 19.73 3.55 5.27 3.27 5zM6 5v.18L8.82 8h2.4l-.72 1.68 2.1 2.1L14.21 8H20V5H6z\"/>\n`;\n\n// Icons source: https://material.io/\nconst DEFAULT_ICON_HEIGHT = 20;\nconst DEFAULT_ICON_WIDTH = 20;\nconst DEFAULT_ICON_FILL = 'currentColor';\nconst icons = {\n    bold,\n    italic,\n    code,\n    underline,\n    strike,\n    ordered_list: orderedList,\n    bullet_list: bulletList,\n    blockquote: quote,\n    link,\n    unlink,\n    image,\n    align_left: alignLeft,\n    align_center: alignCenter,\n    align_right: alignRight,\n    align_justify: alignJustify,\n    text_color: textColor,\n    color_fill: colorFill,\n    horizontal_rule: horizontalRule,\n    format_clear: formatClear,\n};\nclass Icon {\n    static get(name, fill = DEFAULT_ICON_FILL) {\n        const path = icons[name] || '<path></path>';\n        return `\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"0 0 24 24\"\n        fill=${fill}\n        height=${DEFAULT_ICON_HEIGHT}\n        width=${DEFAULT_ICON_WIDTH}\n      >\n        ${path}\n      </svg>\n    `;\n    }\n}\n\nclass Mark {\n    constructor(name) {\n        this.name = name;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return applyMark(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return toggleMark(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Blockqote {\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes['blockquote'];\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return lift(state, dispatch);\n            }\n            return wrapIn(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.nodes['blockquote'];\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass HorizontalRule {\n    insert() {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.nodes['horizontal_rule'];\n            if (!type) {\n                return false;\n            }\n            dispatch(tr.replaceSelectionWith(type.create()).scrollIntoView());\n            return true;\n        };\n    }\n    canExecute(state) {\n        return canInsert(state, state.schema.nodes['horizontal_rule']);\n    }\n}\n\nclass ListItem {\n    constructor(isBulletList = false) {\n        this.isBulletList = false;\n        this.isBulletList = isBulletList;\n    }\n    getType(schema) {\n        return this.isBulletList ? schema.nodes['bullet_list'] : schema.nodes['ordered_list'];\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = this.getType(schema);\n            if (!type) {\n                return false;\n            }\n            if (this.isActive(state)) {\n                return liftListItem(schema.nodes['list_item'])(state, dispatch);\n            }\n            return wrapInList(type)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = this.getType(schema);\n        if (!type) {\n            return false;\n        }\n        return isNodeActive(state, type);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass Heading {\n    constructor(level) {\n        this.level = level;\n    }\n    apply() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.nodes['heading'];\n            if (!type) {\n                return false;\n            }\n            return setBlockType(type)(state, dispatch);\n        };\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.nodes['heading'];\n            if (!type) {\n                return false;\n            }\n            const nodePos = selection.$from.before(1);\n            const node = doc.nodeAt(nodePos);\n            const attrs = node?.attrs ?? {};\n            if (this.isActive(state)) {\n                return setBlockType(schema.nodes['paragraph'], attrs)(state, dispatch);\n            }\n            return setBlockType(type, { ...attrs, level: this.level })(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const nodesInSelection = getSelectionNodes(state);\n        const type = schema.nodes['heading'];\n        if (!type) {\n            return false;\n        }\n        const supportedNodes = [\n            type,\n            schema.nodes['text'],\n            schema.nodes['blockquote'],\n        ];\n        // heading is a text node\n        // don't mark as active when it has more nodes\n        const nodes = nodesInSelection.filter((node) => {\n            return supportedNodes.includes(node.type);\n        });\n        const acitveNode = nodes.find((node) => {\n            return node.attrs['level'] === this.level;\n        });\n        return Boolean(acitveNode);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nclass TextAlign {\n    constructor(align) {\n        this.align = align;\n    }\n    toggle() {\n        return (state, dispatch) => {\n            const { doc, selection, tr, schema } = state;\n            const { from, to } = selection;\n            let applicable = false;\n            doc.nodesBetween(from, to, (node, pos) => {\n                const nodeType = node.type;\n                if ([schema.nodes['paragraph'], schema.nodes['heading']].includes(nodeType)) {\n                    applicable = true;\n                    tr.setNodeMarkup(pos, nodeType, { ...node.attrs, align: this.align });\n                }\n                return true;\n            });\n            if (!applicable) {\n                return false;\n            }\n            if (tr.docChanged) {\n                dispatch?.(tr);\n            }\n            return true;\n        };\n    }\n    isActive(state) {\n        const nodes = getSelectionNodes(state);\n        const active = nodes.find((node) => {\n            return node.attrs['align'] === this.align;\n        });\n        return Boolean(active);\n    }\n    canExecute(state) {\n        return this.toggle()(state);\n    }\n}\n\nconst defaultOptions = {\n    strict: true,\n};\nclass Link$1 {\n    update(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection } = state;\n            const type = schema.marks['link'];\n            if (!type) {\n                return false;\n            }\n            if (selection.empty) {\n                return false;\n            }\n            return toggleMark(type, attrs)(state, dispatch);\n        };\n    }\n    insert(text, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr } = state;\n            const type = schema.marks['link'];\n            if (!type) {\n                return false;\n            }\n            const linkAttrs = {\n                href: attrs.href,\n                title: attrs.title ?? text,\n                target: attrs.target ?? '_blank',\n            };\n            const node = schema.text(text, [schema.marks['link'].create(linkAttrs)]);\n            tr.replaceSelectionWith(node, false)\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state, options = defaultOptions) {\n        if (options.strict) {\n            return true;\n        }\n        const { schema } = state;\n        const type = schema.marks['link'];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    remove(state, dispatch) {\n        return removeLink()(state, dispatch);\n    }\n    canExecute(state) {\n        const testAttrs = {\n            href: '',\n        };\n        return this.insert('Exec', testAttrs)(state) || this.update(testAttrs)(state);\n    }\n}\n\nclass Image$1 {\n    insert(src, attrs) {\n        return (state, dispatch) => {\n            const { schema, tr, selection } = state;\n            const type = schema.nodes['image'];\n            if (!type) {\n                return false;\n            }\n            const imageAttrs = {\n                width: null,\n                src,\n                ...attrs,\n            };\n            if (!imageAttrs.width && selection instanceof NodeSelection && selection.node.type === type) {\n                imageAttrs.width = selection.node.attrs['width'];\n            }\n            tr.replaceSelectionWith(type.createAndFill(imageAttrs));\n            const resolvedPos = tr.doc.resolve(tr.selection.anchor - tr.selection.$anchor.nodeBefore.nodeSize);\n            tr\n                .setSelection(new NodeSelection(resolvedPos))\n                .scrollIntoView();\n            if (tr.docChanged) {\n                dispatch?.(tr);\n                return true;\n            }\n            return false;\n        };\n    }\n    isActive(state) {\n        const { selection } = state;\n        if (selection instanceof NodeSelection) {\n            return selection.node.type.name === 'image';\n        }\n        return false;\n    }\n}\n\nclass TextColor$1 {\n    constructor(name, attrName = 'color') {\n        this.name = name;\n        this.attrName = attrName;\n    }\n    apply(attrs) {\n        return (state, dispatch) => {\n            const { schema, selection, doc } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            const { from, to, empty } = selection;\n            if (!empty && (from + 1 === to)) {\n                const node = doc.nodeAt(from);\n                if (node?.isAtom && !node.isText && node.isLeaf) {\n                    // An atomic node (e.g. Image) is selected.\n                    return false;\n                }\n            }\n            return applyMark(type, attrs)(state, dispatch);\n        };\n    }\n    isActive(state) {\n        const { schema } = state;\n        const type = schema.marks[this.name];\n        if (!type) {\n            return false;\n        }\n        return isMarkActive(state, type);\n    }\n    getActiveColors(state) {\n        if (!this.isActive(state)) {\n            return [];\n        }\n        const { schema } = state;\n        const marks = getSelectionMarks(state);\n        const colors = marks\n            .filter((mark) => mark.type === schema.marks[this.name])\n            .map((mark) => {\n            return mark.attrs[this.attrName];\n        })\n            .filter(Boolean);\n        return colors;\n    }\n    remove() {\n        return (state, dispatch) => {\n            const { schema } = state;\n            const type = schema.marks[this.name];\n            if (!type) {\n                return false;\n            }\n            return removeMark(type)(state, dispatch);\n        };\n    }\n    canExecute(state) {\n        const attrs = this.name === 'text_color' ? { color: '' } : { backgroundColor: '' };\n        return this.apply(attrs)(state);\n    }\n}\n\nconst SAFE_MARKS = ['link'];\nclass FormatClear {\n    insert() {\n        return (state, dispatch) => {\n            const { tr } = state;\n            const { ranges, empty } = tr.selection;\n            if (empty) {\n                return true;\n            }\n            Object.entries(state.schema.marks).forEach(([markType, mark]) => {\n                if (SAFE_MARKS.includes(markType)) {\n                    return;\n                }\n                ranges.forEach((range) => {\n                    tr.removeMark(range.$from.pos, range.$to.pos, mark);\n                });\n            });\n            dispatch(tr);\n            return true;\n        };\n    }\n    canExecute() {\n        return true;\n    }\n}\n\nconst STRONG = new Mark('strong');\nconst EM = new Mark('em');\nconst CODE = new Mark('code');\nconst UNDERLINE = new Mark('u');\nconst STRIKE = new Mark('s');\nconst BLOCKQUOTE = new Blockqote();\nconst HORIZONTAL_RULE = new HorizontalRule();\nconst FORMAT_CLEAR = new FormatClear();\nconst UL = new ListItem(true);\nconst OL = new ListItem(false);\nconst H1 = new Heading(1);\nconst H2 = new Heading(2);\nconst H3 = new Heading(3);\nconst H4 = new Heading(4);\nconst H5 = new Heading(5);\nconst H6 = new Heading(6);\nconst ALIGN_LEFT = new TextAlign('left');\nconst ALIGN_CENTER = new TextAlign('center');\nconst ALIGN_RIGHT = new TextAlign('right');\nconst ALIGN_JUSTIFY = new TextAlign('justify');\nconst LINK = new Link$1();\nconst IMAGE = new Image$1();\nconst TEXT_COLOR = new TextColor$1('text_color', 'color');\nconst TEXT_BACKGROUND_COLOR = new TextColor$1('text_background_color', 'backgroundColor');\n\nconst ToggleCommands = {\n    bold: STRONG,\n    italic: EM,\n    code: CODE,\n    underline: UNDERLINE,\n    strike: STRIKE,\n    blockquote: BLOCKQUOTE,\n    bullet_list: UL,\n    ordered_list: OL,\n    h1: H1,\n    h2: H2,\n    h3: H3,\n    h4: H4,\n    h5: H5,\n    h6: H6,\n    align_left: ALIGN_LEFT,\n    align_center: ALIGN_CENTER,\n    align_right: ALIGN_RIGHT,\n    align_justify: ALIGN_JUSTIFY,\n};\nconst InsertCommands = {\n    horizontal_rule: HORIZONTAL_RULE,\n    format_clear: FORMAT_CLEAR,\n};\nconst Link = LINK;\nconst Image = IMAGE;\nconst TextColor = TEXT_COLOR;\nconst TextBackgroundColor = TEXT_BACKGROUND_COLOR;\n\nconst defaults = {\n    // menu\n    bold: 'Bold',\n    italic: 'Italic',\n    code: 'Code',\n    underline: 'Underline',\n    strike: 'Strike',\n    blockquote: 'Blockquote',\n    bullet_list: 'Bullet List',\n    ordered_list: 'Ordered List',\n    heading: 'Heading',\n    h1: 'Header 1',\n    h2: 'Header 2',\n    h3: 'Header 3',\n    h4: 'Header 4',\n    h5: 'Header 5',\n    h6: 'Header 6',\n    align_left: 'Left Align',\n    align_center: 'Center Align',\n    align_right: 'Right Align',\n    align_justify: 'Justify',\n    text_color: 'Text Color',\n    background_color: 'Background Color',\n    horizontal_rule: 'Horizontal rule',\n    format_clear: 'Clear Formatting',\n    insertLink: 'Insert Link',\n    removeLink: 'Remove Link',\n    insertImage: 'Insert Image',\n    // pupups, forms, others...\n    url: 'URL',\n    text: 'Text',\n    openInNewTab: 'Open in new tab',\n    insert: 'Insert',\n    altText: 'Alt Text',\n    title: 'Title',\n    remove: 'Remove',\n};\nclass Locals {\n    constructor(newLocals = {}) {\n        this.locals = defaults;\n        this.get = (key) => {\n            return this.locals[key] ?? '';\n        };\n        this.locals = { ...defaults, ...newLocals };\n    }\n}\n\nclass NgxEditorServiceConfig {\n    constructor() {\n        this.locals = {};\n    }\n}\nNgxEditorServiceConfig.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorServiceConfig, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorServiceConfig.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorServiceConfig, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorServiceConfig, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }] });\n\nclass NgxEditorService {\n    constructor(config) {\n        this.config = config;\n    }\n    get locals() {\n        return new Locals(this.config.locals);\n    }\n}\nNgxEditorService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorService, deps: [{ token: NgxEditorServiceConfig, optional: true }], target: i0.ɵɵFactoryTarget.Injectable });\nNgxEditorService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root',\n                }]\n        }], ctorParameters: function () { return [{ type: NgxEditorServiceConfig, decorators: [{\n                    type: Optional\n                }] }]; } });\nconst provideMyServiceOptions = (config) => {\n    return {\n        locals: config.locals ?? {},\n    };\n};\n\nclass SanitizeHtmlPipe {\n    constructor(sanitizer) {\n        this.sanitizer = sanitizer;\n    }\n    transform(value) {\n        return this.sanitizer.bypassSecurityTrustHtml(value);\n    }\n}\nSanitizeHtmlPipe.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: SanitizeHtmlPipe, deps: [{ token: i1.DomSanitizer }], target: i0.ɵɵFactoryTarget.Pipe });\nSanitizeHtmlPipe.ɵpipe = i0.ɵɵngDeclarePipe({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: SanitizeHtmlPipe, name: \"sanitizeHtml\" });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: SanitizeHtmlPipe, decorators: [{\n            type: Pipe,\n            args: [{\n                    name: 'sanitizeHtml',\n                }]\n        }], ctorParameters: function () { return [{ type: i1.DomSanitizer }]; } });\n\nclass ToggleCommandComponent {\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.isActive = false;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = ToggleCommands[this.name];\n            this.isActive = command.isActive(state);\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    get name() {\n        return this.toolbarItem;\n    }\n    toggle(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = ToggleCommands[this.name];\n        command.toggle()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = Icon.get(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nToggleCommandComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ToggleCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nToggleCommandComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: { toolbarItem: \"toolbarItem\" }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ToggleCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-toggle-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive\\\"\\n  [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\" (mousedown)=\\\"toggle($event)\\\"\\n  [title]=\\\"getTitle(name)\\\">\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }] } });\n\nclass InsertCommandComponent {\n    constructor(ngxeService, menuService) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.disabled = false;\n        this.update = (view) => {\n            const { state } = view;\n            const command = InsertCommands[this.name];\n            this.disabled = !command.canExecute(state);\n        };\n    }\n    get name() {\n        return this.toolbarItem;\n    }\n    insert(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        const command = InsertCommands[this.name];\n        command.insert()(state, dispatch);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    ngOnInit() {\n        this.html = Icon.get(this.name);\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nInsertCommandComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: InsertCommandComponent, deps: [{ token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nInsertCommandComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: { toolbarItem: \"toolbarItem\" }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name)\\\">\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: InsertCommandComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-insert-command', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor--Disabled]=\\\"disabled\\\" [innerHTML]=\\\"html | sanitizeHtml\\\"\\n  (mousedown)=\\\"insert($event)\\\" [title]=\\\"getTitle(name)\\\">\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { toolbarItem: [{\n                type: Input\n            }] } });\n\nclass LinkComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.canExecute = true;\n        this.setText = () => {\n            const { state: { selection, doc } } = this.editorView;\n            const { empty, from, to } = selection;\n            const selectedText = !empty ? doc.textBetween(from, to) : '';\n            if (selectedText) {\n                this.text.patchValue(selectedText);\n                this.text.disable();\n            }\n        };\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Link.isActive(state, { strict: false });\n            this.canExecute = Link.canExecute(state);\n        };\n    }\n    get icon() {\n        return Icon.get(this.isActive ? 'unlink' : 'link');\n    }\n    get title() {\n        return this.ngxeService.locals.get(this.isActive ? 'removeLink' : 'insertLink');\n    }\n    get href() {\n        return this.form.get('href');\n    }\n    get text() {\n        return this.form.get('text');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            href: '',\n            text: '',\n            openInNewTab: true,\n        });\n        this.text.enable();\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.isActive) {\n            Link.remove(state, dispatch);\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.setText();\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { text, href, openInNewTab } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const { selection } = state;\n        const attrs = {\n            title: href,\n            href,\n            target: openInNewTab ? '_blank' : '_self',\n        };\n        if (selection.empty) {\n            Link.insert(text, attrs)(state, dispatch);\n            this.editorView.focus();\n        }\n        else {\n            Link.update(attrs)(state, dispatch);\n        }\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.form = new FormGroup({\n            href: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern(this.menuService.editor.linkValidationPattern),\n            ]),\n            text: new FormControl('', [Validators$1.required]),\n            openInNewTab: new FormControl(true),\n        });\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nLinkComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: LinkComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nLinkComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: LinkComponent, selector: \"ngx-link\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.CheckboxControlValueAccessor, selector: \"input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: LinkComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-link', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"href\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"href.touched && href.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ href.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('text')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"text\\\" autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"text.touched && text.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ text.errors?.['required'] && 'This is required' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label>\\n          <input type=\\\"checkbox\\\" formControlName=\\\"openInNewTab\\\" />\\n          {{getLabel('openInNewTab')}}\\n        </label>\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass DropdownComponent {\n    constructor(ngxeService, menuService, el) {\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.el = el;\n        this.isDropdownOpen = false;\n        this.disabledItems = [];\n        this.update = (view) => {\n            const { state } = view;\n            this.disabledItems = [];\n            const activeItems = [];\n            this.items.forEach((item) => {\n                const command = ToggleCommands[item];\n                const isActive = command.isActive(state);\n                if (isActive) {\n                    activeItems.push(item);\n                }\n                if (!command.canExecute(state)) {\n                    this.disabledItems.push(item);\n                }\n            });\n            if (activeItems.length === 1) {\n                [this.activeItem] = activeItems;\n            }\n            else {\n                this.activeItem = null;\n            }\n        };\n    }\n    get isSelected() {\n        return Boolean(this.activeItem || this.isDropdownOpen);\n    }\n    get isDropdownDisabled() {\n        return this.disabledItems.length === this.items.length;\n    }\n    onDocumentClick(target) {\n        if (!this.el.nativeElement.contains(target) && this.isDropdownOpen) {\n            this.isDropdownOpen = false;\n        }\n    }\n    getName(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    toggleDropdown(e) {\n        e.preventDefault();\n        this.isDropdownOpen = !this.isDropdownOpen;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, item) {\n        e.preventDefault();\n        // consider only left click\n        if (e.button !== 0) {\n            return;\n        }\n        const command = ToggleCommands[item];\n        const { state, dispatch } = this.editorView;\n        command.toggle()(state, dispatch);\n        this.isDropdownOpen = false;\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nDropdownComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DropdownComponent, deps: [{ token: NgxEditorService }, { token: MenuService }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nDropdownComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: { group: \"group\", items: \"items\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event.target)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: DropdownComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-dropdown', template: \"<div class=\\\"NgxEditor__Dropdown--Text\\\" [class.NgxEditor__Dropdown--Selected]=\\\"isSelected\\\"\\n  [class.NgxEditor--Disabled]=\\\"isDropdownDisabled\\\" (mousedown)=\\\"toggleDropdown($event)\\\">\\n  {{getName(activeItem || group)}}\\n</div>\\n\\n<div class=\\\"NgxEditor__Dropdown--DropdownMenu\\\" *ngIf=\\\"isDropdownOpen\\\">\\n  <div class=\\\"NgxEditor__Dropdown--Item\\\" *ngFor=\\\"let item of items; trackBy: trackByIndex\\\"\\n    (mousedown)=\\\"onClick($event, item)\\\"\\n    [ngClass]=\\\"{'NgxEditor__Dropdown--Active': item === activeItem, 'NgxEditor--Disabled':disabledItems.includes(item)}\\\">\\n    {{getName(item)}}\\n  </div>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: NgxEditorService }, { type: MenuService }, { type: i0.ElementRef }]; }, propDecorators: { group: [{\n                type: Input\n            }], items: [{\n                type: Input\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event.target']]\n            }] } });\n\nclass ImageComponent {\n    constructor(el, ngxeService, menuService) {\n        this.el = el;\n        this.ngxeService = ngxeService;\n        this.menuService = menuService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.form = new FormGroup({\n            src: new FormControl('', [\n                Validators$1.required,\n                Validators$1.pattern('(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)'),\n            ]),\n            alt: new FormControl(''),\n            title: new FormControl(''),\n        });\n        this.update = (view) => {\n            const { state } = view;\n            this.isActive = Image.isActive(state);\n        };\n    }\n    get icon() {\n        return Icon.get('image');\n    }\n    get src() {\n        return this.form.get('src');\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hideForm();\n        }\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    hideForm() {\n        this.showPopup = false;\n        this.form.reset({\n            src: '',\n            alt: '',\n            title: '',\n        });\n    }\n    onMouseDown(e) {\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n        if (this.showPopup) {\n            this.fillForm();\n        }\n    }\n    fillForm() {\n        const { state } = this.editorView;\n        const { selection } = state;\n        if (selection instanceof NodeSelection && this.isActive) {\n            const { src, alt = '', title = '' } = selection.node.attrs;\n            this.form.setValue({\n                src,\n                alt,\n                title,\n            });\n        }\n    }\n    insertLink(e) {\n        e.preventDefault();\n        const { src, alt, title } = this.form.getRawValue();\n        const { dispatch, state } = this.editorView;\n        const attrs = {\n            alt,\n            title,\n        };\n        Image.insert(src, attrs)(state, dispatch);\n        this.editorView.focus();\n        this.hideForm();\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nImageComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ImageComponent, deps: [{ token: i0.ElementRef }, { token: NgxEditorService }, { token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nImageComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: ImageComponent, selector: \"ngx-image\", host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i4.ɵNgNoValidate, selector: \"form:not([ngNoForm]):not([ngNativeValidate])\" }, { kind: \"directive\", type: i4.DefaultValueAccessor, selector: \"input:not([type=checkbox])[formControlName],textarea[formControlName],input:not([type=checkbox])[formControl],textarea[formControl],input:not([type=checkbox])[ngModel],textarea[ngModel],[ngDefaultControl]\" }, { kind: \"directive\", type: i4.NgControlStatus, selector: \"[formControlName],[ngModel],[formControl]\" }, { kind: \"directive\", type: i4.NgControlStatusGroup, selector: \"[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]\" }, { kind: \"directive\", type: i4.FormGroupDirective, selector: \"[formGroup]\", inputs: [\"formGroup\"], outputs: [\"ngSubmit\"], exportAs: [\"ngForm\"] }, { kind: \"directive\", type: i4.FormControlName, selector: \"[formControlName]\", inputs: [\"formControlName\", \"disabled\", \"ngModel\"], outputs: [\"ngModelChange\"] }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ImageComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-image', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"onMouseDown($event)\\\" [title]=\\\"getLabel('insertImage')\\\">\\n</div>\\n\\n<!-- popup -->\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <form class=\\\"NgxEditor__Popup--Form\\\" [formGroup]=\\\"form\\\" (ngSubmit)=\\\"insertLink($event)\\\">\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('url')}}</label>\\n        <input type=\\\"href\\\" id=\\\"href\\\" formControlName=\\\"src\\\" autofocus autocomplete=\\\"off\\\" />\\n        <div *ngIf=\\\"src.touched && src.invalid\\\" class=\\\"NgxEditor__HelpText NgxEditor__HelpText--Error\\\">\\n          {{ src.errors?.['pattern'] && 'Please enter valid url.' }}\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('altText')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"alt\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <div class=\\\"NgxEditor__Popup--FormGroup\\\">\\n      <div class=\\\"NgxEditor__Popup--Col\\\">\\n        <label class=\\\"NgxEditor__Popup--Label\\\">{{getLabel('title')}}</label>\\n        <input type=\\\"text\\\" formControlName=\\\"title\\\" autocomplete=\\\"off\\\" />\\n      </div>\\n    </div>\\n\\n    <button type=\\\"submit\\\" [disabled]=\\\"!form.valid || !form.dirty\\\">{{getLabel('insert')}}</button>\\n\\n  </form>\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: NgxEditorService }, { type: MenuService }]; }, propDecorators: { onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nclass ColorPickerComponent {\n    constructor(el, menuService, ngxeService) {\n        this.el = el;\n        this.menuService = menuService;\n        this.ngxeService = ngxeService;\n        this.showPopup = false;\n        this.isActive = false;\n        this.activeColors = [];\n        this.canExecute = true;\n        this.update = (view) => {\n            const { state } = view;\n            this.canExecute = this.command.canExecute(state);\n            this.isActive = this.command.isActive(state);\n            this.activeColors = [];\n            if (this.isActive) {\n                this.activeColors = this.command.getActiveColors(state);\n            }\n        };\n    }\n    get title() {\n        return this.getLabel(this.type === 'text_color' ? 'text_color' : 'background_color');\n    }\n    get icon() {\n        return Icon.get(this.type === 'text_color' ? 'text_color' : 'color_fill');\n    }\n    get command() {\n        return this.type === 'text_color' ? TextColor : TextBackgroundColor;\n    }\n    getContrastYIQ(hexcolor) {\n        const color = hexcolor.replace('#', '');\n        const r = parseInt(color.substring(0, 2), 16);\n        const g = parseInt(color.substring(2, 4), 16);\n        const b = parseInt(color.substring(4, 6), 16);\n        const yiq = ((r * 299) + (g * 587) + (b * 114)) / 1000;\n        return yiq >= 128 ? 'black' : 'white';\n    }\n    onDocumentClick(e) {\n        if (!this.el.nativeElement.contains(e.target) && this.showPopup) {\n            this.hidePopup();\n        }\n    }\n    hidePopup() {\n        this.showPopup = false;\n    }\n    togglePopup(e) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        this.showPopup = !this.showPopup;\n    }\n    remove(e) {\n        e.preventDefault();\n        const { state, dispatch } = this.editorView;\n        this.command.remove()(state, dispatch);\n        this.hidePopup();\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onColorSelect(e, color) {\n        e.preventDefault();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.editorView;\n        if (this.type === 'text_color') {\n            const attrs = { color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        else {\n            const attrs = { backgroundColor: color };\n            this.command.apply(attrs)(state, dispatch);\n        }\n        if (!this.editorView.hasFocus()) {\n            this.editorView.focus();\n        }\n        this.hidePopup();\n    }\n    getLabel(key) {\n        return this.ngxeService.locals.get(key);\n    }\n    ngOnInit() {\n        this.editorView = this.menuService.editor.view;\n        this.updateSubscription = this.menuService.editor.update.subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nColorPickerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ColorPickerComponent, deps: [{ token: i0.ElementRef }, { token: MenuService }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nColorPickerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: { presets: \"presets\", type: \"type\" }, host: { listeners: { \"document:mousedown\": \"onDocumentClick($event)\" } }, ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgStyle, selector: \"[ngStyle]\", inputs: [\"ngStyle\"] }, { kind: \"pipe\", type: SanitizeHtmlPipe, name: \"sanitizeHtml\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ColorPickerComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-color-picker', template: \"<div class=\\\"NgxEditor__MenuItem--IconContainer\\\" [class.NgxEditor__MenuItem--Active]=\\\"isActive || showPopup\\\"\\n  [class.NgxEditor--Disabled]=\\\"!canExecute\\\" [innerHTML]=\\\"icon | sanitizeHtml\\\" (mousedown)=\\\"togglePopup($event)\\\"\\n  [title]=\\\"title\\\">\\n</div>\\n\\n<div *ngIf=\\\"showPopup\\\" class=\\\"NgxEditor__Popup\\\">\\n  <div *ngFor=\\\"let colorGroup of presets; trackBy: trackByIndex\\\" class=\\\"NgxEditor__ColorContainer\\\">\\n    <button class=\\\"NgxEditor__Color\\\" *ngFor=\\\"let color of colorGroup; trackBy: trackByIndex\\\"\\n      [ngStyle]=\\\"{backgroundColor: color, color:getContrastYIQ(color)}\\\" [title]=\\\"color\\\"\\n      (mousedown)=\\\"onColorSelect($event, color)\\\"\\n      [ngClass]=\\\"{'NgxEditor__Color--Active': activeColors.includes(color)}\\\"></button>\\n  </div>\\n\\n  <button class=\\\"NgxEditor__MenuItem--Button\\\" (mousedown)=\\\"remove($event)\\\" [disabled]=\\\"!isActive\\\">\\n    {{getLabel('remove')}}\\n  </button>\\n</div>\\n\", styles: [\"@charset \\\"UTF-8\\\";.NgxEditor__Popup{width:230px}.NgxEditor__ColorContainer{display:flex;justify-content:space-between}.NgxEditor__ColorContainer+.NgxEditor__ColorContainer{margin-top:5px}.NgxEditor__Color{border:none;outline:none;border-radius:6px;width:24px;height:24px;flex-shrink:0}.NgxEditor__Color--Active:after{content:\\\"\\\\2714\\\";font-size:90%}.NgxEditor__MenuItem--Button{margin-top:5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: MenuService }, { type: NgxEditorService }]; }, propDecorators: { presets: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], onDocumentClick: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }] } });\n\nconst DEFAULT_TOOLBAR = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n    ['format_clear'],\n];\nconst TOOLBAR_MINIMAL = [\n    ['bold', 'italic'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n];\nconst TOOLBAR_FULL = [\n    ['bold', 'italic'],\n    ['code', 'blockquote'],\n    ['underline', 'strike'],\n    ['ordered_list', 'bullet_list'],\n    [{ heading: ['h1', 'h2', 'h3', 'h4', 'h5', 'h6'] }],\n    ['link', 'image'],\n    ['text_color', 'background_color'],\n    ['align_left', 'align_center', 'align_right', 'align_justify'],\n    ['horizontal_rule'],\n];\nconst DEFAULT_COLOR_PRESETS = [\n    '#b60205',\n    '#d93f0b',\n    '#fbca04',\n    '#0e8a16',\n    '#006b75',\n    '#1d76db',\n    '#0052cc',\n    '#5319e7',\n    '#e99695',\n    '#f9d0c4',\n    '#fef2c0',\n    '#c2e0c6',\n    '#bfdadc',\n    '#c5def5',\n    '#bfd4f2',\n    '#d4c5f9',\n];\nclass MenuComponent {\n    constructor(menuService) {\n        this.menuService = menuService;\n        this.toolbar = TOOLBAR_MINIMAL;\n        this.colorPresets = DEFAULT_COLOR_PRESETS;\n        this.disabled = false;\n        this.customMenuRef = null;\n        this.dropdownPlacement = 'bottom';\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'code',\n            'blockquote',\n            'ordered_list',\n            'bullet_list',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n        this.insertCommands = [\n            'horizontal_rule',\n            'format_clear',\n        ];\n        this.iconContainerClass = ['NgxEditor__MenuItem', 'NgxEditor__MenuItem--Icon'];\n        this.dropdownContainerClass = ['NgxEditor__Dropdown'];\n        this.seperatorClass = ['NgxEditor__Seperator'];\n    }\n    get presets() {\n        const col = 8;\n        const colors = [];\n        this.colorPresets.forEach((color, index) => {\n            const row = Math.floor(index / col);\n            if (!colors[row]) {\n                colors.push([]);\n            }\n            colors[row].push(color);\n        });\n        return colors;\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    isDropDown(item) {\n        if (item?.heading) {\n            return true;\n        }\n        return false;\n    }\n    getDropdownItems(item) {\n        return item;\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance to initialize menu component');\n        }\n        this.menuService.editor = this.editor;\n    }\n}\nMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuComponent, deps: [{ token: MenuService }], target: i0.ɵɵFactoryTarget.Component });\nMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: MenuComponent, selector: \"ngx-editor-menu\", inputs: { toolbar: \"toolbar\", colorPresets: \"colorPresets\", disabled: \"disabled\", editor: \"editor\", customMenuRef: \"customMenuRef\", dropdownPlacement: \"dropdownPlacement\" }, providers: [MenuService], ngImport: i0, template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\", styles: [\"\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"directive\", type: i3.NgTemplateOutlet, selector: \"[ngTemplateOutlet]\", inputs: [\"ngTemplateOutletContext\", \"ngTemplateOutlet\", \"ngTemplateOutletInjector\"] }, { kind: \"component\", type: ToggleCommandComponent, selector: \"ngx-toggle-command\", inputs: [\"toolbarItem\"] }, { kind: \"component\", type: InsertCommandComponent, selector: \"ngx-insert-command\", inputs: [\"toolbarItem\"] }, { kind: \"component\", type: LinkComponent, selector: \"ngx-link\" }, { kind: \"component\", type: DropdownComponent, selector: \"ngx-dropdown\", inputs: [\"group\", \"items\"] }, { kind: \"component\", type: ImageComponent, selector: \"ngx-image\" }, { kind: \"component\", type: ColorPickerComponent, selector: \"ngx-color-picker\", inputs: [\"presets\", \"type\"] }, { kind: \"pipe\", type: i3.KeyValuePipe, name: \"keyvalue\" }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-menu', providers: [MenuService], template: \"<div class=\\\"NgxEditor__MenuBar\\\"\\n  [ngClass]=\\\"{'NgxEditor--Disabled': disabled, 'NgxEditor__MenuBar--Reverse': dropdownPlacement === 'top'}\\\">\\n\\n  <ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n    <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n\\n      <!-- toggle icons -->\\n      <ngx-toggle-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"toggleCommands.includes(item)\\\">\\n      </ngx-toggle-command>\\n\\n      <ngx-insert-command [toolbarItem]=\\\"item\\\" [class]=\\\"iconContainerClass\\\" *ngIf=\\\"insertCommands.includes(item)\\\">\\n      </ngx-insert-command>\\n\\n      <!-- link -->\\n      <ngx-link [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'link'\\\"></ngx-link>\\n\\n      <!-- image -->\\n      <ngx-image [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'image'\\\">\\n      </ngx-image>\\n\\n      <!-- dropdown -->\\n      <ng-container *ngIf=\\\"isDropDown(item)\\\">\\n        <ngx-dropdown *ngFor=\\\"let dropdownItem of getDropdownItems(item) | keyvalue; trackBy: trackByIndex\\\"\\n          [class]=\\\"dropdownContainerClass\\\" [group]=\\\"dropdownItem.key\\\" [items]=\\\"dropdownItem.value\\\">\\n        </ngx-dropdown>\\n      </ng-container>\\n\\n      <!-- text color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'text_color'\\\" type=\\\"text_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n      <!-- background color picker -->\\n      <ngx-color-picker [class]=\\\"iconContainerClass\\\" *ngIf=\\\"item === 'background_color'\\\" type=\\\"background_color\\\"\\n        [presets]=\\\"presets\\\">\\n      </ngx-color-picker>\\n\\n      <!-- seperator -->\\n      <div [class]=\\\"seperatorClass\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n    </ng-container>\\n  </ng-container>\\n\\n  <!-- custom menu -->\\n  <ng-container *ngIf=\\\"customMenuRef\\\">\\n    <ng-container [ngTemplateOutlet]=\\\"customMenuRef\\\"></ng-container>\\n  </ng-container>\\n\\n</div>\\n\" }]\n        }], ctorParameters: function () { return [{ type: MenuService }]; }, propDecorators: { toolbar: [{\n                type: Input\n            }], colorPresets: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], editor: [{\n                type: Input\n            }], customMenuRef: [{\n                type: Input\n            }], dropdownPlacement: [{\n                type: Input\n            }] } });\n\nclass BubbleComponent {\n    constructor(sanitizeHTML, ngxeService) {\n        this.sanitizeHTML = sanitizeHTML;\n        this.ngxeService = ngxeService;\n        this.execulableItems = [];\n        this.activeItems = [];\n        this.toolbar = [\n            ['bold', 'italic', 'underline', 'strike'],\n            ['ordered_list', 'bullet_list', 'blockquote', 'code'],\n            ['align_left', 'align_center', 'align_right', 'align_justify'],\n        ];\n        this.toggleCommands = [\n            'bold',\n            'italic',\n            'underline',\n            'strike',\n            'ordered_list',\n            'bullet_list',\n            'blockquote',\n            'code',\n            'align_left',\n            'align_center',\n            'align_right',\n            'align_justify',\n        ];\n    }\n    get view() {\n        return this.editor.view;\n    }\n    getIcon(name) {\n        const icon = Icon.get(name);\n        return this.sanitizeHTML.transform(icon);\n    }\n    getTitle(name) {\n        return this.ngxeService.locals.get(name);\n    }\n    trackByIndex(index) {\n        return index;\n    }\n    onClick(e, commandName) {\n        e.preventDefault();\n        e.stopPropagation();\n        if (e.button !== 0) {\n            return;\n        }\n        const { state, dispatch } = this.view;\n        const command = ToggleCommands[commandName];\n        command.toggle()(state, dispatch);\n    }\n    update(view) {\n        this.activeItems = [];\n        this.execulableItems = [];\n        const { state } = view;\n        this.toggleCommands.forEach((toolbarItem) => {\n            const command = ToggleCommands[toolbarItem];\n            const isActive = command.isActive(state);\n            if (isActive) {\n                this.activeItems.push(toolbarItem);\n            }\n            const canExecute = command.canExecute(state);\n            if (canExecute) {\n                this.execulableItems.push(toolbarItem);\n            }\n        });\n    }\n    ngOnInit() {\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n    }\n}\nBubbleComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: BubbleComponent, deps: [{ token: SanitizeHtmlPipe }, { token: NgxEditorService }], target: i0.ɵɵFactoryTarget.Component });\nBubbleComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: { editor: \"editor\" }, ngImport: i0, template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }, { kind: \"directive\", type: i3.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: BubbleComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-bubble', template: \"<ng-container *ngFor=\\\"let toolbarItem of toolbar; let lastToolbarItem = last; trackBy: trackByIndex\\\">\\n  <ng-container *ngFor=\\\"let item of toolbarItem; let lastItem = last; trackBy: trackByIndex\\\">\\n    <div class=\\\"NgxBubbleMenu__Icon\\\" [ngClass]=\\\"{'NgxBubbleMenu__Icon--Active': this.activeItems.includes(item),\\n  'NgxEditor--Disabled': !this.execulableItems.includes(item)}\\\" (mousedown)=\\\"onClick($event, item)\\\"\\n      *ngIf=\\\"toggleCommands.includes(item)\\\" [title]=\\\"getTitle(item)\\\" [innerHTML]=\\\"getIcon(item)\\\">\\n    </div>\\n    <div class=\\\"NgxBubbleMenu__Seperator\\\" *ngIf=\\\"lastItem && !lastToolbarItem\\\"></div>\\n  </ng-container>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{display:flex;flex-wrap:wrap;background-color:#000;color:#fff;padding:5px;border-radius:4px}.NgxBubbleMenu__Icon{height:30px;width:30px;transition:.3s ease-in-out;border-radius:2px;display:flex;align-items:center;justify-content:center;color:#fff}.NgxBubbleMenu__Icon:hover{background-color:#636262}.NgxBubbleMenu__Icon+.NgxBubbleMenu__Icon{margin-left:5px}.NgxBubbleMenu__Icon.NgxBubbleMenu__Icon--Active{background-color:#fff;color:#000}.NgxBubbleMenu__Seperator{border-left:1px solid white;margin:0 5px}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: SanitizeHtmlPipe }, { type: NgxEditorService }]; }, propDecorators: { editor: [{\n                type: Input\n            }] } });\n\nclass FloatingMenuComponent {\n    constructor(el) {\n        this.el = el;\n        this.autoPlace = false;\n        this.posLeft = 0;\n        this.posTop = 0;\n        this.showMenu = false;\n        this.dragging = false;\n    }\n    get display() {\n        return {\n            visibility: this.showMenu ? 'visible' : 'hidden',\n            opacity: this.showMenu ? '1' : '0',\n            top: `${this.posTop}px`,\n            left: `${this.posLeft}px`,\n        };\n    }\n    get view() {\n        return this.editor.view;\n    }\n    onMouseDown(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) && target.nodeName !== 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = true;\n    }\n    onKeyDown(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = true;\n        this.hide();\n    }\n    onMouseUp(e) {\n        const target = e.target;\n        if (this.el.nativeElement.contains(target) || target.nodeName === 'INPUT') {\n            e.preventDefault();\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    onKeyUp(e) {\n        const target = e.target;\n        if (target.nodeName === 'INPUT') {\n            return;\n        }\n        this.dragging = false;\n        this.useUpdate();\n    }\n    useUpdate() {\n        if (!this.view) {\n            return;\n        }\n        this.update(this.view);\n    }\n    hide() {\n        this.showMenu = false;\n    }\n    show() {\n        this.showMenu = true;\n    }\n    async calculateBubblePosition(view) {\n        const { state: { selection } } = view;\n        const { from, to } = selection;\n        const start = view.coordsAtPos(from);\n        const end = view.coordsAtPos(to);\n        const selectionElement = {\n            getBoundingClientRect() {\n                if (selection instanceof NodeSelection) {\n                    const node = view.nodeDOM(from);\n                    return node.getBoundingClientRect();\n                }\n                const { top, left } = start;\n                const { bottom, right } = end;\n                return {\n                    x: left,\n                    y: top,\n                    top,\n                    bottom,\n                    left,\n                    right,\n                    width: right - left,\n                    height: bottom - top,\n                };\n            },\n        };\n        // the floating bubble itself\n        const bubbleEl = this.el.nativeElement;\n        const { x: left, y: top } = await computePosition(selectionElement, bubbleEl, {\n            placement: 'top',\n            middleware: [\n                offset(5),\n                this.autoPlace && autoPlacement({\n                    boundary: view.dom,\n                    padding: 5,\n                    allowedPlacements: ['top', 'bottom'],\n                }),\n                {\n                    // prevent overflow on right and left side\n                    // since only top and bottom placements are allowed\n                    // autoplacement can't handle overflows on the right and left\n                    name: 'overflowMiddleware',\n                    async fn(middlewareArgs) {\n                        const overflow = await detectOverflow(middlewareArgs, {\n                            boundary: view.dom,\n                            padding: 5,\n                        });\n                        // overflows left\n                        if (overflow.left > 0) {\n                            return {\n                                x: middlewareArgs.x + overflow.left,\n                            };\n                        }\n                        // overflows right\n                        if (overflow.right > 0) {\n                            return {\n                                x: middlewareArgs.x - overflow.right,\n                            };\n                        }\n                        return {};\n                    },\n                },\n            ].filter(Boolean),\n        });\n        return {\n            left,\n            top,\n        };\n    }\n    canShowMenu(view) {\n        const { state } = view;\n        const { selection } = state;\n        const { empty } = selection;\n        if (selection instanceof NodeSelection) {\n            if (selection.node.type.name === 'image') {\n                return false;\n            }\n        }\n        const hasFocus = this.view.hasFocus();\n        if (!hasFocus || empty || this.dragging) {\n            this.hide();\n            return false;\n        }\n        return true;\n    }\n    update(view) {\n        const canShowMenu = this.canShowMenu(view);\n        if (!canShowMenu) {\n            this.hide();\n            return;\n        }\n        this.calculateBubblePosition(this.view).then(({ top, left }) => {\n            if (!this.canShowMenu) {\n                this.hide();\n                return;\n            }\n            this.posLeft = left;\n            this.posTop = top;\n            this.show();\n        });\n    }\n    ngOnInit() {\n        if (!this.editor) {\n            throw new NgxEditorError('Required editor instance to initialize floating menu component');\n        }\n        this.updateSubscription = this.editor.update\n            .subscribe((view) => {\n            this.update(view);\n        });\n        this.resizeSubscription = fromEvent(window, 'resize').pipe(throttleTime(500, asyncScheduler, { leading: true, trailing: true })).subscribe(() => {\n            this.useUpdate();\n        });\n    }\n    ngOnDestroy() {\n        this.updateSubscription.unsubscribe();\n        this.resizeSubscription.unsubscribe();\n    }\n}\nFloatingMenuComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: FloatingMenuComponent, deps: [{ token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Component });\nFloatingMenuComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"14.2.12\", type: FloatingMenuComponent, selector: \"ngx-editor-floating-menu\", inputs: { editor: \"editor\", autoPlace: \"autoPlace\" }, host: { listeners: { \"document:mousedown\": \"onMouseDown($event)\", \"document:keydown\": \"onKeyDown($event)\", \"document:mouseup\": \"onMouseUp($event)\", \"document:keyup\": \"onKeyUp($event)\" }, properties: { \"style\": \"this.display\" } }, ngImport: i0, template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"], dependencies: [{ kind: \"directive\", type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { kind: \"component\", type: BubbleComponent, selector: \"ngx-bubble\", inputs: [\"editor\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: FloatingMenuComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'ngx-editor-floating-menu', template: \"<div #ref>\\n  <ng-content></ng-content>\\n</div>\\n<ng-container *ngIf=\\\"ref.children.length === 0\\\">\\n  <ngx-bubble [editor]=\\\"editor\\\"></ngx-bubble>\\n</ng-container>\\n\", styles: [\"*,*:before,*:after{box-sizing:border-box}:host{position:absolute;z-index:20;margin-bottom:5px;visibility:hidden;opacity:0}\\n\"] }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }]; }, propDecorators: { display: [{\n                type: HostBinding,\n                args: ['style']\n            }], editor: [{\n                type: Input\n            }], autoPlace: [{\n                type: Input\n            }], onMouseDown: [{\n                type: HostListener,\n                args: ['document:mousedown', ['$event']]\n            }], onKeyDown: [{\n                type: HostListener,\n                args: ['document:keydown', ['$event']]\n            }], onMouseUp: [{\n                type: HostListener,\n                args: ['document:mouseup', ['$event']]\n            }], onKeyUp: [{\n                type: HostListener,\n                args: ['document:keyup', ['$event']]\n            }] } });\n\nclass MenuModule {\n}\nMenuModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMenuModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuModule, declarations: [\n        // pipes\n        SanitizeHtmlPipe,\n        // components\n        MenuComponent,\n        ToggleCommandComponent,\n        InsertCommandComponent,\n        LinkComponent,\n        DropdownComponent,\n        ImageComponent,\n        ColorPickerComponent,\n        FloatingMenuComponent,\n        BubbleComponent], imports: [CommonModule,\n        ReactiveFormsModule], exports: [MenuComponent,\n        FloatingMenuComponent] });\nMenuModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuModule, providers: [\n        SanitizeHtmlPipe,\n    ], imports: [CommonModule,\n        ReactiveFormsModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: MenuModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        ReactiveFormsModule,\n                    ],\n                    declarations: [\n                        // pipes\n                        SanitizeHtmlPipe,\n                        // components\n                        MenuComponent,\n                        ToggleCommandComponent,\n                        InsertCommandComponent,\n                        LinkComponent,\n                        DropdownComponent,\n                        ImageComponent,\n                        ColorPickerComponent,\n                        FloatingMenuComponent,\n                        BubbleComponent,\n                    ],\n                    providers: [\n                        SanitizeHtmlPipe,\n                    ],\n                    exports: [\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst NGX_EDITOR_CONFIG_TOKEN = new InjectionToken('NgxEditorConfig');\nconst defaultConfig = {\n    locals: defaults,\n};\nclass NgxEditorModule {\n    static forRoot(config = defaultConfig) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n            ],\n        };\n    }\n    static forChild(config = defaultConfig) {\n        return {\n            ngModule: NgxEditorModule,\n            providers: [\n                {\n                    provide: NGX_EDITOR_CONFIG_TOKEN,\n                    useValue: config,\n                },\n                {\n                    provide: NgxEditorServiceConfig,\n                    useFactory: provideMyServiceOptions,\n                    deps: [NGX_EDITOR_CONFIG_TOKEN],\n                },\n                NgxEditorService,\n            ],\n        };\n    }\n}\nNgxEditorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNgxEditorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorModule, declarations: [NgxEditorComponent,\n        ImageViewComponent], imports: [CommonModule,\n        MenuModule], exports: [NgxEditorComponent,\n        MenuComponent,\n        FloatingMenuComponent] });\nNgxEditorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorModule, imports: [CommonModule,\n        MenuModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: NgxEditorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule,\n                        MenuModule,\n                    ],\n                    providers: [],\n                    declarations: [\n                        NgxEditorComponent,\n                        ImageViewComponent,\n                    ],\n                    exports: [\n                        NgxEditorComponent,\n                        MenuComponent,\n                        FloatingMenuComponent,\n                    ],\n                }]\n        }] });\n\nconst isEmptyInputValue = (value) => {\n    // we don't check for string here so it also works with arrays\n    return value === null || value.length === 0;\n};\nconst hasValidLength = (value) => {\n    // non-strict comparison is intentional, to check for both `null` and `undefined` values\n    return value !== null && typeof value.length === 'number';\n};\nconst isDocEmpty = (doc) => {\n    if (!doc) {\n        return true;\n    }\n    const { childCount, firstChild } = doc;\n    return Boolean(childCount === 1 && firstChild?.isTextblock && firstChild.content.size === 0);\n};\n// @dynamic\nclass Validators {\n    static required(userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const isEmpty = isDocEmpty(doc);\n            if (!isEmpty) {\n                return null;\n            }\n            return {\n                required: true,\n            };\n        };\n    }\n    static maxLength(maxLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (hasValidLength(value) && value.length > maxLength) {\n                return {\n                    maxlength: {\n                        requiredLength: maxLength,\n                        actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n    static minLength(minLength, userSchema) {\n        return (control) => {\n            const schema$1 = userSchema || schema;\n            const doc = parseContent(control.value, schema$1);\n            const value = doc.textContent;\n            if (isEmptyInputValue(value) || !hasValidLength(value)) {\n                // don't validate empty values to allow optional controls\n                // don't validate values without `length` property\n                return null;\n            }\n            if (value.length < minLength) {\n                return {\n                    minlength: {\n                        requiredLength: minLength, actualLength: value.length,\n                    },\n                };\n            }\n            return null;\n        };\n    }\n}\n\nconst execMark = (name, toggle = false) => {\n    return (state, dispatch) => {\n        const command = new Mark(name);\n        if (!toggle) {\n            return command.apply()(state, dispatch);\n        }\n        return command.toggle()(state, dispatch);\n    };\n};\nclass EditorCommands {\n    constructor(view) {\n        this.applyTrx = (tr) => {\n            this.state = this.state.apply(tr ?? this.tr);\n            this.tr = this.state.tr;\n            this.tr.setMeta('APPLIED_TRX', true);\n        };\n        this.dispatch = (tr) => {\n            this.applyTrx(tr);\n        };\n        if (!view) {\n            throw new NgxEditorError('Required view to initialize commands.');\n        }\n        this.view = view;\n        this.state = view.state;\n        this.tr = this.view.state.tr;\n    }\n    exec() {\n        // No changes applied\n        if (!this.tr.getMeta('APPLIED_TRX')) {\n            return false;\n        }\n        const forceEmit = !this.view.state.doc.eq(this.state.doc);\n        this.view.updateState(this.state);\n        const tr = this.tr\n            .setMeta('FORCE_EMIT', forceEmit);\n        this.view.dispatch(tr);\n        return true;\n    }\n    focus() {\n        this.view.focus();\n        return this;\n    }\n    scrollIntoView() {\n        this.tr.scrollIntoView();\n        this.applyTrx();\n        return this;\n    }\n    insertText(text) {\n        this.tr.insertText(text);\n        this.applyTrx();\n        return this;\n    }\n    insertNewLine() {\n        const newLineCommands = [newlineInCode, createParagraphNear, liftEmptyBlock, splitBlock];\n        chainCommands(...newLineCommands)(this.state, this.dispatch);\n        return this;\n    }\n    applyMark(name) {\n        execMark(name, false)(this.state, this.dispatch);\n        return this;\n    }\n    toggleMark(name) {\n        execMark(name, true)(this.state, this.dispatch);\n        return this;\n    }\n    bold() {\n        execMark('strong')(this.state, this.dispatch);\n        return this;\n    }\n    toggleBold() {\n        execMark('strong', true)(this.state, this.dispatch);\n        return this;\n    }\n    italics() {\n        execMark('em')(this.state, this.dispatch);\n        return this;\n    }\n    toggleItalics() {\n        execMark('em', true)(this.state, this.dispatch);\n        return this;\n    }\n    underline() {\n        execMark('u')(this.state, this.dispatch);\n        return this;\n    }\n    toggleUnderline() {\n        execMark('u', true)(this.state, this.dispatch);\n        return this;\n    }\n    strike() {\n        execMark('s')(this.state, this.dispatch);\n        return this;\n    }\n    toggleStrike() {\n        execMark('s', true)(this.state, this.dispatch);\n        return this;\n    }\n    code() {\n        execMark('code')(this.state, this.dispatch);\n        return this;\n    }\n    toggleCode() {\n        execMark('code', true)(this.state, this.dispatch);\n        return this;\n    }\n    toggleOrderedList() {\n        const command = new ListItem(false);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleBulletList() {\n        const command = new ListItem(true);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    toggleHeading(level) {\n        const command = new Heading(level);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertLink(text, attrs) {\n        const command = new Link$1();\n        command.insert(text, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    updateLink(attrs) {\n        const command = new Link$1();\n        command.update(attrs)(this.state, this.dispatch);\n        return this;\n    }\n    insertImage(src, attrs = {}) {\n        const command = new Image$1();\n        command.insert(src, attrs)(this.state, this.dispatch);\n        return this;\n    }\n    textColor(color) {\n        const command = new TextColor$1('text_color');\n        command.apply({ color })(this.state, this.dispatch);\n        return this;\n    }\n    backgroundColor(color) {\n        const command = new TextColor$1('text_background_color');\n        command.apply({ backgroundColor: color })(this.state, this.dispatch);\n        return this;\n    }\n    removeTextColor() {\n        const command = new TextColor$1('text_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    removeBackgroundColor() {\n        const command = new TextColor$1('text_background_color');\n        command.remove()(this.state, this.dispatch);\n        return this;\n    }\n    align(p) {\n        const command = new TextAlign(p);\n        command.toggle()(this.state, this.dispatch);\n        return this;\n    }\n    insertHTML(html) {\n        const { selection, schema, tr } = this.state;\n        const { from, to } = selection;\n        const element = document.createElement('div');\n        element.innerHTML = html.trim();\n        const slice = DOMParser.fromSchema(schema).parseSlice(element);\n        const transaction = tr.replaceRange(from, to, slice);\n        this.applyTrx(transaction);\n        return this;\n    }\n}\n\nconst isMacOs = typeof navigator !== 'undefined'\n    ? (/Mac/).test(navigator.platform)\n    : false;\n// Input rules ref: https://github.com/ProseMirror/prosemirror-example-setup/\n// : (NodeType) → InputRule\n// Given a blockquote node type, returns an input rule that turns `\"> \"`\n// at the start of a textblock into a blockquote.\nconst blockQuoteRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*>\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a number\n// followed by a dot at the start of a textblock into an ordered list.\nconst orderedListRule = (nodeType) => {\n    return wrappingInputRule(/^(?:\\d+)\\.\\s$/, nodeType, (match) => ({ order: Number(match[1]) }), (match, node) => node.childCount + node.attrs['order'] === Number(match[1]));\n};\n// : (NodeType) → InputRule\n// Given a list node type, returns an input rule that turns a bullet\n// (dash, plush, or asterisk) at the start of a textblock into a\n// bullet list.\nconst bulletListRule = (nodeType) => {\n    return wrappingInputRule(/^\\s*(?:[-+*])\\s$/, nodeType);\n};\n// : (NodeType) → InputRule\n// Given a code block node type, returns an input rule that turns a\n// textblock starting with three backticks into a code block.\nconst codeBlockRule = (nodeType) => {\n    return textblockTypeInputRule(/^```$/, nodeType);\n};\n// : (NodeType, number) → InputRule\n// Given a node type and a maximum level, creates an input rule that\n// turns up to that number of `#` characters followed by a space at\n// the start of a textblock into a heading whose level corresponds to\n// the number of `#` signs.\nconst headingRule = (nodeType, maxLevel) => {\n    return textblockTypeInputRule(new RegExp(`^(#{1,${maxLevel}})\\\\s$`), nodeType, (match) => ({ level: match[1].length }));\n};\n// : (MarkType) → InputRule\n// Wraps matching text with bold mark\nconst boldRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*\\*|__)(?:(?:[^*_]+))(?:\\*\\*|__))$/, markType);\n};\n// : (MarkType) → InputRule\n// Wraps matching text with em mark\nconst emRule = (markType) => {\n    return markInputRule(/(?:^|\\s)(?:(?:\\*|_)(?:(?:[^*_]+))(?:\\*|_))$/, markType);\n};\n// : (Schema) → Plugin\n// A set of input rules for creating the basic block quotes, lists,\n// code blocks, and heading.\nconst buildInputRules = (schema) => {\n    const rules = smartQuotes.concat(ellipsis, emDash);\n    rules.push(boldRule(schema.marks['strong']));\n    rules.push(emRule(schema.marks['em']));\n    rules.push(blockQuoteRule(schema.nodes['blockquote']));\n    rules.push(orderedListRule(schema.nodes['ordered_list']));\n    rules.push(bulletListRule(schema.nodes['bullet_list']));\n    rules.push(codeBlockRule(schema.nodes['code_block']));\n    rules.push(headingRule(schema.nodes['heading'], 6));\n    return inputRules({ rules });\n};\nconst getKeyboardShortcuts = (schema, options) => {\n    const historyKeyMap = {};\n    historyKeyMap['Mod-z'] = undo;\n    if (isMacOs) {\n        historyKeyMap['Shift-Mod-z'] = redo;\n    }\n    else {\n        historyKeyMap['Mod-y'] = redo;\n    }\n    const plugins = [\n        keymap({\n            'Mod-b': toggleMark(schema.marks['strong']),\n            'Mod-i': toggleMark(schema.marks['em']),\n            'Mod-u': toggleMark(schema.marks['u']),\n            'Mod-`': toggleMark(schema.marks['code']),\n        }),\n        keymap({\n            'Enter': splitListItem(schema.nodes['list_item']),\n            'Shift-Enter': chainCommands(exitCode, (state, dispatch) => {\n                const { tr } = state;\n                const br = schema.nodes['hard_break'];\n                dispatch(tr.replaceSelectionWith(br.create()).scrollIntoView());\n                return true;\n            }),\n            'Mod-[': liftListItem(schema.nodes['list_item']),\n            'Mod-]': sinkListItem(schema.nodes['list_item']),\n            'Tab': sinkListItem(schema.nodes['list_item']),\n        }),\n        keymap(baseKeymap),\n    ];\n    if (options.history) {\n        plugins.push(keymap(historyKeyMap));\n    }\n    return plugins;\n};\nconst getDefaultPlugins = (schema, options) => {\n    const plugins = [];\n    if (options.keyboardShortcuts) {\n        plugins.push(...getKeyboardShortcuts(schema, { history: options.history }));\n    }\n    if (options.history) {\n        plugins.push(history());\n    }\n    if (options.inputRules) {\n        plugins.push(buildInputRules(schema));\n    }\n    return plugins;\n};\n\nconst defaultFeatures = {\n    linkOnPaste: true,\n    resizeImage: true,\n};\nconst DEFAULT_OPTIONS = {\n    content: null,\n    history: true,\n    keyboardShortcuts: true,\n    inputRules: true,\n    schema: schema,\n    plugins: [],\n    nodeViews: {},\n    attributes: {},\n    features: defaultFeatures,\n    handleScrollToSelection: null,\n    linkValidationPattern: '(https?://)?([\\\\da-z.-]+)\\\\.([a-z.]{2,6})[/\\\\w .-]*/??([^#\\n\\r]*)?#?([^\\n\\r]*)|(mailto:.*[@].*)',\n};\nclass Editor {\n    constructor(options = DEFAULT_OPTIONS) {\n        this.valueChangesSubject = new Subject();\n        this.updateSubject = new Subject();\n        this.options = { ...DEFAULT_OPTIONS, ...options };\n        this.createEditor();\n    }\n    get valueChanges() {\n        return this.valueChangesSubject.asObservable();\n    }\n    get update() {\n        return this.updateSubject.asObservable();\n    }\n    get schema() {\n        return this.options.schema || schema;\n    }\n    get linkValidationPattern() {\n        return this.options.linkValidationPattern;\n    }\n    get commands() {\n        return new EditorCommands(this.view);\n    }\n    get features() {\n        return { ...defaultFeatures, ...this.options.features };\n    }\n    handleTransactions(tr) {\n        const state = this.view.state.apply(tr);\n        this.view.updateState(state);\n        this.updateSubject.next(this.view);\n        if (!tr.docChanged && !tr.getMeta('FORCE_EMIT')) {\n            return;\n        }\n        const json = state.doc.toJSON();\n        this.valueChangesSubject.next(json);\n    }\n    createEditor() {\n        const { options, schema } = this;\n        const { content = null, nodeViews } = options;\n        const { history = true, keyboardShortcuts = true, inputRules = true } = options;\n        const doc = parseContent(content, schema);\n        const plugins = options.plugins ?? [];\n        const attributes = options.attributes ?? {};\n        const defaultPlugins = getDefaultPlugins(schema, {\n            history,\n            keyboardShortcuts,\n            inputRules,\n        });\n        this.view = new EditorView(null, {\n            state: EditorState.create({\n                doc,\n                schema,\n                plugins: [...defaultPlugins, ...plugins],\n            }),\n            nodeViews,\n            dispatchTransaction: this.handleTransactions.bind(this),\n            attributes,\n            handleScrollToSelection: options.handleScrollToSelection,\n        });\n    }\n    setContent(content) {\n        if (isNil(content)) {\n            return;\n        }\n        const { state } = this.view;\n        const { tr, doc } = state;\n        const newDoc = parseContent(content, this.schema);\n        tr.replaceWith(0, state.doc.content.size, newDoc);\n        // don't emit if both content is same\n        if (doc.eq(tr.doc)) {\n            return;\n        }\n        if (!tr.docChanged) {\n            return;\n        }\n        this.view.dispatch(tr);\n    }\n    registerPlugin(plugin) {\n        const { state } = this.view;\n        const plugins = [...state.plugins, plugin];\n        const newState = state.reconfigure({ plugins });\n        this.view.updateState(newState);\n    }\n    destroy() {\n        this.view.destroy();\n    }\n}\n\n/*\n * Public API Surface of ngx-editor\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DEFAULT_TOOLBAR, Editor, FloatingMenuComponent, MenuComponent, NGX_EDITOR_CONFIG_TOKEN, NgxEditorComponent, NgxEditorModule, NgxEditorService, TOOLBAR_FULL, TOOLBAR_MINIMAL, Validators, emptyDoc, getKeyboardShortcuts, parseContent, provideMyServiceOptions, toDoc, toHTML };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}