// Icons source: https://material.io/
import bold from './bold';
import italic from './italic';
import code from './code';
import underline from './underline';
import strike from './strike';
import orderedList from './ordered_list';
import bulletList from './bullet_list';
import quote from './quote';
import link from './link';
import unlink from './unlink';
import image from './image';
import alignLeft from './align_left';
import alignCenter from './align_center';
import alignRight from './align_right';
import alignJustify from './align_justify';
import textColor from './text_color';
import colorFill from './color_fill';
import horizontalRule from './horizontal_rule';
import formatClear from './format_clear';
const DEFAULT_ICON_HEIGHT = 20;
const DEFAULT_ICON_WIDTH = 20;
const DEFAULT_ICON_FILL = 'currentColor';
const icons = {
    bold,
    italic,
    code,
    underline,
    strike,
    ordered_list: orderedList,
    bullet_list: bulletList,
    blockquote: quote,
    link,
    unlink,
    image,
    align_left: alignLeft,
    align_center: alignCenter,
    align_right: alignRight,
    align_justify: alignJustify,
    text_color: textColor,
    color_fill: colorFill,
    horizontal_rule: horizontalRule,
    format_clear: formatClear,
};
class Icon {
    static get(name, fill = DEFAULT_ICON_FILL) {
        const path = icons[name] || '<path></path>';
        return `
      <svg
        xmlns="http://www.w3.org/2000/svg"
        viewBox="0 0 24 24"
        fill=${fill}
        height=${DEFAULT_ICON_HEIGHT}
        width=${DEFAULT_ICON_WIDTH}
      >
        ${path}
      </svg>
    `;
    }
}
export default Icon;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtZWRpdG9yL3NyYy9saWIvaWNvbnMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEscUNBQXFDO0FBRXJDLE9BQU8sSUFBSSxNQUFNLFFBQVEsQ0FBQztBQUMxQixPQUFPLE1BQU0sTUFBTSxVQUFVLENBQUM7QUFDOUIsT0FBTyxJQUFJLE1BQU0sUUFBUSxDQUFDO0FBQzFCLE9BQU8sU0FBUyxNQUFNLGFBQWEsQ0FBQztBQUNwQyxPQUFPLE1BQU0sTUFBTSxVQUFVLENBQUM7QUFDOUIsT0FBTyxXQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxVQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sS0FBSyxNQUFNLFNBQVMsQ0FBQztBQUM1QixPQUFPLElBQUksTUFBTSxRQUFRLENBQUM7QUFDMUIsT0FBTyxNQUFNLE1BQU0sVUFBVSxDQUFDO0FBQzlCLE9BQU8sS0FBSyxNQUFNLFNBQVMsQ0FBQztBQUM1QixPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxXQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFDekMsT0FBTyxVQUFVLE1BQU0sZUFBZSxDQUFDO0FBQ3ZDLE9BQU8sWUFBWSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sU0FBUyxNQUFNLGNBQWMsQ0FBQztBQUNyQyxPQUFPLFNBQVMsTUFBTSxjQUFjLENBQUM7QUFDckMsT0FBTyxjQUFjLE1BQU0sbUJBQW1CLENBQUM7QUFDL0MsT0FBTyxXQUFXLE1BQU0sZ0JBQWdCLENBQUM7QUFFekMsTUFBTSxtQkFBbUIsR0FBRyxFQUFFLENBQUM7QUFDL0IsTUFBTSxrQkFBa0IsR0FBRyxFQUFFLENBQUM7QUFDOUIsTUFBTSxpQkFBaUIsR0FBRyxjQUFjLENBQUM7QUFFekMsTUFBTSxLQUFLLEdBQXdCO0lBQ2pDLElBQUk7SUFDSixNQUFNO0lBQ04sSUFBSTtJQUNKLFNBQVM7SUFDVCxNQUFNO0lBQ04sWUFBWSxFQUFFLFdBQVc7SUFDekIsV0FBVyxFQUFFLFVBQVU7SUFDdkIsVUFBVSxFQUFFLEtBQUs7SUFDakIsSUFBSTtJQUNKLE1BQU07SUFDTixLQUFLO0lBQ0wsVUFBVSxFQUFFLFNBQVM7SUFDckIsWUFBWSxFQUFFLFdBQVc7SUFDekIsV0FBVyxFQUFFLFVBQVU7SUFDdkIsYUFBYSxFQUFFLFlBQVk7SUFDM0IsVUFBVSxFQUFFLFNBQVM7SUFDckIsVUFBVSxFQUFFLFNBQVM7SUFDckIsZUFBZSxFQUFFLGNBQWM7SUFDL0IsWUFBWSxFQUFFLFdBQVc7Q0FDMUIsQ0FBQztBQUVGLE1BQU0sSUFBSTtJQUNSLE1BQU0sQ0FBQyxHQUFHLENBQUMsSUFBd0IsRUFBRSxJQUFJLEdBQUcsaUJBQWlCO1FBQzNELE1BQU0sSUFBSSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxlQUFlLENBQUM7UUFDNUMsT0FBTzs7OztlQUlJLElBQUk7aUJBQ0YsbUJBQW1CO2dCQUNwQixrQkFBa0I7O1VBRXhCLElBQUk7O0tBRVQsQ0FBQztJQUNKLENBQUM7Q0FDRjtBQUVELGVBQWUsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gSWNvbnMgc291cmNlOiBodHRwczovL21hdGVyaWFsLmlvL1xuXG5pbXBvcnQgYm9sZCBmcm9tICcuL2JvbGQnO1xuaW1wb3J0IGl0YWxpYyBmcm9tICcuL2l0YWxpYyc7XG5pbXBvcnQgY29kZSBmcm9tICcuL2NvZGUnO1xuaW1wb3J0IHVuZGVybGluZSBmcm9tICcuL3VuZGVybGluZSc7XG5pbXBvcnQgc3RyaWtlIGZyb20gJy4vc3RyaWtlJztcbmltcG9ydCBvcmRlcmVkTGlzdCBmcm9tICcuL29yZGVyZWRfbGlzdCc7XG5pbXBvcnQgYnVsbGV0TGlzdCBmcm9tICcuL2J1bGxldF9saXN0JztcbmltcG9ydCBxdW90ZSBmcm9tICcuL3F1b3RlJztcbmltcG9ydCBsaW5rIGZyb20gJy4vbGluayc7XG5pbXBvcnQgdW5saW5rIGZyb20gJy4vdW5saW5rJztcbmltcG9ydCBpbWFnZSBmcm9tICcuL2ltYWdlJztcbmltcG9ydCBhbGlnbkxlZnQgZnJvbSAnLi9hbGlnbl9sZWZ0JztcbmltcG9ydCBhbGlnbkNlbnRlciBmcm9tICcuL2FsaWduX2NlbnRlcic7XG5pbXBvcnQgYWxpZ25SaWdodCBmcm9tICcuL2FsaWduX3JpZ2h0JztcbmltcG9ydCBhbGlnbkp1c3RpZnkgZnJvbSAnLi9hbGlnbl9qdXN0aWZ5JztcbmltcG9ydCB0ZXh0Q29sb3IgZnJvbSAnLi90ZXh0X2NvbG9yJztcbmltcG9ydCBjb2xvckZpbGwgZnJvbSAnLi9jb2xvcl9maWxsJztcbmltcG9ydCBob3Jpem9udGFsUnVsZSBmcm9tICcuL2hvcml6b250YWxfcnVsZSc7XG5pbXBvcnQgZm9ybWF0Q2xlYXIgZnJvbSAnLi9mb3JtYXRfY2xlYXInO1xuXG5jb25zdCBERUZBVUxUX0lDT05fSEVJR0hUID0gMjA7XG5jb25zdCBERUZBVUxUX0lDT05fV0lEVEggPSAyMDtcbmNvbnN0IERFRkFVTFRfSUNPTl9GSUxMID0gJ2N1cnJlbnRDb2xvcic7XG5cbmNvbnN0IGljb25zOiBSZWNvcmQ8c3RyaW5nLCBhbnk+ID0ge1xuICBib2xkLFxuICBpdGFsaWMsXG4gIGNvZGUsXG4gIHVuZGVybGluZSxcbiAgc3RyaWtlLFxuICBvcmRlcmVkX2xpc3Q6IG9yZGVyZWRMaXN0LFxuICBidWxsZXRfbGlzdDogYnVsbGV0TGlzdCxcbiAgYmxvY2txdW90ZTogcXVvdGUsXG4gIGxpbmssXG4gIHVubGluayxcbiAgaW1hZ2UsXG4gIGFsaWduX2xlZnQ6IGFsaWduTGVmdCxcbiAgYWxpZ25fY2VudGVyOiBhbGlnbkNlbnRlcixcbiAgYWxpZ25fcmlnaHQ6IGFsaWduUmlnaHQsXG4gIGFsaWduX2p1c3RpZnk6IGFsaWduSnVzdGlmeSxcbiAgdGV4dF9jb2xvcjogdGV4dENvbG9yLFxuICBjb2xvcl9maWxsOiBjb2xvckZpbGwsXG4gIGhvcml6b250YWxfcnVsZTogaG9yaXpvbnRhbFJ1bGUsXG4gIGZvcm1hdF9jbGVhcjogZm9ybWF0Q2xlYXIsXG59O1xuXG5jbGFzcyBJY29uIHtcbiAgc3RhdGljIGdldChuYW1lOiBrZXlvZiB0eXBlb2YgaWNvbnMsIGZpbGwgPSBERUZBVUxUX0lDT05fRklMTCk6IHN0cmluZyB7XG4gICAgY29uc3QgcGF0aCA9IGljb25zW25hbWVdIHx8ICc8cGF0aD48L3BhdGg+JztcbiAgICByZXR1cm4gYFxuICAgICAgPHN2Z1xuICAgICAgICB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCJcbiAgICAgICAgdmlld0JveD1cIjAgMCAyNCAyNFwiXG4gICAgICAgIGZpbGw9JHtmaWxsfVxuICAgICAgICBoZWlnaHQ9JHtERUZBVUxUX0lDT05fSEVJR0hUfVxuICAgICAgICB3aWR0aD0ke0RFRkFVTFRfSUNPTl9XSURUSH1cbiAgICAgID5cbiAgICAgICAgJHtwYXRofVxuICAgICAgPC9zdmc+XG4gICAgYDtcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBJY29uO1xuIl19